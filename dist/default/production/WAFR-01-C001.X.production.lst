

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Oct 14 15:10:19 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     _ADCON0	set	4034
    38  0000                     _ADCON0bits	set	4034
    39  0000                     _ADCON1bits	set	4033
    40  0000                     _ADCON2bits	set	4032
    41  0000                     _ADRESH	set	4036
    42  0000                     _ADRESL	set	4035
    43  0000                     _EEADR	set	4009
    44  0000                     _EECON1bits	set	4006
    45  0000                     _EECON2	set	4007
    46  0000                     _EEDATA	set	4008
    47  0000                     _INTCON2bits	set	4081
    48  0000                     _INTCONbits	set	4082
    49  0000                     _PIR1bits	set	3998
    50  0000                     _PORTAbits	set	3968
    51  0000                     _PORTBbits	set	3969
    52  0000                     _PORTC	set	3970
    53  0000                     _PORTCbits	set	3970
    54  0000                     _T0CONbits	set	4053
    55  0000                     _TMR0H	set	4055
    56  0000                     _TMR0L	set	4054
    57  0000                     _TRISAbits	set	3986
    58  0000                     _TRISBbits	set	3987
    59  0000                     _TRISCbits	set	3988
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  000B74                     __pcinit:
    65                           	opt stack 0
    66  000B74                     start_initialization:
    67                           	opt stack 0
    68  000B74                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to BANK0 (40 bytes)
    72  000B74  EE00  F080         	lfsr	0,__pbssBANK0
    73  000B78  0E28               	movlw	40
    74  000B7A                     clear_0:
    75  000B7A  6AEE               	clrf	postinc0,c
    76  000B7C  06E8               	decf	wreg,f,c
    77  000B7E  E1FD               	bnz	clear_0
    78                           
    79                           ; Clear objects allocated to COMRAM (44 bytes)
    80  000B80  EE00  F039         	lfsr	0,__pbssCOMRAM
    81  000B84  0E2C               	movlw	44
    82  000B86                     clear_1:
    83  000B86  6AEE               	clrf	postinc0,c
    84  000B88  06E8               	decf	wreg,f,c
    85  000B8A  E1FD               	bnz	clear_1
    86  000B8C                     end_of_initialization:
    87                           	opt stack 0
    88  000B8C                     __end_of__initialization:
    89                           	opt stack 0
    90  000B8C  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91  000B8E  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92  000B90  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  000B92  6EF8               	movwf	tblptru,c
    94  000B94  0100               	movlb	0
    95  000B96  EF0D  F000         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000039                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000039                     _adcBatValue:
   104                           	opt stack 0
   105  000039                     	ds	20
   106  00004D                     _buttonPushTimeStart:
   107                           	opt stack 0
   108  00004D                     	ds	4
   109  000051                     _buttonPushTimeStop:
   110                           	opt stack 0
   111  000051                     	ds	4
   112  000055                     _pushButtonJitterTime:
   113                           	opt stack 0
   114  000055                     	ds	4
   115  000059                     _timeSystemRun:
   116                           	opt stack 0
   117  000059                     	ds	4
   118  00005D                     _timerHalfSecond:
   119                           	opt stack 0
   120  00005D                     	ds	2
   121  00005F                     _S2KeyPushTime:
   122                           	opt stack 0
   123  00005F                     	ds	1
   124  000060                     _cyData:
   125                           	opt stack 0
   126  000060                     	ds	1
   127  000061                     _flagS2KeyPushed:
   128                           	opt stack 0
   129  000061                     	ds	1
   130  000062                     _levelTmpSetting:
   131                           	opt stack 0
   132  000062                     	ds	1
   133  000063                     _timer0Count:
   134                           	opt stack 0
   135  000063                     	ds	1
   136  000064                     _timer1Count:
   137                           	opt stack 0
   138  000064                     	ds	1
   139                           tblptru	equ	0xFF8
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssBANK0
   144  000080                     __pbssBANK0:
   145                           	opt stack 0
   146  000080                     _adcAD597Value:
   147                           	opt stack 0
   148  000080                     	ds	20
   149  000094                     _adcChargeStatValue:
   150                           	opt stack 0
   151  000094                     	ds	20
   152                           tblptru	equ	0xFF8
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           
   156                           	psect	cstackBANK0
   157  0000A8                     __pcstackBANK0:
   158                           	opt stack 0
   159  0000A8                     main@countHeatTime:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x0
   163  0000A8                     	ds	4
   164  0000AC                     main@flagChargeBat:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0x4
   168  0000AC                     	ds	1
   169  0000AD                     main@keyValue:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x5
   173  0000AD                     	ds	1
   174  0000AE                     main@i:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x6
   178  0000AE                     	ds	2
   179  0000B0                     main@adcValue:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x8
   183  0000B0                     	ds	2
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	cstackCOMRAM
   189  000001                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000001                     ??_ISR:
   192  000001                     
   193                           ; 1 bytes @ 0x0
   194  000001                     	ds	22
   195  000017                     ??_ProcessButton:
   196  000017                     ?___lwdiv:
   197                           	opt stack 0
   198  000017                     WriteEEprom@data:
   199                           	opt stack 0
   200  000017                     ReadEEprom@addr:
   201                           	opt stack 0
   202  000017                     delay_ms@x:
   203                           	opt stack 0
   204  000017                     delay_10us@i:
   205                           	opt stack 0
   206  000017                     ___lwdiv@dividend:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x16
   210  000017                     	ds	1
   211  000018                     WriteEEprom@addr:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x17
   215  000018                     	ds	1
   216  000019                     ?_AD_Converter:
   217                           	opt stack 0
   218  000019                     delay_ms@j:
   219                           	opt stack 0
   220  000019                     ___lwdiv@divisor:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x18
   224  000019                     	ds	2
   225  00001B                     ??_AD_Converter:
   226  00001B                     ___lwdiv@counter:
   227                           	opt stack 0
   228  00001B                     delay_ms@i:
   229                           	opt stack 0
   230  00001B                     ProcessButton@buttonPushPeriod:
   231                           	opt stack 0
   232                           
   233                           ; 4 bytes @ 0x1A
   234  00001B                     	ds	1
   235  00001C                     ___lwdiv@quotient:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x1B
   239  00001C                     	ds	1
   240  00001D                     ??_ShutDownSystem:
   241  00001D                     AD_Converter@channelNumber:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x1C
   245  00001D                     	ds	1
   246  00001E                     AD_Converter@AD_Result:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x1D
   250  00001E                     	ds	2
   251  000020                     ?_GetAdcBatValue:
   252                           	opt stack 0
   253  000020                     ?_GetAdcChargBatValue:
   254                           	opt stack 0
   255  000020                     ?_GetAdcAD597Value:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x1F
   259  000020                     	ds	2
   260  000022                     ??_GetAdcBatValue:
   261  000022                     ??_GetAdcChargBatValue:
   262  000022                     ??_GetAdcAD597Value:
   263                           
   264                           ; 0 bytes @ 0x21
   265  000022                     	ds	2
   266  000024                     GetAdcBatValue@channelNumber:
   267                           	opt stack 0
   268  000024                     GetAdcAD597Value@channelNumber:
   269                           	opt stack 0
   270  000024                     GetAdcChargBatValue@channelNumber:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x23
   274  000024                     	ds	1
   275  000025                     GetAdcBatValue@temp:
   276                           	opt stack 0
   277  000025                     GetAdcAD597Value@temp:
   278                           	opt stack 0
   279  000025                     GetAdcChargBatValue@temp:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x24
   283  000025                     	ds	2
   284  000027                     GetAdcBatValue@i:
   285                           	opt stack 0
   286  000027                     GetAdcAD597Value@i:
   287                           	opt stack 0
   288  000027                     GetAdcChargBatValue@i:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x26
   292  000027                     	ds	1
   293  000028                     ??_ProcessHeat:
   294                           
   295                           ; 0 bytes @ 0x27
   296  000028                     	ds	4
   297  00002C                     ProcessHeat@flagStop:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x2B
   301  00002C                     	ds	1
   302  00002D                     ProcessHeat@countHeatTime:
   303                           	opt stack 0
   304                           
   305                           ; 4 bytes @ 0x2C
   306  00002D                     	ds	4
   307  000031                     ProcessHeat@adcValue:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x30
   311  000031                     	ds	2
   312  000033                     
   313                           ; 2 bytes @ 0x32
   314  000033                     	ds	2
   315  000035                     
   316                           ; 3 bytes @ 0x34
   317  000035                     	ds	3
   318  000038                     ??_main:
   319                           
   320                           ; 0 bytes @ 0x37
   321  000038                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 36 in file "WAFR-01-C001 HD-debug.X/WAFR-01-C001-HD-debug main/WAFR-01-C001-HD-debug-main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  argc            2   50[COMRAM] int 
   334 ;;  argv            3   52[COMRAM] PTR PTR unsigned char 
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  countHeatTim    4    0[BANK0 ] unsigned long 
   337 ;;  adcValue        2    8[BANK0 ] short 
   338 ;;  i               2    6[BANK0 ] unsigned int 
   339 ;;  keyValue        1    5[BANK0 ] char 
   340 ;;  flagChargeBa    1    4[BANK0 ] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2   50[COMRAM] int 
   343 ;; Registers used:
   344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   350 ;;      Params:         5       0       0       0
   351 ;;      Locals:         0      10       0       0
   352 ;;      Temps:          1       0       0       0
   353 ;;      Totals:         6      10       0       0
   354 ;;Total ram usage:       16 bytes
   355 ;; Hardware stack levels required when called:    5
   356 ;; This function calls:
   357 ;;		_GetAdcBatValue
   358 ;;		_GetAdcChargBatValue
   359 ;;		_InitializeAD
   360 ;;		_InitializeINT0
   361 ;;		_InitializeInterrupts
   362 ;;		_InitializeOscillator
   363 ;;		_InitializePinmux
   364 ;;		_InitializeTimer0
   365 ;;		_LevelTmpSetShow
   366 ;;		_ProcessButton
   367 ;;		_ProcessHeat
   368 ;;		_ReadEEprom
   369 ;;		_ShutDownSystem
   370 ;;		_delay_ms
   371 ;;		_turnOffAllLed
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text0
   378  00001A                     __ptext0:
   379                           	opt stack 0
   380  00001A                     _main:
   381                           	opt stack 26
   382                           
   383                           ;WAFR-01-C001-HD-debug-main.c: 38: unsigned int i;
   384                           ;WAFR-01-C001-HD-debug-main.c: 39: int8 keyValue;
   385                           ;WAFR-01-C001-HD-debug-main.c: 43: int16 adcValue;
   386                           ;WAFR-01-C001-HD-debug-main.c: 45: uint32 countHeatTime = 0 ;
   387                           
   388                           ;incstack = 0
   389  00001A  0E00               	movlw	0
   390  00001C  0100               	movlb	0	; () banked
   391  00001E  6FA8               	movwf	main@countHeatTime& (0+255),b
   392  000020  0E00               	movlw	0
   393  000022  6FA9               	movwf	(main@countHeatTime+1)& (0+255),b
   394  000024  0E00               	movlw	0
   395  000026  6FAA               	movwf	(main@countHeatTime+2)& (0+255),b
   396  000028  0E00               	movlw	0
   397  00002A  6FAB               	movwf	(main@countHeatTime+3)& (0+255),b
   398                           
   399                           ;WAFR-01-C001-HD-debug-main.c: 46: uint8 flagChargeBat = 0 ;
   400  00002C  0E00               	movlw	0
   401  00002E  0100               	movlb	0	; () banked
   402  000030  6FAC               	movwf	main@flagChargeBat& (0+255),b
   403                           
   404                           ; BSR set to: 0
   405                           ;WAFR-01-C001-HD-debug-main.c: 49: InitializeOscillator();
   406  000032  EC0D  F006         	call	_InitializeOscillator	;wreg free
   407                           
   408                           ;WAFR-01-C001-HD-debug-main.c: 51: InitializePinmux();
   409  000036  ECA6  F005         	call	_InitializePinmux	;wreg free
   410                           
   411                           ;WAFR-01-C001-HD-debug-main.c: 53: PORTBbits.RB2 = 1;
   412  00003A  8481               	bsf	3969,2,c	;volatile
   413                           
   414                           ;WAFR-01-C001-HD-debug-main.c: 62: InitializeInterrupts();
   415  00003C  EC05  F006         	call	_InitializeInterrupts	;wreg free
   416                           
   417                           ;WAFR-01-C001-HD-debug-main.c: 64: InitializeTimer0();
   418  000040  ECEA  F005         	call	_InitializeTimer0	;wreg free
   419                           
   420                           ;WAFR-01-C001-HD-debug-main.c: 66: InitializeINT0();
   421  000044  EC09  F006         	call	_InitializeINT0	;wreg free
   422                           
   423                           ;WAFR-01-C001-HD-debug-main.c: 70: InitializeAD();
   424  000048  ECCD  F005         	call	_InitializeAD	;wreg free
   425                           
   426                           ;WAFR-01-C001-HD-debug-main.c: 72: turnOffAllLed();
   427  00004C  EC01  F006         	call	_turnOffAllLed	;wreg free
   428                           
   429                           ;WAFR-01-C001-HD-debug-main.c: 75: PORTBbits.RB1 = 0 ;
   430  000050  9281               	bcf	3969,1,c	;volatile
   431                           
   432                           ;WAFR-01-C001-HD-debug-main.c: 81: while ( !PORTBbits.RB0 )
   433  000052  D01E               	goto	l2614
   434  000054                     l2610:
   435                           
   436                           ;WAFR-01-C001-HD-debug-main.c: 82: {
   437                           ;WAFR-01-C001-HD-debug-main.c: 83: PORTCbits.RC0 = ! PORTCbits.RC0 ;
   438  000054  B082               	btfsc	3970,0,c	;volatile
   439  000056  D003               	goto	u2100
   440  000058  6A38               	clrf	??_main& (0+255),c
   441  00005A  2A38               	incf	??_main& (0+255),f,c
   442  00005C  D001               	goto	u2118
   443  00005E                     u2100:
   444  00005E  6A38               	clrf	??_main& (0+255),c
   445  000060                     u2118:
   446  000060  5082               	movf	3970,w,c	;volatile
   447  000062  1838               	xorwf	??_main,w,c
   448  000064  0BFE               	andlw	-2
   449  000066  1838               	xorwf	??_main,w,c
   450  000068  6E82               	movwf	3970,c	;volatile
   451                           
   452                           ;WAFR-01-C001-HD-debug-main.c: 84: PORTCbits.RC2 = ! PORTCbits.RC2;
   453  00006A  B482               	btfsc	3970,2,c	;volatile
   454  00006C  D003               	goto	u2120
   455  00006E  6A38               	clrf	??_main& (0+255),c
   456  000070  2A38               	incf	??_main& (0+255),f,c
   457  000072  D001               	goto	u2138
   458  000074                     u2120:
   459  000074  6A38               	clrf	??_main& (0+255),c
   460  000076                     u2138:
   461  000076  4638               	rlncf	??_main,f,c
   462  000078  4638               	rlncf	??_main,f,c
   463  00007A  5082               	movf	3970,w,c	;volatile
   464  00007C  1838               	xorwf	??_main,w,c
   465  00007E  0BFB               	andlw	-5
   466  000080  1838               	xorwf	??_main,w,c
   467  000082  6E82               	movwf	3970,c	;volatile
   468                           
   469                           ;WAFR-01-C001-HD-debug-main.c: 85: delay_ms(80);
   470  000084  0E00               	movlw	0
   471  000086  6E18               	movwf	delay_ms@x+1,c
   472  000088  0E50               	movlw	80
   473  00008A  6E17               	movwf	delay_ms@x,c
   474  00008C  EC77  F005         	call	_delay_ms	;wreg free
   475  000090                     l2614:
   476  000090  A081               	btfss	3969,0,c	;volatile
   477  000092  D7E0               	goto	l2610
   478                           
   479                           ;WAFR-01-C001-HD-debug-main.c: 86: }
   480                           ;WAFR-01-C001-HD-debug-main.c: 87: PORTCbits.RC0 = 0 ;
   481  000094  9082               	bcf	3970,0,c	;volatile
   482                           
   483                           ;WAFR-01-C001-HD-debug-main.c: 90: timeSystemRun = 0 ;
   484  000096  0E00               	movlw	0
   485  000098  6E59               	movwf	_timeSystemRun,c
   486  00009A  0E00               	movlw	0
   487  00009C  6E5A               	movwf	_timeSystemRun+1,c
   488  00009E  0E00               	movlw	0
   489  0000A0  6E5B               	movwf	_timeSystemRun+2,c
   490  0000A2  0E00               	movlw	0
   491  0000A4  6E5C               	movwf	_timeSystemRun+3,c
   492                           
   493                           ;WAFR-01-C001-HD-debug-main.c: 96: for ( i = 0 ; i < 10 ; i++)
   494  0000A6  0E00               	movlw	0
   495  0000A8  0100               	movlb	0	; () banked
   496  0000AA  6FAF               	movwf	(main@i+1)& (0+255),b
   497  0000AC  0E00               	movlw	0
   498  0000AE  6FAE               	movwf	main@i& (0+255),b
   499  0000B0                     l2618:
   500                           
   501                           ; BSR set to: 0
   502  0000B0  0100               	movlb	0	; () banked
   503  0000B2  51AF               	movf	(main@i+1)& (0+255),w,b
   504  0000B4  E127               	bnz	l2628
   505  0000B6  0E0A               	movlw	10
   506  0000B8  0100               	movlb	0	; () banked
   507  0000BA  5DAE               	subwf	main@i& (0+255),w,b
   508  0000BC  B0D8               	btfsc	status,0,c
   509  0000BE  D022               	goto	l2628
   510                           
   511                           ; BSR set to: 0
   512                           ;WAFR-01-C001-HD-debug-main.c: 97: {
   513                           ;WAFR-01-C001-HD-debug-main.c: 98: adcBatValue[i] = 816 ;
   514                           
   515                           ; BSR set to: 0
   516                           
   517                           ; BSR set to: 0
   518  0000C0  90D8               	bcf	status,0,c
   519  0000C2  0100               	movlb	0	; () banked
   520  0000C4  35AE               	rlcf	main@i& (0+255),w,b
   521  0000C6  6ED9               	movwf	fsr2l,c
   522  0000C8  0100               	movlb	0	; () banked
   523  0000CA  35AF               	rlcf	(main@i+1)& (0+255),w,b
   524  0000CC  6EDA               	movwf	fsr2h,c
   525  0000CE  0E39               	movlw	low _adcBatValue
   526  0000D0  26D9               	addwf	fsr2l,f,c
   527  0000D2  0E00               	movlw	high _adcBatValue
   528  0000D4  22DA               	addwfc	fsr2h,f,c
   529  0000D6  0E30               	movlw	48
   530  0000D8  6EDE               	movwf	postinc2,c
   531  0000DA  0E03               	movlw	3
   532  0000DC  6EDD               	movwf	postdec2,c
   533                           
   534                           ;WAFR-01-C001-HD-debug-main.c: 99: adcAD597Value[i] = 0 ;
   535  0000DE  90D8               	bcf	status,0,c
   536  0000E0  0100               	movlb	0	; () banked
   537  0000E2  35AE               	rlcf	main@i& (0+255),w,b
   538  0000E4  6ED9               	movwf	fsr2l,c
   539  0000E6  0100               	movlb	0	; () banked
   540  0000E8  35AF               	rlcf	(main@i+1)& (0+255),w,b
   541  0000EA  6EDA               	movwf	fsr2h,c
   542  0000EC  0E80               	movlw	low _adcAD597Value
   543  0000EE  26D9               	addwf	fsr2l,f,c
   544  0000F0  0E00               	movlw	high _adcAD597Value
   545  0000F2  22DA               	addwfc	fsr2h,f,c
   546  0000F4  0E00               	movlw	0
   547  0000F6  6EDE               	movwf	postinc2,c
   548  0000F8  0E00               	movlw	0
   549  0000FA  6EDD               	movwf	postdec2,c
   550                           
   551                           ; BSR set to: 0
   552  0000FC  0100               	movlb	0	; () banked
   553  0000FE  4BAE               	infsnz	main@i& (0+255),f,b
   554  000100  2BAF               	incf	(main@i+1)& (0+255),f,b
   555  000102  D7D6               	goto	l2618
   556  000104                     l2628:
   557                           
   558                           ; BSR set to: 0
   559                           ;WAFR-01-C001-HD-debug-main.c: 100: }
   560                           ;WAFR-01-C001-HD-debug-main.c: 103: buttonPushTimeStart = 0 ;
   561  000104  0E00               	movlw	0
   562  000106  6E4D               	movwf	_buttonPushTimeStart,c
   563  000108  0E00               	movlw	0
   564  00010A  6E4E               	movwf	_buttonPushTimeStart+1,c
   565  00010C  0E00               	movlw	0
   566  00010E  6E4F               	movwf	_buttonPushTimeStart+2,c
   567  000110  0E00               	movlw	0
   568  000112  6E50               	movwf	_buttonPushTimeStart+3,c
   569                           
   570                           ;WAFR-01-C001-HD-debug-main.c: 104: buttonPushTimeStop = 0 ;
   571  000114  0E00               	movlw	0
   572  000116  6E51               	movwf	_buttonPushTimeStop,c
   573  000118  0E00               	movlw	0
   574  00011A  6E52               	movwf	_buttonPushTimeStop+1,c
   575  00011C  0E00               	movlw	0
   576  00011E  6E53               	movwf	_buttonPushTimeStop+2,c
   577  000120  0E00               	movlw	0
   578  000122  6E54               	movwf	_buttonPushTimeStop+3,c
   579                           
   580                           ;WAFR-01-C001-HD-debug-main.c: 109: while(timeSystemRun < 10 * 100)
   581  000124  D052               	goto	l2656
   582  000126                     l2630:
   583                           
   584                           ; BSR set to: 0
   585                           ;WAFR-01-C001-HD-debug-main.c: 110: {
   586                           ;WAFR-01-C001-HD-debug-main.c: 111: adcValue = GetAdcBatValue( 4 );
   587  000126  0E04               	movlw	4
   588  000128  ECEE  F003         	call	_GetAdcBatValue
   589  00012C  C020  F0B0         	movff	?_GetAdcBatValue,main@adcValue
   590  000130  C021  F0B1         	movff	?_GetAdcBatValue+1,main@adcValue+1
   591                           
   592                           ;WAFR-01-C001-HD-debug-main.c: 113: turnOffAllLed();
   593  000134  EC01  F006         	call	_turnOffAllLed	;wreg free
   594                           
   595                           ;WAFR-01-C001-HD-debug-main.c: 114: if ( adcValue > 996)
   596  000138  0100               	movlb	0	; () banked
   597  00013A  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   598  00013C  D00F               	goto	l2638
   599  00013E  0EE5               	movlw	229
   600  000140  0100               	movlb	0	; () banked
   601  000142  5DB0               	subwf	main@adcValue& (0+255),w,b
   602  000144  0E03               	movlw	3
   603  000146  0100               	movlb	0	; () banked
   604  000148  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   605  00014A  A0D8               	btfss	status,0,c
   606  00014C  D007               	goto	l2638
   607                           
   608                           ; BSR set to: 0
   609                           ;WAFR-01-C001-HD-debug-main.c: 115: {
   610                           ;WAFR-01-C001-HD-debug-main.c: 117: PORTCbits.RC0 = 1;
   611  00014E  8082               	bsf	3970,0,c	;volatile
   612                           
   613                           ;WAFR-01-C001-HD-debug-main.c: 118: PORTCbits.RC1 = 1;
   614  000150  8282               	bsf	3970,1,c	;volatile
   615                           
   616                           ;WAFR-01-C001-HD-debug-main.c: 119: PORTCbits.RC3 = 1;
   617  000152  8682               	bsf	3970,3,c	;volatile
   618                           
   619                           ;WAFR-01-C001-HD-debug-main.c: 120: PORTCbits.RC4 = 1;
   620  000154  8882               	bsf	3970,4,c	;volatile
   621                           
   622                           ;WAFR-01-C001-HD-debug-main.c: 121: PORTCbits.RC6 = 1;
   623  000156  8C82               	bsf	3970,6,c	;volatile
   624                           
   625                           ;WAFR-01-C001-HD-debug-main.c: 122: PORTCbits.RC7 = 1;
   626  000158  8E82               	bsf	3970,7,c	;volatile
   627                           
   628                           ;WAFR-01-C001-HD-debug-main.c: 123: }else if ( adcValue > 891 )
   629  00015A  D02E               	goto	l71
   630  00015C                     l2638:
   631                           
   632                           ; BSR set to: 0
   633  00015C  0100               	movlb	0	; () banked
   634  00015E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   635  000160  D00D               	goto	l2642
   636  000162  0E7C               	movlw	124
   637  000164  0100               	movlb	0	; () banked
   638  000166  5DB0               	subwf	main@adcValue& (0+255),w,b
   639  000168  0E03               	movlw	3
   640  00016A  0100               	movlb	0	; () banked
   641  00016C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   642  00016E  A0D8               	btfss	status,0,c
   643  000170  D005               	goto	l2642
   644                           
   645                           ; BSR set to: 0
   646                           ;WAFR-01-C001-HD-debug-main.c: 124: {
   647                           ;WAFR-01-C001-HD-debug-main.c: 125: PORTCbits.RC0 = 1;
   648  000172  8082               	bsf	3970,0,c	;volatile
   649                           
   650                           ;WAFR-01-C001-HD-debug-main.c: 126: PORTCbits.RC1 = 1;
   651  000174  8282               	bsf	3970,1,c	;volatile
   652                           
   653                           ;WAFR-01-C001-HD-debug-main.c: 127: PORTCbits.RC3 = 1;
   654  000176  8682               	bsf	3970,3,c	;volatile
   655                           
   656                           ;WAFR-01-C001-HD-debug-main.c: 128: PORTCbits.RC4 = 1;
   657  000178  8882               	bsf	3970,4,c	;volatile
   658                           
   659                           ;WAFR-01-C001-HD-debug-main.c: 129: }else if ( adcValue > 816)
   660  00017A  D01E               	goto	l71
   661  00017C                     l2642:
   662                           
   663                           ; BSR set to: 0
   664  00017C  0100               	movlb	0	; () banked
   665  00017E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   666  000180  D00B               	goto	l74
   667  000182  0E31               	movlw	49
   668  000184  0100               	movlb	0	; () banked
   669  000186  5DB0               	subwf	main@adcValue& (0+255),w,b
   670  000188  0E03               	movlw	3
   671  00018A  0100               	movlb	0	; () banked
   672  00018C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   673  00018E  A0D8               	btfss	status,0,c
   674  000190  D003               	goto	l74
   675                           
   676                           ; BSR set to: 0
   677                           ;WAFR-01-C001-HD-debug-main.c: 130: {
   678                           ;WAFR-01-C001-HD-debug-main.c: 131: PORTCbits.RC0 = 1;
   679  000192  8082               	bsf	3970,0,c	;volatile
   680                           
   681                           ;WAFR-01-C001-HD-debug-main.c: 132: PORTCbits.RC1 = 1;
   682  000194  8282               	bsf	3970,1,c	;volatile
   683                           
   684                           ;WAFR-01-C001-HD-debug-main.c: 133: } else
   685  000196  D010               	goto	l71
   686  000198                     l74:
   687                           
   688                           ; BSR set to: 0
   689                           ;WAFR-01-C001-HD-debug-main.c: 134: {
   690                           ;WAFR-01-C001-HD-debug-main.c: 135: PORTCbits.RC0 = 1;
   691  000198  8082               	bsf	3970,0,c	;volatile
   692                           
   693                           ;WAFR-01-C001-HD-debug-main.c: 136: PORTCbits.RC1 = 1;
   694  00019A  8282               	bsf	3970,1,c	;volatile
   695                           
   696                           ; BSR set to: 0
   697                           ;WAFR-01-C001-HD-debug-main.c: 137: delay_ms(100);
   698  00019C  0E00               	movlw	0
   699  00019E  6E18               	movwf	delay_ms@x+1,c
   700  0001A0  0E64               	movlw	100
   701  0001A2  6E17               	movwf	delay_ms@x,c
   702  0001A4  EC77  F005         	call	_delay_ms	;wreg free
   703                           
   704                           ;WAFR-01-C001-HD-debug-main.c: 138: PORTCbits.RC0 = 0;
   705  0001A8  9082               	bcf	3970,0,c	;volatile
   706                           
   707                           ;WAFR-01-C001-HD-debug-main.c: 139: PORTCbits.RC1 = 0;
   708  0001AA  9282               	bcf	3970,1,c	;volatile
   709                           
   710                           ;WAFR-01-C001-HD-debug-main.c: 140: delay_ms(100);
   711  0001AC  0E00               	movlw	0
   712  0001AE  6E18               	movwf	delay_ms@x+1,c
   713  0001B0  0E64               	movlw	100
   714  0001B2  6E17               	movwf	delay_ms@x,c
   715  0001B4  EC77  F005         	call	_delay_ms	;wreg free
   716  0001B8                     l71:
   717                           
   718                           ;WAFR-01-C001-HD-debug-main.c: 141: }
   719                           ;WAFR-01-C001-HD-debug-main.c: 143: keyValue = ProcessButton();
   720  0001B8  EC37  F003         	call	_ProcessButton	;wreg free
   721  0001BC  0100               	movlb	0	; () banked
   722  0001BE  6FAD               	movwf	main@keyValue& (0+255),b
   723                           
   724                           ; BSR set to: 0
   725                           ;WAFR-01-C001-HD-debug-main.c: 144: if ( keyValue != 0 )
   726  0001C0  0100               	movlb	0	; () banked
   727  0001C2  51AD               	movf	main@keyValue& (0+255),w,b
   728  0001C4  0100               	movlb	0	; () banked
   729  0001C6  A4D8               	btfss	status,2,c
   730  0001C8  D009               	goto	l2658
   731  0001CA                     l2656:
   732                           
   733                           ; BSR set to: 0
   734  0001CA  505C               	movf	_timeSystemRun+3,w,c
   735  0001CC  105B               	iorwf	_timeSystemRun+2,w,c
   736  0001CE  E106               	bnz	l2658
   737  0001D0  0EE8               	movlw	232
   738  0001D2  5C59               	subwf	_timeSystemRun,w,c
   739  0001D4  0E03               	movlw	3
   740  0001D6  585A               	subwfb	_timeSystemRun+1,w,c
   741  0001D8  A0D8               	btfss	status,0,c
   742  0001DA  D7A5               	goto	l2630
   743  0001DC                     l2658:
   744                           
   745                           ; BSR set to: 0
   746                           ;WAFR-01-C001-HD-debug-main.c: 147: }
   747                           ;WAFR-01-C001-HD-debug-main.c: 148: }
   748                           ;WAFR-01-C001-HD-debug-main.c: 154: levelTmpSetting = ReadEEprom( 0 );
   749  0001DC  0E00               	movlw	0
   750  0001DE  ECF6  F005         	call	_ReadEEprom
   751  0001E2  6E62               	movwf	_levelTmpSetting,c
   752                           
   753                           ;WAFR-01-C001-HD-debug-main.c: 155: if ( (levelTmpSetting > 3) | (levelTmpSetting == 0 )
      +                           )
   754  0001E4  0E04               	movlw	4
   755  0001E6  6062               	cpfslt	_levelTmpSetting,c
   756  0001E8  D003               	goto	l2664
   757  0001EA  5062               	movf	_levelTmpSetting,w,c
   758  0001EC  A4D8               	btfss	status,2,c
   759  0001EE  D002               	goto	l81
   760  0001F0                     l2664:
   761                           
   762                           ;WAFR-01-C001-HD-debug-main.c: 156: {
   763                           ;WAFR-01-C001-HD-debug-main.c: 157: levelTmpSetting = 1 ;
   764  0001F0  0E01               	movlw	1
   765  0001F2  6E62               	movwf	_levelTmpSetting,c
   766  0001F4                     l81:
   767                           
   768                           ;WAFR-01-C001-HD-debug-main.c: 189: {
   769                           ;WAFR-01-C001-HD-debug-main.c: 190: if ( !flagChargeBat )
   770  0001F4  0100               	movlb	0	; () banked
   771  0001F6  51AC               	movf	main@flagChargeBat& (0+255),w,b
   772  0001F8  0100               	movlb	0	; () banked
   773  0001FA  A4D8               	btfss	status,2,c
   774  0001FC  D01B               	goto	l2680
   775                           
   776                           ; BSR set to: 0
   777                           ;WAFR-01-C001-HD-debug-main.c: 191: {
   778                           ;WAFR-01-C001-HD-debug-main.c: 192: keyValue = ProcessButton();
   779  0001FE  EC37  F003         	call	_ProcessButton	;wreg free
   780  000202  0100               	movlb	0	; () banked
   781  000204  6FAD               	movwf	main@keyValue& (0+255),b
   782                           
   783                           ;WAFR-01-C001-HD-debug-main.c: 193: switch ( keyValue)
   784  000206  D006               	goto	l2674
   785  000208                     l2668:
   786                           
   787                           ; BSR set to: 0
   788                           ;WAFR-01-C001-HD-debug-main.c: 201: ProcessHeat();
   789  000208  ECA5  F001         	call	_ProcessHeat	;wreg free
   790                           
   791                           ;WAFR-01-C001-HD-debug-main.c: 202: break;
   792  00020C  D00E               	goto	l2676
   793  00020E                     l2670:
   794                           
   795                           ;WAFR-01-C001-HD-debug-main.c: 204: ShutDownSystem();
   796  00020E  EC0E  F005         	call	_ShutDownSystem	;wreg free
   797                           
   798                           ;WAFR-01-C001-HD-debug-main.c: 207: }
   799                           
   800                           ;WAFR-01-C001-HD-debug-main.c: 206: default: break;
   801                           
   802                           ;WAFR-01-C001-HD-debug-main.c: 205: break;
   803  000212  D00B               	goto	l2676
   804  000214                     l2674:
   805  000214  0100               	movlb	0	; () banked
   806  000216  51AD               	movf	main@keyValue& (0+255),w,b
   807                           
   808                           ; Switch size 1, requested type "space"
   809                           ; Number of cases is 3, Range of values is 1 to 3
   810                           ; switch strategies available:
   811                           ; Name         Instructions Cycles
   812                           ; simple_byte           10     6 (average)
   813                           ;	Chosen strategy is simple_byte
   814  000218  0A01               	xorlw	1	; case 1
   815  00021A  B4D8               	btfsc	status,2,c
   816  00021C  D006               	goto	l2676
   817  00021E  0A03               	xorlw	3	; case 2
   818  000220  B4D8               	btfsc	status,2,c
   819  000222  D7F2               	goto	l2668
   820  000224  0A01               	xorlw	1	; case 3
   821  000226  B4D8               	btfsc	status,2,c
   822  000228  D7F2               	goto	l2670
   823  00022A                     l2676:
   824                           
   825                           ;WAFR-01-C001-HD-debug-main.c: 216: if ( timerHalfSecond >= 1 )
   826  00022A  505D               	movf	_timerHalfSecond,w,c
   827  00022C  105E               	iorwf	_timerHalfSecond+1,w,c
   828  00022E  A4D8               	btfss	status,2,c
   829                           
   830                           ;WAFR-01-C001-HD-debug-main.c: 217: {
   831                           ;WAFR-01-C001-HD-debug-main.c: 218: LevelTmpSetShow();
   832  000230  EC31  F005         	call	_LevelTmpSetShow	;wreg free
   833  000234                     l2680:
   834                           
   835                           ;WAFR-01-C001-HD-debug-main.c: 219: }
   836                           ;WAFR-01-C001-HD-debug-main.c: 220: }
   837                           ;WAFR-01-C001-HD-debug-main.c: 224: if ( PORTAbits.RA4 )
   838  000234  A880               	btfss	3968,4,c	;volatile
   839  000236  D085               	goto	l2742
   840                           
   841                           ;WAFR-01-C001-HD-debug-main.c: 225: {
   842                           ;WAFR-01-C001-HD-debug-main.c: 226: flagChargeBat = 1;
   843  000238  0E01               	movlw	1
   844  00023A  0100               	movlb	0	; () banked
   845  00023C  6FAC               	movwf	main@flagChargeBat& (0+255),b
   846                           
   847                           ; BSR set to: 0
   848                           ;WAFR-01-C001-HD-debug-main.c: 228: adcValue = GetAdcChargBatValue( PORTAbits.RA1 );
   849  00023E  A280               	btfss	3968,1,c	;volatile
   850  000240  D002               	goto	u2270
   851  000242  0E01               	movlw	1
   852  000244  D001               	goto	u2276
   853  000246                     u2270:
   854  000246  0E00               	movlw	0
   855  000248                     u2276:
   856  000248  EC95  F003         	call	_GetAdcChargBatValue
   857  00024C  C020  F0B0         	movff	?_GetAdcChargBatValue,main@adcValue
   858  000250  C021  F0B1         	movff	?_GetAdcChargBatValue+1,main@adcValue+1
   859                           
   860                           ;WAFR-01-C001-HD-debug-main.c: 229: if ( adcValue > 800 )
   861  000254  0100               	movlb	0	; () banked
   862  000256  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   863  000258  D00C               	goto	l2690
   864  00025A  0E21               	movlw	33
   865  00025C  0100               	movlb	0	; () banked
   866  00025E  5DB0               	subwf	main@adcValue& (0+255),w,b
   867  000260  0E03               	movlw	3
   868  000262  0100               	movlb	0	; () banked
   869  000264  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   870  000266  A0D8               	btfss	status,0,c
   871  000268  D004               	goto	l2690
   872                           
   873                           ; BSR set to: 0
   874                           ;WAFR-01-C001-HD-debug-main.c: 230: {
   875                           ;WAFR-01-C001-HD-debug-main.c: 232: PORTCbits.RC0 = 1 ;
   876  00026A  8082               	bsf	3970,0,c	;volatile
   877                           
   878                           ;WAFR-01-C001-HD-debug-main.c: 233: PORTCbits.RC1 = 1 ;
   879  00026C  8282               	bsf	3970,1,c	;volatile
   880                           
   881                           ;WAFR-01-C001-HD-debug-main.c: 234: PORTCbits.RC2 = 1 ;
   882  00026E  8482               	bsf	3970,2,c	;volatile
   883                           
   884                           ;WAFR-01-C001-HD-debug-main.c: 235: }else
   885  000270  D7C1               	goto	l81
   886  000272                     l2690:
   887                           
   888                           ; BSR set to: 0
   889                           ;WAFR-01-C001-HD-debug-main.c: 236: {
   890                           ;WAFR-01-C001-HD-debug-main.c: 237: adcValue = GetAdcChargBatValue( 4 );
   891  000272  0E04               	movlw	4
   892  000274  EC95  F003         	call	_GetAdcChargBatValue
   893  000278  C020  F0B0         	movff	?_GetAdcChargBatValue,main@adcValue
   894  00027C  C021  F0B1         	movff	?_GetAdcChargBatValue+1,main@adcValue+1
   895                           
   896                           ;WAFR-01-C001-HD-debug-main.c: 239: turnOffAllLed();
   897  000280  EC01  F006         	call	_turnOffAllLed	;wreg free
   898                           
   899                           ;WAFR-01-C001-HD-debug-main.c: 240: if ( adcValue > 996)
   900  000284  0100               	movlb	0	; () banked
   901  000286  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   902  000288  D01B               	goto	l2712
   903  00028A  0EE5               	movlw	229
   904  00028C  0100               	movlb	0	; () banked
   905  00028E  5DB0               	subwf	main@adcValue& (0+255),w,b
   906  000290  0E03               	movlw	3
   907  000292  0100               	movlb	0	; () banked
   908  000294  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   909  000296  A0D8               	btfss	status,0,c
   910  000298  D013               	goto	l2712
   911                           
   912                           ; BSR set to: 0
   913                           ;WAFR-01-C001-HD-debug-main.c: 241: {
   914                           ;WAFR-01-C001-HD-debug-main.c: 243: PORTCbits.RC0 = 1;
   915  00029A  8082               	bsf	3970,0,c	;volatile
   916                           
   917                           ;WAFR-01-C001-HD-debug-main.c: 244: PORTCbits.RC1 = 1;
   918  00029C  8282               	bsf	3970,1,c	;volatile
   919                           
   920                           ;WAFR-01-C001-HD-debug-main.c: 245: PORTCbits.RC3 = 1;
   921  00029E  8682               	bsf	3970,3,c	;volatile
   922                           
   923                           ;WAFR-01-C001-HD-debug-main.c: 246: PORTCbits.RC4 = 1;
   924  0002A0  8882               	bsf	3970,4,c	;volatile
   925                           
   926                           ;WAFR-01-C001-HD-debug-main.c: 247: PORTCbits.RC6 = 1;
   927  0002A2  8C82               	bsf	3970,6,c	;volatile
   928                           
   929                           ;WAFR-01-C001-HD-debug-main.c: 248: PORTCbits.RC7 = 1;
   930  0002A4  8E82               	bsf	3970,7,c	;volatile
   931                           
   932                           ; BSR set to: 0
   933                           ;WAFR-01-C001-HD-debug-main.c: 249: delay_ms(200);
   934  0002A6  0E00               	movlw	0
   935  0002A8  6E18               	movwf	delay_ms@x+1,c
   936  0002AA  0EC8               	movlw	200
   937  0002AC  6E17               	movwf	delay_ms@x,c
   938  0002AE  EC77  F005         	call	_delay_ms	;wreg free
   939                           
   940                           ;WAFR-01-C001-HD-debug-main.c: 250: PORTCbits.RC0 = 0;
   941  0002B2  9082               	bcf	3970,0,c	;volatile
   942                           
   943                           ;WAFR-01-C001-HD-debug-main.c: 251: PORTCbits.RC1 = 0;
   944  0002B4  9282               	bcf	3970,1,c	;volatile
   945                           
   946                           ;WAFR-01-C001-HD-debug-main.c: 252: PORTCbits.RC3 = 0;
   947  0002B6  9682               	bcf	3970,3,c	;volatile
   948                           
   949                           ;WAFR-01-C001-HD-debug-main.c: 253: PORTCbits.RC4 = 0;
   950  0002B8  9882               	bcf	3970,4,c	;volatile
   951                           
   952                           ;WAFR-01-C001-HD-debug-main.c: 254: PORTCbits.RC6 = 0;
   953  0002BA  9C82               	bcf	3970,6,c	;volatile
   954                           
   955                           ;WAFR-01-C001-HD-debug-main.c: 255: PORTCbits.RC7 = 0;
   956  0002BC  9E82               	bcf	3970,7,c	;volatile
   957                           
   958                           ;WAFR-01-C001-HD-debug-main.c: 257: }else if ( adcValue > 891 )
   959  0002BE  D79A               	goto	l81
   960  0002C0                     l2712:
   961  0002C0  0100               	movlb	0	; () banked
   962  0002C2  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   963  0002C4  D017               	goto	l2726
   964  0002C6  0E7C               	movlw	124
   965  0002C8  0100               	movlb	0	; () banked
   966  0002CA  5DB0               	subwf	main@adcValue& (0+255),w,b
   967  0002CC  0E03               	movlw	3
   968  0002CE  0100               	movlb	0	; () banked
   969  0002D0  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   970  0002D2  A0D8               	btfss	status,0,c
   971  0002D4  D00F               	goto	l2726
   972                           
   973                           ; BSR set to: 0
   974                           ;WAFR-01-C001-HD-debug-main.c: 258: {
   975                           ;WAFR-01-C001-HD-debug-main.c: 259: PORTCbits.RC0 = 1;
   976  0002D6  8082               	bsf	3970,0,c	;volatile
   977                           
   978                           ;WAFR-01-C001-HD-debug-main.c: 260: PORTCbits.RC1 = 1;
   979  0002D8  8282               	bsf	3970,1,c	;volatile
   980                           
   981                           ;WAFR-01-C001-HD-debug-main.c: 261: PORTCbits.RC3 = 1;
   982  0002DA  8682               	bsf	3970,3,c	;volatile
   983                           
   984                           ;WAFR-01-C001-HD-debug-main.c: 262: PORTCbits.RC4 = 1;
   985  0002DC  8882               	bsf	3970,4,c	;volatile
   986                           
   987                           ; BSR set to: 0
   988                           ;WAFR-01-C001-HD-debug-main.c: 263: delay_ms(200);
   989  0002DE  0E00               	movlw	0
   990  0002E0  6E18               	movwf	delay_ms@x+1,c
   991  0002E2  0EC8               	movlw	200
   992  0002E4  6E17               	movwf	delay_ms@x,c
   993  0002E6  EC77  F005         	call	_delay_ms	;wreg free
   994                           
   995                           ;WAFR-01-C001-HD-debug-main.c: 264: PORTCbits.RC0 = 0;
   996  0002EA  9082               	bcf	3970,0,c	;volatile
   997                           
   998                           ;WAFR-01-C001-HD-debug-main.c: 265: PORTCbits.RC1 = 0;
   999  0002EC  9282               	bcf	3970,1,c	;volatile
  1000                           
  1001                           ;WAFR-01-C001-HD-debug-main.c: 266: PORTCbits.RC3 = 0;
  1002  0002EE  9682               	bcf	3970,3,c	;volatile
  1003                           
  1004                           ;WAFR-01-C001-HD-debug-main.c: 267: PORTCbits.RC4 = 0;
  1005  0002F0  9882               	bcf	3970,4,c	;volatile
  1006                           
  1007                           ;WAFR-01-C001-HD-debug-main.c: 268: }else if ( adcValue > 816)
  1008  0002F2  D780               	goto	l81
  1009  0002F4                     l2726:
  1010  0002F4  0100               	movlb	0	; () banked
  1011  0002F6  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1012  0002F8  D013               	goto	l97
  1013  0002FA  0E31               	movlw	49
  1014  0002FC  0100               	movlb	0	; () banked
  1015  0002FE  5DB0               	subwf	main@adcValue& (0+255),w,b
  1016  000300  0E03               	movlw	3
  1017  000302  0100               	movlb	0	; () banked
  1018  000304  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
  1019  000306  A0D8               	btfss	status,0,c
  1020  000308  D00B               	goto	l97
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;WAFR-01-C001-HD-debug-main.c: 269: {
  1024                           ;WAFR-01-C001-HD-debug-main.c: 270: PORTCbits.RC0 = 1;
  1025  00030A  8082               	bsf	3970,0,c	;volatile
  1026                           
  1027                           ;WAFR-01-C001-HD-debug-main.c: 271: PORTCbits.RC1 = 1;
  1028  00030C  8282               	bsf	3970,1,c	;volatile
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;WAFR-01-C001-HD-debug-main.c: 272: delay_ms(200);
  1032  00030E  0E00               	movlw	0
  1033  000310  6E18               	movwf	delay_ms@x+1,c
  1034  000312  0EC8               	movlw	200
  1035  000314  6E17               	movwf	delay_ms@x,c
  1036  000316  EC77  F005         	call	_delay_ms	;wreg free
  1037                           
  1038                           ;WAFR-01-C001-HD-debug-main.c: 273: PORTCbits.RC0 = 0;
  1039  00031A  9082               	bcf	3970,0,c	;volatile
  1040                           
  1041                           ;WAFR-01-C001-HD-debug-main.c: 274: PORTCbits.RC1 = 0;
  1042  00031C  9282               	bcf	3970,1,c	;volatile
  1043                           
  1044                           ;WAFR-01-C001-HD-debug-main.c: 275: } else
  1045  00031E  D76A               	goto	l81
  1046  000320                     l97:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;WAFR-01-C001-HD-debug-main.c: 276: {
  1050                           ;WAFR-01-C001-HD-debug-main.c: 277: PORTCbits.RC0 = 1;
  1051  000320  8082               	bsf	3970,0,c	;volatile
  1052                           
  1053                           ;WAFR-01-C001-HD-debug-main.c: 278: PORTCbits.RC1 = 1;
  1054  000322  8282               	bsf	3970,1,c	;volatile
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;WAFR-01-C001-HD-debug-main.c: 279: delay_ms(100);
  1058  000324  0E00               	movlw	0
  1059  000326  6E18               	movwf	delay_ms@x+1,c
  1060  000328  0E64               	movlw	100
  1061  00032A  6E17               	movwf	delay_ms@x,c
  1062  00032C  EC77  F005         	call	_delay_ms	;wreg free
  1063                           
  1064                           ;WAFR-01-C001-HD-debug-main.c: 280: PORTCbits.RC0 = 0;
  1065  000330  9082               	bcf	3970,0,c	;volatile
  1066                           
  1067                           ;WAFR-01-C001-HD-debug-main.c: 281: PORTCbits.RC1 = 0;
  1068  000332  9282               	bcf	3970,1,c	;volatile
  1069                           
  1070                           ;WAFR-01-C001-HD-debug-main.c: 282: delay_ms(100);
  1071  000334  0E00               	movlw	0
  1072  000336  6E18               	movwf	delay_ms@x+1,c
  1073  000338  0E64               	movlw	100
  1074  00033A  6E17               	movwf	delay_ms@x,c
  1075  00033C  EC77  F005         	call	_delay_ms	;wreg free
  1076                           
  1077                           ;WAFR-01-C001-HD-debug-main.c: 283: }
  1078                           ;WAFR-01-C001-HD-debug-main.c: 284: }
  1079                           ;WAFR-01-C001-HD-debug-main.c: 287: } else
  1080  000340  D759               	goto	l81
  1081  000342                     l2742:
  1082                           
  1083                           ;WAFR-01-C001-HD-debug-main.c: 288: {
  1084                           ;WAFR-01-C001-HD-debug-main.c: 289: flagChargeBat = 0 ;
  1085  000342  0E00               	movlw	0
  1086  000344  0100               	movlb	0	; () banked
  1087  000346  6FAC               	movwf	main@flagChargeBat& (0+255),b
  1088                           
  1089                           ; BSR set to: 0
  1090                           
  1091                           ; BSR set to: 0
  1092  000348  D755               	goto	l81
  1093  00034A                     __end_of_main:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           postinc0	equ	0xFEE
  1097                           wreg	equ	0xFE8
  1098                           postinc2	equ	0xFDE
  1099                           postdec2	equ	0xFDD
  1100                           fsr2h	equ	0xFDA
  1101                           fsr2l	equ	0xFD9
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _ShutDownSystem *****************
  1105 ;; Defined at:
  1106 ;;		line 334 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;		None               void
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1120 ;;      Params:         0       0       0       0
  1121 ;;      Locals:         0       0       0       0
  1122 ;;      Temps:          1       0       0       0
  1123 ;;      Totals:         1       0       0       0
  1124 ;;Total ram usage:        1 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    2
  1127 ;; This function calls:
  1128 ;;		_delay_ms
  1129 ;;		_turnOffAllLed
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text1
  1136  000A1C                     __ptext1:
  1137                           	opt stack 0
  1138  000A1C                     _ShutDownSystem:
  1139                           	opt stack 28
  1140                           
  1141                           ;system.c: 337: turnOffAllLed();
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;incstack = 0
  1145  000A1C  EC01  F006         	call	_turnOffAllLed	;wreg free
  1146  000A20                     l2556:
  1147                           
  1148                           ;system.c: 339: {
  1149                           ;system.c: 340: PORTBbits.RB2 = 0 ;
  1150  000A20  9481               	bcf	3969,2,c	;volatile
  1151                           
  1152                           ;system.c: 341: PORTCbits.RC2 = ! PORTCbits.RC2 ;
  1153  000A22  B482               	btfsc	3970,2,c	;volatile
  1154  000A24  D003               	goto	u2020
  1155  000A26  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1156  000A28  2A1D               	incf	??_ShutDownSystem& (0+255),f,c
  1157  000A2A  D001               	goto	u2038
  1158  000A2C                     u2020:
  1159  000A2C  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1160  000A2E                     u2038:
  1161  000A2E  461D               	rlncf	??_ShutDownSystem,f,c
  1162  000A30  461D               	rlncf	??_ShutDownSystem,f,c
  1163  000A32  5082               	movf	3970,w,c	;volatile
  1164  000A34  181D               	xorwf	??_ShutDownSystem,w,c
  1165  000A36  0BFB               	andlw	-5
  1166  000A38  181D               	xorwf	??_ShutDownSystem,w,c
  1167  000A3A  6E82               	movwf	3970,c	;volatile
  1168                           
  1169                           ;system.c: 343: PORTCbits.RC1 = ! PORTCbits.RC1 ;
  1170  000A3C  B282               	btfsc	3970,1,c	;volatile
  1171  000A3E  D003               	goto	u2040
  1172  000A40  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1173  000A42  2A1D               	incf	??_ShutDownSystem& (0+255),f,c
  1174  000A44  D001               	goto	u2058
  1175  000A46                     u2040:
  1176  000A46  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1177  000A48                     u2058:
  1178  000A48  461D               	rlncf	??_ShutDownSystem,f,c
  1179  000A4A  5082               	movf	3970,w,c	;volatile
  1180  000A4C  181D               	xorwf	??_ShutDownSystem,w,c
  1181  000A4E  0BFD               	andlw	-3
  1182  000A50  181D               	xorwf	??_ShutDownSystem,w,c
  1183  000A52  6E82               	movwf	3970,c	;volatile
  1184                           
  1185                           ;system.c: 344: delay_ms(80);
  1186  000A54  0E00               	movlw	0
  1187  000A56  6E18               	movwf	delay_ms@x+1,c
  1188  000A58  0E50               	movlw	80
  1189  000A5A  6E17               	movwf	delay_ms@x,c
  1190  000A5C  EC77  F005         	call	_delay_ms	;wreg free
  1191  000A60  D7DF               	goto	l2556
  1192  000A62                     __end_of_ShutDownSystem:
  1193                           	opt stack 0
  1194                           tblptru	equ	0xFF8
  1195                           postinc0	equ	0xFEE
  1196                           wreg	equ	0xFE8
  1197                           postinc2	equ	0xFDE
  1198                           postdec2	equ	0xFDD
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8
  1202                           
  1203 ;; *************** function _delay_ms *****************
  1204 ;; Defined at:
  1205 ;;		line 27 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  x               2   22[COMRAM] unsigned int 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  i               2   26[COMRAM] unsigned int 
  1210 ;;  j               2   24[COMRAM] unsigned int 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;		None               void
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1220 ;;      Params:         2       0       0       0
  1221 ;;      Locals:         4       0       0       0
  1222 ;;      Temps:          0       0       0       0
  1223 ;;      Totals:         6       0       0       0
  1224 ;;Total ram usage:        6 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;;		_ShutDownSystem
  1232 ;;		_delay_s
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text2
  1237  000AEE                     __ptext2:
  1238                           	opt stack 0
  1239  000AEE                     _delay_ms:
  1240                           	opt stack 29
  1241                           
  1242                           ;user.c: 29: unsigned int i,j;
  1243                           ;user.c: 31: for ( j=0 ; j<x ;j++ )
  1244                           
  1245                           ;incstack = 0
  1246  000AEE  0E00               	movlw	0
  1247  000AF0  6E1A               	movwf	delay_ms@j+1,c
  1248  000AF2  0E00               	movlw	0
  1249  000AF4  6E19               	movwf	delay_ms@j,c
  1250  000AF6  D00F               	goto	l2274
  1251  000AF8                     l2262:
  1252                           
  1253                           ;user.c: 32: {
  1254                           ;user.c: 33: for ( i=0; i<400; i++ );
  1255  000AF8  0E00               	movlw	0
  1256  000AFA  6E1C               	movwf	delay_ms@i+1,c
  1257  000AFC  0E00               	movlw	0
  1258  000AFE  6E1B               	movwf	delay_ms@i,c
  1259  000B00                     l2264:
  1260  000B00  0E90               	movlw	144
  1261  000B02  5C1B               	subwf	delay_ms@i,w,c
  1262  000B04  0E01               	movlw	1
  1263  000B06  581C               	subwfb	delay_ms@i+1,w,c
  1264  000B08  B0D8               	btfsc	status,0,c
  1265  000B0A  D003               	goto	l2272
  1266  000B0C  4A1B               	infsnz	delay_ms@i,f,c
  1267  000B0E  2A1C               	incf	delay_ms@i+1,f,c
  1268  000B10  D7F7               	goto	l2264
  1269  000B12                     l2272:
  1270  000B12  4A19               	infsnz	delay_ms@j,f,c
  1271  000B14  2A1A               	incf	delay_ms@j+1,f,c
  1272  000B16                     l2274:
  1273  000B16  5017               	movf	delay_ms@x,w,c
  1274  000B18  5C19               	subwf	delay_ms@j,w,c
  1275  000B1A  5018               	movf	delay_ms@x+1,w,c
  1276  000B1C  581A               	subwfb	delay_ms@j+1,w,c
  1277  000B1E  B0D8               	btfsc	status,0,c
  1278  000B20  0012               	return	
  1279  000B22  D7EA               	goto	l2262
  1280  000B24                     __end_of_delay_ms:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           postinc2	equ	0xFDE
  1286                           postdec2	equ	0xFDD
  1287                           fsr2h	equ	0xFDA
  1288                           fsr2l	equ	0xFD9
  1289                           status	equ	0xFD8
  1290                           
  1291 ;; *************** function _ProcessHeat *****************
  1292 ;; Defined at:
  1293 ;;		line 355 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  countHeatTim    4   44[COMRAM] unsigned long 
  1298 ;;  adcValue        2   48[COMRAM] unsigned short 
  1299 ;;  flagStop        1   43[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;		None               void
  1302 ;; Registers used:
  1303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1309 ;;      Params:         0       0       0       0
  1310 ;;      Locals:         7       0       0       0
  1311 ;;      Temps:          4       0       0       0
  1312 ;;      Totals:        11       0       0       0
  1313 ;;Total ram usage:       11 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    4
  1316 ;; This function calls:
  1317 ;;		_GetAdcAD597Value
  1318 ;;		_HeatProcessLedShow
  1319 ;;		_ReadEEprom
  1320 ;;		_WriteEEprom
  1321 ;;		_turnOffAllLed
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text3
  1328  00034A                     __ptext3:
  1329                           	opt stack 0
  1330  00034A                     _ProcessHeat:
  1331                           	opt stack 26
  1332                           
  1333                           ;system.c: 357: uint16 adcValue;
  1334                           ;system.c: 358: uint8 flagStop=0 ;
  1335                           
  1336                           ;incstack = 0
  1337  00034A  0E00               	movlw	0
  1338  00034C  6E2C               	movwf	ProcessHeat@flagStop,c
  1339                           
  1340                           ;system.c: 359: uint32 countHeatTime = 0 ;
  1341  00034E  0E00               	movlw	0
  1342  000350  6E2D               	movwf	ProcessHeat@countHeatTime,c
  1343  000352  0E00               	movlw	0
  1344  000354  6E2E               	movwf	ProcessHeat@countHeatTime+1,c
  1345  000356  0E00               	movlw	0
  1346  000358  6E2F               	movwf	ProcessHeat@countHeatTime+2,c
  1347  00035A  0E00               	movlw	0
  1348  00035C  6E30               	movwf	ProcessHeat@countHeatTime+3,c
  1349                           
  1350                           ;system.c: 363: WriteEEprom ( 0, levelTmpSetting );
  1351  00035E  C062  F017         	movff	_levelTmpSetting,WriteEEprom@data
  1352  000362  0E00               	movlw	0
  1353  000364  EC92  F005         	call	_WriteEEprom
  1354                           
  1355                           ;system.c: 367: levelTmpSetting = ReadEEprom( 0 );
  1356  000368  0E00               	movlw	0
  1357  00036A  ECF6  F005         	call	_ReadEEprom
  1358  00036E  6E62               	movwf	_levelTmpSetting,c
  1359                           
  1360                           ;system.c: 369: PORTBbits.RB1 = 1 ;
  1361  000370  8281               	bsf	3969,1,c	;volatile
  1362                           
  1363                           ;system.c: 371: turnOffAllLed();
  1364  000372  EC01  F006         	call	_turnOffAllLed	;wreg free
  1365                           
  1366                           ;system.c: 372: countHeatTime = timeSystemRun ;
  1367  000376  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1368  00037A  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1369  00037E  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1370  000382  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1371  000386                     l2484:
  1372                           
  1373                           ;system.c: 374: {
  1374                           ;system.c: 376: if ( (countHeatTime + 1500 ) < timeSystemRun )
  1375  000386  0EDC               	movlw	220
  1376  000388  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1377  00038A  6E28               	movwf	??_ProcessHeat& (0+255),c
  1378  00038C  0E05               	movlw	5
  1379  00038E  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1380  000390  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1381  000392  0E00               	movlw	0
  1382  000394  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1383  000396  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1384  000398  0E00               	movlw	0
  1385  00039A  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1386  00039C  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1387  00039E  5059               	movf	_timeSystemRun,w,c
  1388  0003A0  5C28               	subwf	??_ProcessHeat,w,c
  1389  0003A2  505A               	movf	_timeSystemRun+1,w,c
  1390  0003A4  5829               	subwfb	??_ProcessHeat+1,w,c
  1391  0003A6  505B               	movf	_timeSystemRun+2,w,c
  1392  0003A8  582A               	subwfb	??_ProcessHeat+2,w,c
  1393  0003AA  505C               	movf	_timeSystemRun+3,w,c
  1394  0003AC  582B               	subwfb	??_ProcessHeat+3,w,c
  1395  0003AE  B0D8               	btfsc	status,0,c
  1396  0003B0  D003               	goto	l2488
  1397                           
  1398                           ;system.c: 377: {
  1399                           ;system.c: 378: flagStop = 1 ;
  1400  0003B2  0E01               	movlw	1
  1401  0003B4  6E2C               	movwf	ProcessHeat@flagStop,c
  1402                           
  1403                           ;system.c: 379: break;
  1404  0003B6  D0C5               	goto	l249
  1405  0003B8                     l2488:
  1406                           
  1407                           ;system.c: 380: }
  1408                           ;system.c: 382: HeatProcessLedShow();
  1409  0003B8  EC9A  F004         	call	_HeatProcessLedShow	;wreg free
  1410                           
  1411                           ;system.c: 384: adcValue = GetAdcAD597Value( 0 );
  1412  0003BC  0E00               	movlw	0
  1413  0003BE  EC47  F004         	call	_GetAdcAD597Value
  1414  0003C2  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1415  0003C6  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1416                           
  1417                           ;system.c: 386: switch ( levelTmpSetting )
  1418  0003CA  D0AE               	goto	l2548
  1419  0003CC                     l2492:
  1420                           
  1421                           ;system.c: 389: if ( adcValue > 180 )
  1422  0003CC  5032               	movf	ProcessHeat@adcValue+1,w,c
  1423  0003CE  E104               	bnz	u1920
  1424  0003D0  0EB5               	movlw	181
  1425  0003D2  5C31               	subwf	ProcessHeat@adcValue,w,c
  1426  0003D4  A0D8               	btfss	status,0,c
  1427  0003D6  D0B2               	goto	l2550
  1428  0003D8                     u1920:
  1429                           
  1430                           ;system.c: 390: {
  1431                           ;system.c: 391: flagStop = 1 ;
  1432  0003D8  0E01               	movlw	1
  1433  0003DA  6E2C               	movwf	ProcessHeat@flagStop,c
  1434                           
  1435                           ;system.c: 392: PORTCbits.RC2 = 1 ;
  1436  0003DC  8482               	bsf	3970,2,c	;volatile
  1437                           
  1438                           ;system.c: 394: countHeatTime = timeSystemRun ;
  1439  0003DE  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1440  0003E2  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1441  0003E6  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1442  0003EA  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1443                           
  1444                           ;system.c: 395: while ( (countHeatTime + 1000) > timeSystemRun )
  1445  0003EE  D010               	goto	l2506
  1446  0003F0                     l2500:
  1447                           
  1448                           ;system.c: 396: {
  1449                           ;system.c: 397: adcValue = GetAdcAD597Value( 0 );
  1450  0003F0  0E00               	movlw	0
  1451  0003F2  EC47  F004         	call	_GetAdcAD597Value
  1452  0003F6  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1453  0003FA  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1454                           
  1455                           ;system.c: 398: if ( adcValue > 180)
  1456  0003FE  5032               	movf	ProcessHeat@adcValue+1,w,c
  1457  000400  E104               	bnz	u1930
  1458  000402  0EB5               	movlw	181
  1459  000404  5C31               	subwf	ProcessHeat@adcValue,w,c
  1460  000406  A0D8               	btfss	status,0,c
  1461  000408  D002               	goto	l255
  1462  00040A                     u1930:
  1463                           
  1464                           ;system.c: 399: {
  1465                           ;system.c: 400: PORTBbits.RB1 = 0 ;
  1466  00040A  9281               	bcf	3969,1,c	;volatile
  1467                           
  1468                           ;system.c: 401: }else
  1469  00040C  D001               	goto	l2506
  1470  00040E                     l255:
  1471                           
  1472                           ;system.c: 402: {
  1473                           ;system.c: 403: PORTBbits.RB1 = 1 ;
  1474  00040E  8281               	bsf	3969,1,c	;volatile
  1475  000410                     l2506:
  1476  000410  0EE8               	movlw	232
  1477  000412  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1478  000414  6E28               	movwf	??_ProcessHeat& (0+255),c
  1479  000416  0E03               	movlw	3
  1480  000418  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1481  00041A  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1482  00041C  0E00               	movlw	0
  1483  00041E  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1484  000420  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1485  000422  0E00               	movlw	0
  1486  000424  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1487  000426  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1488  000428  5028               	movf	??_ProcessHeat,w,c
  1489  00042A  5C59               	subwf	_timeSystemRun,w,c
  1490  00042C  5029               	movf	??_ProcessHeat+1,w,c
  1491  00042E  585A               	subwfb	_timeSystemRun+1,w,c
  1492  000430  502A               	movf	??_ProcessHeat+2,w,c
  1493  000432  585B               	subwfb	_timeSystemRun+2,w,c
  1494  000434  502B               	movf	??_ProcessHeat+3,w,c
  1495  000436  585C               	subwfb	_timeSystemRun+3,w,c
  1496  000438  B0D8               	btfsc	status,0,c
  1497  00043A  D080               	goto	l2550
  1498  00043C  D7D9               	goto	l2500
  1499  00043E                     l2508:
  1500                           
  1501                           ;system.c: 409: if ( adcValue > 200 )
  1502  00043E  5032               	movf	ProcessHeat@adcValue+1,w,c
  1503  000440  E104               	bnz	u1950
  1504  000442  0EC9               	movlw	201
  1505  000444  5C31               	subwf	ProcessHeat@adcValue,w,c
  1506  000446  A0D8               	btfss	status,0,c
  1507  000448  D079               	goto	l2550
  1508  00044A                     u1950:
  1509                           
  1510                           ;system.c: 410: {
  1511                           ;system.c: 411: flagStop = 1 ;
  1512  00044A  0E01               	movlw	1
  1513  00044C  6E2C               	movwf	ProcessHeat@flagStop,c
  1514                           
  1515                           ;system.c: 412: PORTCbits.RC1 = 1 ;
  1516  00044E  8282               	bsf	3970,1,c	;volatile
  1517                           
  1518                           ;system.c: 413: PORTCbits.RC4 = 1 ;
  1519  000450  8882               	bsf	3970,4,c	;volatile
  1520                           
  1521                           ;system.c: 415: countHeatTime = timeSystemRun ;
  1522  000452  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1523  000456  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1524  00045A  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1525  00045E  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1526                           
  1527                           ;system.c: 416: while ( (countHeatTime + 1000) > timeSystemRun )
  1528  000462  D010               	goto	l2524
  1529  000464                     l2518:
  1530                           
  1531                           ;system.c: 417: {
  1532                           ;system.c: 418: adcValue = GetAdcAD597Value( 0 );
  1533  000464  0E00               	movlw	0
  1534  000466  EC47  F004         	call	_GetAdcAD597Value
  1535  00046A  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1536  00046E  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1537                           
  1538                           ;system.c: 419: if ( adcValue > 200)
  1539  000472  5032               	movf	ProcessHeat@adcValue+1,w,c
  1540  000474  E104               	bnz	u1960
  1541  000476  0EC9               	movlw	201
  1542  000478  5C31               	subwf	ProcessHeat@adcValue,w,c
  1543  00047A  A0D8               	btfss	status,0,c
  1544  00047C  D002               	goto	l263
  1545  00047E                     u1960:
  1546                           
  1547                           ;system.c: 420: {
  1548                           ;system.c: 421: PORTBbits.RB1 = 0 ;
  1549  00047E  9281               	bcf	3969,1,c	;volatile
  1550                           
  1551                           ;system.c: 422: }else
  1552  000480  D001               	goto	l2524
  1553  000482                     l263:
  1554                           
  1555                           ;system.c: 423: {
  1556                           ;system.c: 424: PORTBbits.RB1 = 1 ;
  1557  000482  8281               	bsf	3969,1,c	;volatile
  1558  000484                     l2524:
  1559  000484  0EE8               	movlw	232
  1560  000486  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1561  000488  6E28               	movwf	??_ProcessHeat& (0+255),c
  1562  00048A  0E03               	movlw	3
  1563  00048C  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1564  00048E  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1565  000490  0E00               	movlw	0
  1566  000492  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1567  000494  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1568  000496  0E00               	movlw	0
  1569  000498  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1570  00049A  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1571  00049C  5028               	movf	??_ProcessHeat,w,c
  1572  00049E  5C59               	subwf	_timeSystemRun,w,c
  1573  0004A0  5029               	movf	??_ProcessHeat+1,w,c
  1574  0004A2  585A               	subwfb	_timeSystemRun+1,w,c
  1575  0004A4  502A               	movf	??_ProcessHeat+2,w,c
  1576  0004A6  585B               	subwfb	_timeSystemRun+2,w,c
  1577  0004A8  502B               	movf	??_ProcessHeat+3,w,c
  1578  0004AA  585C               	subwfb	_timeSystemRun+3,w,c
  1579  0004AC  B0D8               	btfsc	status,0,c
  1580  0004AE  D046               	goto	l2550
  1581  0004B0  D7D9               	goto	l2518
  1582  0004B2                     l2526:
  1583                           
  1584                           ;system.c: 430: if ( adcValue > 220 )
  1585  0004B2  5032               	movf	ProcessHeat@adcValue+1,w,c
  1586  0004B4  E104               	bnz	u1980
  1587  0004B6  0EDD               	movlw	221
  1588  0004B8  5C31               	subwf	ProcessHeat@adcValue,w,c
  1589  0004BA  A0D8               	btfss	status,0,c
  1590  0004BC  D03F               	goto	l2550
  1591  0004BE                     u1980:
  1592                           
  1593                           ;system.c: 431: {
  1594                           ;system.c: 432: flagStop = 1 ;
  1595  0004BE  0E01               	movlw	1
  1596  0004C0  6E2C               	movwf	ProcessHeat@flagStop,c
  1597                           
  1598                           ;system.c: 433: PORTCbits.RC0 = 1 ;
  1599  0004C2  8082               	bsf	3970,0,c	;volatile
  1600                           
  1601                           ;system.c: 434: PORTCbits.RC3 = 1 ;
  1602  0004C4  8682               	bsf	3970,3,c	;volatile
  1603                           
  1604                           ;system.c: 435: PORTCbits.RC6 = 1 ;
  1605  0004C6  8C82               	bsf	3970,6,c	;volatile
  1606                           
  1607                           ;system.c: 437: countHeatTime = timeSystemRun ;
  1608  0004C8  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1609  0004CC  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1610  0004D0  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1611  0004D4  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1612                           
  1613                           ;system.c: 438: while ( (countHeatTime + 1000) > timeSystemRun )
  1614  0004D8  D010               	goto	l2544
  1615  0004DA                     l2538:
  1616                           
  1617                           ;system.c: 439: {
  1618                           ;system.c: 440: adcValue = GetAdcAD597Value( 0 );
  1619  0004DA  0E00               	movlw	0
  1620  0004DC  EC47  F004         	call	_GetAdcAD597Value
  1621  0004E0  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1622  0004E4  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1623                           
  1624                           ;system.c: 441: if ( adcValue > 220)
  1625  0004E8  5032               	movf	ProcessHeat@adcValue+1,w,c
  1626  0004EA  E104               	bnz	u1990
  1627  0004EC  0EDD               	movlw	221
  1628  0004EE  5C31               	subwf	ProcessHeat@adcValue,w,c
  1629  0004F0  A0D8               	btfss	status,0,c
  1630  0004F2  D002               	goto	l270
  1631  0004F4                     u1990:
  1632                           
  1633                           ;system.c: 442: {
  1634                           ;system.c: 443: PORTBbits.RB1 = 0 ;
  1635  0004F4  9281               	bcf	3969,1,c	;volatile
  1636                           
  1637                           ;system.c: 444: }else
  1638  0004F6  D001               	goto	l2544
  1639  0004F8                     l270:
  1640                           
  1641                           ;system.c: 445: {
  1642                           ;system.c: 446: PORTBbits.RB1 = 1 ;
  1643  0004F8  8281               	bsf	3969,1,c	;volatile
  1644  0004FA                     l2544:
  1645  0004FA  0EE8               	movlw	232
  1646  0004FC  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1647  0004FE  6E28               	movwf	??_ProcessHeat& (0+255),c
  1648  000500  0E03               	movlw	3
  1649  000502  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1650  000504  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1651  000506  0E00               	movlw	0
  1652  000508  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1653  00050A  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1654  00050C  0E00               	movlw	0
  1655  00050E  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1656  000510  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1657  000512  5028               	movf	??_ProcessHeat,w,c
  1658  000514  5C59               	subwf	_timeSystemRun,w,c
  1659  000516  5029               	movf	??_ProcessHeat+1,w,c
  1660  000518  585A               	subwfb	_timeSystemRun+1,w,c
  1661  00051A  502A               	movf	??_ProcessHeat+2,w,c
  1662  00051C  585B               	subwfb	_timeSystemRun+2,w,c
  1663  00051E  502B               	movf	??_ProcessHeat+3,w,c
  1664  000520  585C               	subwfb	_timeSystemRun+3,w,c
  1665  000522  B0D8               	btfsc	status,0,c
  1666  000524  D00B               	goto	l2550
  1667  000526  D7D9               	goto	l2538
  1668  000528                     l2548:
  1669  000528  5062               	movf	_levelTmpSetting,w,c
  1670                           
  1671                           ; Switch size 1, requested type "space"
  1672                           ; Number of cases is 3, Range of values is 1 to 3
  1673                           ; switch strategies available:
  1674                           ; Name         Instructions Cycles
  1675                           ; simple_byte           10     6 (average)
  1676                           ;	Chosen strategy is simple_byte
  1677  00052A  0A01               	xorlw	1	; case 1
  1678  00052C  B4D8               	btfsc	status,2,c
  1679  00052E  D74E               	goto	l2492
  1680  000530  0A03               	xorlw	3	; case 2
  1681  000532  B4D8               	btfsc	status,2,c
  1682  000534  D784               	goto	l2508
  1683  000536  0A01               	xorlw	1	; case 3
  1684  000538  B4D8               	btfsc	status,2,c
  1685  00053A  D7BB               	goto	l2526
  1686  00053C                     l2550:
  1687                           
  1688                           ;system.c: 455: if ( flagStop )
  1689  00053C  502C               	movf	ProcessHeat@flagStop,w,c
  1690  00053E  B4D8               	btfsc	status,2,c
  1691  000540  D722               	goto	l2484
  1692  000542                     l249:
  1693                           
  1694                           ;system.c: 458: }
  1695                           ;system.c: 459: }
  1696                           ;system.c: 461: PORTBbits.RB1 = 0 ;
  1697  000542  9281               	bcf	3969,1,c	;volatile
  1698  000544  0012               	return		;funcret
  1699  000546                     __end_of_ProcessHeat:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           postinc2	equ	0xFDE
  1705                           postdec2	equ	0xFDD
  1706                           fsr2h	equ	0xFDA
  1707                           fsr2l	equ	0xFD9
  1708                           status	equ	0xFD8
  1709                           
  1710 ;; *************** function _WriteEEprom *****************
  1711 ;; Defined at:
  1712 ;;		line 47 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  addr            1    wreg     unsigned char 
  1715 ;;  data            1   22[COMRAM] unsigned char 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  addr            1   23[COMRAM] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;		None               void
  1720 ;; Registers used:
  1721 ;;		wreg, status,2
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1727 ;;      Params:         1       0       0       0
  1728 ;;      Locals:         1       0       0       0
  1729 ;;      Temps:          0       0       0       0
  1730 ;;      Totals:         2       0       0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_ProcessHeat
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text4
  1742  000B24                     __ptext4:
  1743                           	opt stack 0
  1744  000B24                     _WriteEEprom:
  1745                           	opt stack 28
  1746                           
  1747                           ;incstack = 0
  1748                           ;WriteEEprom@addr stored from wreg
  1749  000B24  6E18               	movwf	WriteEEprom@addr,c
  1750  000B26                     l362:
  1751                           
  1752                           ;EEprom.c: 50: while( EECON1bits.WR ) ;
  1753  000B26  B2A6               	btfsc	4006,1,c	;volatile
  1754  000B28  D7FE               	goto	l362
  1755                           
  1756                           ;EEprom.c: 52: EEADR = addr ;
  1757  000B2A  C018  FFA9         	movff	WriteEEprom@addr,4009	;volatile
  1758                           
  1759                           ;EEprom.c: 53: EEDATA = data ;
  1760  000B2E  C017  FFA8         	movff	WriteEEprom@data,4008	;volatile
  1761                           
  1762                           ;EEprom.c: 54: EECON1bits.EEPGD = 0 ;
  1763  000B32  9EA6               	bcf	4006,7,c	;volatile
  1764                           
  1765                           ;EEprom.c: 56: EECON1bits.WREN = 1 ;
  1766  000B34  84A6               	bsf	4006,2,c	;volatile
  1767                           
  1768                           ;EEprom.c: 59: INTCONbits.GIE = 0 ;
  1769  000B36  9EF2               	bcf	intcon,7,c	;volatile
  1770                           
  1771                           ;EEprom.c: 60: EECON2 = 0X55;
  1772  000B38  0E55               	movlw	85
  1773  000B3A  6EA7               	movwf	4007,c	;volatile
  1774                           
  1775                           ;EEprom.c: 61: EECON2 = 0XAA;
  1776  000B3C  0EAA               	movlw	170
  1777  000B3E  6EA7               	movwf	4007,c	;volatile
  1778                           
  1779                           ;EEprom.c: 62: EECON1bits.WR = 1 ;
  1780  000B40  82A6               	bsf	4006,1,c	;volatile
  1781                           
  1782                           ;EEprom.c: 63: INTCONbits.GIE = 1 ;
  1783  000B42  8EF2               	bsf	intcon,7,c	;volatile
  1784  000B44                     l2308:
  1785                           
  1786                           ;EEprom.c: 66: while( EECON1bits.WR) ;
  1787  000B44  B2A6               	btfsc	4006,1,c	;volatile
  1788  000B46  D7FE               	goto	l2308
  1789                           
  1790                           ;EEprom.c: 67: EECON1bits.WREN = 0 ;
  1791  000B48  94A6               	bcf	4006,2,c	;volatile
  1792  000B4A  0012               	return		;funcret
  1793  000B4C                     __end_of_WriteEEprom:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           intcon	equ	0xFF2
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           postinc2	equ	0xFDE
  1800                           postdec2	equ	0xFDD
  1801                           fsr2h	equ	0xFDA
  1802                           fsr2l	equ	0xFD9
  1803                           status	equ	0xFD8
  1804                           
  1805 ;; *************** function _ReadEEprom *****************
  1806 ;; Defined at:
  1807 ;;		line 79 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  addr            1    wreg     unsigned char 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  addr            1   22[COMRAM] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      unsigned char 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1821 ;;      Params:         0       0       0       0
  1822 ;;      Locals:         1       0       0       0
  1823 ;;      Temps:          0       0       0       0
  1824 ;;      Totals:         1       0       0       0
  1825 ;;Total ram usage:        1 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;;		_ProcessHeat
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text5
  1837  000BEC                     __ptext5:
  1838                           	opt stack 0
  1839  000BEC                     _ReadEEprom:
  1840                           	opt stack 29
  1841                           
  1842                           ;incstack = 0
  1843                           ;ReadEEprom@addr stored from wreg
  1844  000BEC  6E17               	movwf	ReadEEprom@addr,c
  1845  000BEE                     l369:
  1846                           
  1847                           ;EEprom.c: 82: while( EECON1bits.RD ) ;
  1848  000BEE  B0A6               	btfsc	4006,0,c	;volatile
  1849  000BF0  D7FE               	goto	l369
  1850                           
  1851                           ;EEprom.c: 84: EEADR = addr ;
  1852  000BF2  C017  FFA9         	movff	ReadEEprom@addr,4009	;volatile
  1853                           
  1854                           ;EEprom.c: 85: EECON1bits.EEPGD = 0 ;
  1855  000BF6  9EA6               	bcf	4006,7,c	;volatile
  1856                           
  1857                           ;EEprom.c: 87: EECON1bits.RD = 1 ;
  1858  000BF8  80A6               	bsf	4006,0,c	;volatile
  1859  000BFA                     l2282:
  1860                           
  1861                           ;EEprom.c: 89: while ( EECON1bits.RD ) ;
  1862  000BFA  B0A6               	btfsc	4006,0,c	;volatile
  1863  000BFC  D7FE               	goto	l2282
  1864                           
  1865                           ;EEprom.c: 91: return( EEDATA );
  1866  000BFE  50A8               	movf	4008,w,c	;volatile
  1867  000C00  0012               	return		;funcret
  1868  000C02                     __end_of_ReadEEprom:
  1869                           	opt stack 0
  1870                           tblptru	equ	0xFF8
  1871                           intcon	equ	0xFF2
  1872                           postinc0	equ	0xFEE
  1873                           wreg	equ	0xFE8
  1874                           postinc2	equ	0xFDE
  1875                           postdec2	equ	0xFDD
  1876                           fsr2h	equ	0xFDA
  1877                           fsr2l	equ	0xFD9
  1878                           status	equ	0xFD8
  1879                           
  1880 ;; *************** function _HeatProcessLedShow *****************
  1881 ;; Defined at:
  1882 ;;		line 92 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;		None               void
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1896 ;;      Params:         0       0       0       0
  1897 ;;      Locals:         0       0       0       0
  1898 ;;      Temps:          0       0       0       0
  1899 ;;      Totals:         0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    1
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_ProcessHeat
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text6
  1911  000934                     __ptext6:
  1912                           	opt stack 0
  1913  000934                     _HeatProcessLedShow:
  1914                           	opt stack 28
  1915                           
  1916                           ;RGBLedDisplay.c: 96: {
  1917                           ;RGBLedDisplay.c: 97: switch ( levelTmpSetting )
  1918                           
  1919                           ;incstack = 0
  1920                           ;RGBLedDisplay.c: 95: while(1)
  1921  000934  D03F               	goto	l2342
  1922  000936                     l2310:
  1923                           
  1924                           ;RGBLedDisplay.c: 100: if ( timerHalfSecond < 1)
  1925  000936  505D               	movf	_timerHalfSecond,w,c
  1926  000938  105E               	iorwf	_timerHalfSecond+1,w,c
  1927  00093A  A4D8               	btfss	status,2,c
  1928  00093C  D002               	goto	l2314
  1929                           
  1930                           ;RGBLedDisplay.c: 101: {
  1931                           ;RGBLedDisplay.c: 102: PORTCbits.RC2 = 1 ;
  1932  00093E  8482               	bsf	3970,2,c	;volatile
  1933                           
  1934                           ;RGBLedDisplay.c: 103: }
  1935  000940  0012               	return	
  1936  000942                     l2314:
  1937                           
  1938                           ;RGBLedDisplay.c: 104: else if ( timerHalfSecond <2 )
  1939  000942  505E               	movf	_timerHalfSecond+1,w,c
  1940  000944  E106               	bnz	l2318
  1941  000946  0E02               	movlw	2
  1942  000948  5C5D               	subwf	_timerHalfSecond,w,c
  1943  00094A  B0D8               	btfsc	status,0,c
  1944  00094C  D002               	goto	l2318
  1945                           
  1946                           ;RGBLedDisplay.c: 105: {
  1947                           ;RGBLedDisplay.c: 106: PORTCbits.RC2 = 0 ;
  1948  00094E  9482               	bcf	3970,2,c	;volatile
  1949                           
  1950                           ;RGBLedDisplay.c: 107: }else
  1951  000950  0012               	return	
  1952  000952                     l2318:
  1953                           
  1954                           ;RGBLedDisplay.c: 108: {
  1955                           ;RGBLedDisplay.c: 109: timerHalfSecond = 0 ;
  1956  000952  0E00               	movlw	0
  1957  000954  6E5E               	movwf	_timerHalfSecond+1,c
  1958  000956  0E00               	movlw	0
  1959  000958  6E5D               	movwf	_timerHalfSecond,c
  1960                           
  1961                           ;RGBLedDisplay.c: 110: }
  1962                           ;RGBLedDisplay.c: 111: break;
  1963  00095A  0012               	return	
  1964  00095C                     l2320:
  1965                           
  1966                           ;RGBLedDisplay.c: 113: if ( timerHalfSecond < 1)
  1967  00095C  505D               	movf	_timerHalfSecond,w,c
  1968  00095E  105E               	iorwf	_timerHalfSecond+1,w,c
  1969  000960  A4D8               	btfss	status,2,c
  1970  000962  D003               	goto	l2324
  1971                           
  1972                           ;RGBLedDisplay.c: 114: {
  1973                           ;RGBLedDisplay.c: 115: PORTCbits.RC1 = 1 ;
  1974  000964  8282               	bsf	3970,1,c	;volatile
  1975                           
  1976                           ;RGBLedDisplay.c: 116: PORTCbits.RC4 = 1;
  1977  000966  8882               	bsf	3970,4,c	;volatile
  1978                           
  1979                           ;RGBLedDisplay.c: 117: }
  1980  000968  0012               	return	
  1981  00096A                     l2324:
  1982                           
  1983                           ;RGBLedDisplay.c: 118: else if ( timerHalfSecond < 2 )
  1984  00096A  505E               	movf	_timerHalfSecond+1,w,c
  1985  00096C  E107               	bnz	l2328
  1986  00096E  0E02               	movlw	2
  1987  000970  5C5D               	subwf	_timerHalfSecond,w,c
  1988  000972  B0D8               	btfsc	status,0,c
  1989  000974  D003               	goto	l2328
  1990                           
  1991                           ;RGBLedDisplay.c: 119: {
  1992                           ;RGBLedDisplay.c: 120: PORTCbits.RC1 = 0;
  1993  000976  9282               	bcf	3970,1,c	;volatile
  1994                           
  1995                           ;RGBLedDisplay.c: 121: PORTCbits.RC4 = 0;
  1996  000978  9882               	bcf	3970,4,c	;volatile
  1997                           
  1998                           ;RGBLedDisplay.c: 122: }else
  1999  00097A  0012               	return	
  2000  00097C                     l2328:
  2001                           
  2002                           ;RGBLedDisplay.c: 123: {
  2003                           ;RGBLedDisplay.c: 124: timerHalfSecond = 0 ;
  2004  00097C  0E00               	movlw	0
  2005  00097E  6E5E               	movwf	_timerHalfSecond+1,c
  2006  000980  0E00               	movlw	0
  2007  000982  6E5D               	movwf	_timerHalfSecond,c
  2008                           
  2009                           ;RGBLedDisplay.c: 125: }
  2010                           ;RGBLedDisplay.c: 126: break;
  2011  000984  0012               	return	
  2012  000986                     l2330:
  2013                           
  2014                           ;RGBLedDisplay.c: 128: if ( timerHalfSecond < 1)
  2015  000986  505D               	movf	_timerHalfSecond,w,c
  2016  000988  105E               	iorwf	_timerHalfSecond+1,w,c
  2017  00098A  A4D8               	btfss	status,2,c
  2018  00098C  D004               	goto	l2334
  2019                           
  2020                           ;RGBLedDisplay.c: 129: {
  2021                           ;RGBLedDisplay.c: 130: PORTCbits.RC0 = 1 ;
  2022  00098E  8082               	bsf	3970,0,c	;volatile
  2023                           
  2024                           ;RGBLedDisplay.c: 131: PORTCbits.RC3 = 1;
  2025  000990  8682               	bsf	3970,3,c	;volatile
  2026                           
  2027                           ;RGBLedDisplay.c: 132: PORTCbits.RC6 = 1;
  2028  000992  8C82               	bsf	3970,6,c	;volatile
  2029                           
  2030                           ;RGBLedDisplay.c: 133: }
  2031  000994  0012               	return	
  2032  000996                     l2334:
  2033                           
  2034                           ;RGBLedDisplay.c: 134: else if ( timerHalfSecond < 2 )
  2035  000996  505E               	movf	_timerHalfSecond+1,w,c
  2036  000998  E108               	bnz	l2338
  2037  00099A  0E02               	movlw	2
  2038  00099C  5C5D               	subwf	_timerHalfSecond,w,c
  2039  00099E  B0D8               	btfsc	status,0,c
  2040  0009A0  D004               	goto	l2338
  2041                           
  2042                           ;RGBLedDisplay.c: 135: {
  2043                           ;RGBLedDisplay.c: 136: PORTCbits.RC0 = 0 ;
  2044  0009A2  9082               	bcf	3970,0,c	;volatile
  2045                           
  2046                           ;RGBLedDisplay.c: 137: PORTCbits.RC3 = 0;
  2047  0009A4  9682               	bcf	3970,3,c	;volatile
  2048                           
  2049                           ;RGBLedDisplay.c: 138: PORTCbits.RC6 = 0;
  2050  0009A6  9C82               	bcf	3970,6,c	;volatile
  2051                           
  2052                           ;RGBLedDisplay.c: 139: }else
  2053  0009A8  0012               	return	
  2054  0009AA                     l2338:
  2055                           
  2056                           ;RGBLedDisplay.c: 140: {
  2057                           ;RGBLedDisplay.c: 141: timerHalfSecond = 0 ;
  2058  0009AA  0E00               	movlw	0
  2059  0009AC  6E5E               	movwf	_timerHalfSecond+1,c
  2060  0009AE  0E00               	movlw	0
  2061  0009B0  6E5D               	movwf	_timerHalfSecond,c
  2062                           
  2063                           ;RGBLedDisplay.c: 146: }
  2064                           
  2065                           ;RGBLedDisplay.c: 145: break;
  2066                           
  2067                           ;RGBLedDisplay.c: 144: default:
  2068                           
  2069                           ;RGBLedDisplay.c: 142: }
  2070                           ;RGBLedDisplay.c: 143: break;
  2071  0009B2  0012               	return	
  2072  0009B4                     l2342:
  2073  0009B4  5062               	movf	_levelTmpSetting,w,c
  2074                           
  2075                           ; Switch size 1, requested type "space"
  2076                           ; Number of cases is 3, Range of values is 1 to 3
  2077                           ; switch strategies available:
  2078                           ; Name         Instructions Cycles
  2079                           ; simple_byte           10     6 (average)
  2080                           ;	Chosen strategy is simple_byte
  2081  0009B6  0A01               	xorlw	1	; case 1
  2082  0009B8  B4D8               	btfsc	status,2,c
  2083  0009BA  D7BD               	goto	l2310
  2084  0009BC  0A03               	xorlw	3	; case 2
  2085  0009BE  B4D8               	btfsc	status,2,c
  2086  0009C0  D7CD               	goto	l2320
  2087  0009C2  0A01               	xorlw	1	; case 3
  2088  0009C4  A4D8               	btfss	status,2,c
  2089                           
  2090                           ;RGBLedDisplay.c: 148: break;
  2091  0009C6  0012               	return	
  2092  0009C8  D7DE               	goto	l2330
  2093  0009CA                     __end_of_HeatProcessLedShow:
  2094                           	opt stack 0
  2095                           tblptru	equ	0xFF8
  2096                           intcon	equ	0xFF2
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postinc2	equ	0xFDE
  2100                           postdec2	equ	0xFDD
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8
  2104                           
  2105 ;; *************** function _GetAdcAD597Value *****************
  2106 ;; Defined at:
  2107 ;;		line 509 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  channelNumbe    1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  2112 ;;  temp            2   36[COMRAM] unsigned short 
  2113 ;;  i               1   38[COMRAM] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2   31[COMRAM] unsigned short 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2123 ;;      Params:         2       0       0       0
  2124 ;;      Locals:         4       0       0       0
  2125 ;;      Temps:          2       0       0       0
  2126 ;;      Totals:         8       0       0       0
  2127 ;;Total ram usage:        8 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    3
  2130 ;; This function calls:
  2131 ;;		_AD_Converter
  2132 ;;		___lwdiv
  2133 ;; This function is called by:
  2134 ;;		_ProcessHeat
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text7
  2139  00088E                     __ptext7:
  2140                           	opt stack 0
  2141  00088E                     _GetAdcAD597Value:
  2142                           	opt stack 26
  2143                           
  2144                           ;incstack = 0
  2145                           ;GetAdcAD597Value@channelNumber stored from wreg
  2146  00088E  6E24               	movwf	GetAdcAD597Value@channelNumber,c
  2147                           
  2148                           ;system.c: 511: uint8 i;
  2149                           ;system.c: 512: uint16 temp = 0 ;
  2150  000890  0E00               	movlw	0
  2151  000892  6E26               	movwf	GetAdcAD597Value@temp+1,c
  2152  000894  0E00               	movlw	0
  2153  000896  6E25               	movwf	GetAdcAD597Value@temp,c
  2154                           
  2155                           ;system.c: 515: for ( i=0; i< ( 10-1) ;i++)
  2156  000898  0E00               	movlw	0
  2157  00089A  6E27               	movwf	GetAdcAD597Value@i,c
  2158  00089C                     l2346:
  2159  00089C  0E08               	movlw	8
  2160  00089E  6427               	cpfsgt	GetAdcAD597Value@i,c
  2161  0008A0  D001               	goto	l2350
  2162  0008A2  D01E               	goto	l2356
  2163  0008A4                     l2350:
  2164                           
  2165                           ;system.c: 516: {
  2166                           ;system.c: 517: adcAD597Value[i] = adcAD597Value[i+1] ;
  2167  0008A4  5027               	movf	GetAdcAD597Value@i,w,c
  2168  0008A6  6E22               	movwf	??_GetAdcAD597Value& (0+255),c
  2169  0008A8  6A23               	clrf	(??_GetAdcAD597Value+1)& (0+255),c
  2170  0008AA  90D8               	bcf	status,0,c
  2171  0008AC  3622               	rlcf	??_GetAdcAD597Value,f,c
  2172  0008AE  3623               	rlcf	??_GetAdcAD597Value+1,f,c
  2173  0008B0  0E02               	movlw	2
  2174  0008B2  2622               	addwf	??_GetAdcAD597Value,f,c
  2175  0008B4  0E00               	movlw	0
  2176  0008B6  2223               	addwfc	??_GetAdcAD597Value+1,f,c
  2177  0008B8  0E80               	movlw	low _adcAD597Value
  2178  0008BA  2422               	addwf	??_GetAdcAD597Value,w,c
  2179  0008BC  6ED9               	movwf	fsr2l,c
  2180  0008BE  0E00               	movlw	high _adcAD597Value
  2181  0008C0  2023               	addwfc	??_GetAdcAD597Value+1,w,c
  2182  0008C2  6EDA               	movwf	fsr2h,c
  2183  0008C4  5027               	movf	GetAdcAD597Value@i,w,c
  2184  0008C6  0D02               	mullw	2
  2185  0008C8  0E80               	movlw	low _adcAD597Value
  2186  0008CA  24F3               	addwf	prodl,w,c
  2187  0008CC  6EE1               	movwf	fsr1l,c
  2188  0008CE  0E00               	movlw	high _adcAD597Value
  2189  0008D0  20F4               	addwfc	prodh,w,c
  2190  0008D2  6EE2               	movwf	fsr1h,c
  2191  0008D4  CFDE FFE6          	movff	postinc2,postinc1
  2192  0008D8  CFDD FFE5          	movff	postdec2,postdec1
  2193  0008DC  2A27               	incf	GetAdcAD597Value@i,f,c
  2194  0008DE  D7DE               	goto	l2346
  2195  0008E0                     l2356:
  2196                           
  2197                           ;system.c: 518: }
  2198                           ;system.c: 520: adcAD597Value[10-1] = AD_Converter( channelNumber ) ;
  2199  0008E0  5024               	movf	GetAdcAD597Value@channelNumber,w,c
  2200  0008E2  EC54  F005         	call	_AD_Converter
  2201  0008E6  C019  F092         	movff	?_AD_Converter,_adcAD597Value+18
  2202  0008EA  C01A  F093         	movff	?_AD_Converter+1,_adcAD597Value+19
  2203                           
  2204                           ;system.c: 522: for ( i=0 ;i<10 ;i++)
  2205  0008EE  0E00               	movlw	0
  2206  0008F0  6E27               	movwf	GetAdcAD597Value@i,c
  2207  0008F2                     l2360:
  2208  0008F2  0E09               	movlw	9
  2209  0008F4  6427               	cpfsgt	GetAdcAD597Value@i,c
  2210  0008F6  D001               	goto	l2364
  2211  0008F8  D00E               	goto	l2370
  2212  0008FA                     l2364:
  2213                           
  2214                           ;system.c: 523: {
  2215                           ;system.c: 524: temp += adcAD597Value[i] ;
  2216  0008FA  5027               	movf	GetAdcAD597Value@i,w,c
  2217  0008FC  0D02               	mullw	2
  2218  0008FE  0E80               	movlw	low _adcAD597Value
  2219  000900  24F3               	addwf	prodl,w,c
  2220  000902  6ED9               	movwf	fsr2l,c
  2221  000904  0E00               	movlw	high _adcAD597Value
  2222  000906  20F4               	addwfc	prodh,w,c
  2223  000908  6EDA               	movwf	fsr2h,c
  2224  00090A  50DE               	movf	postinc2,w,c
  2225  00090C  2625               	addwf	GetAdcAD597Value@temp,f,c
  2226  00090E  50DD               	movf	postdec2,w,c
  2227  000910  2226               	addwfc	GetAdcAD597Value@temp+1,f,c
  2228  000912  2A27               	incf	GetAdcAD597Value@i,f,c
  2229  000914  D7EE               	goto	l2360
  2230  000916                     l2370:
  2231                           
  2232                           ;system.c: 525: }
  2233                           ;system.c: 527: return ( temp/10 );
  2234  000916  C025  F017         	movff	GetAdcAD597Value@temp,___lwdiv@dividend
  2235  00091A  C026  F018         	movff	GetAdcAD597Value@temp+1,___lwdiv@dividend+1
  2236  00091E  0E00               	movlw	0
  2237  000920  6E1A               	movwf	___lwdiv@divisor+1,c
  2238  000922  0E0A               	movlw	10
  2239  000924  6E19               	movwf	___lwdiv@divisor,c
  2240  000926  ECE5  F004         	call	___lwdiv	;wreg free
  2241  00092A  C017  F020         	movff	?___lwdiv,?_GetAdcAD597Value
  2242  00092E  C018  F021         	movff	?___lwdiv+1,?_GetAdcAD597Value+1
  2243  000932  0012               	return	
  2244  000934                     __end_of_GetAdcAD597Value:
  2245                           	opt stack 0
  2246                           tblptru	equ	0xFF8
  2247                           prodh	equ	0xFF4
  2248                           prodl	equ	0xFF3
  2249                           intcon	equ	0xFF2
  2250                           postinc0	equ	0xFEE
  2251                           wreg	equ	0xFE8
  2252                           postinc1	equ	0xFE6
  2253                           postdec1	equ	0xFE5
  2254                           fsr1h	equ	0xFE2
  2255                           fsr1l	equ	0xFE1
  2256                           postinc2	equ	0xFDE
  2257                           postdec2	equ	0xFDD
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _ProcessButton *****************
  2263 ;; Defined at:
  2264 ;;		line 42 in file "WAFR-01-C001 HD-debug.X/keyboard/keyboard.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  buttonPushPe    4   26[COMRAM] unsigned long 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2278 ;;      Params:         0       0       0       0
  2279 ;;      Locals:         4       0       0       0
  2280 ;;      Temps:          4       0       0       0
  2281 ;;      Totals:         8       0       0       0
  2282 ;;Total ram usage:        8 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    3
  2285 ;; This function calls:
  2286 ;;		_LevelTmpSetShow
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text8
  2293  00066E                     __ptext8:
  2294                           	opt stack 0
  2295  00066E                     _ProcessButton:
  2296                           	opt stack 27
  2297                           
  2298                           ;keyboard.c: 44: uint32 buttonPushPeriod = 0 ;
  2299                           
  2300                           ;incstack = 0
  2301  00066E  0E00               	movlw	0
  2302  000670  6E1B               	movwf	ProcessButton@buttonPushPeriod,c
  2303  000672  0E00               	movlw	0
  2304  000674  6E1C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2305  000676  0E00               	movlw	0
  2306  000678  6E1D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2307  00067A  0E00               	movlw	0
  2308  00067C  6E1E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2309                           
  2310                           ;keyboard.c: 46: if ( flagS2KeyPushed )
  2311  00067E  5061               	movf	_flagS2KeyPushed,w,c
  2312  000680  B4D8               	btfsc	status,2,c
  2313  000682  D051               	goto	l2468
  2314                           
  2315                           ;keyboard.c: 47: {
  2316                           ;keyboard.c: 48: flagS2KeyPushed = 0 ;
  2317  000684  0E00               	movlw	0
  2318  000686  6E61               	movwf	_flagS2KeyPushed,c
  2319                           
  2320                           ;keyboard.c: 52: buttonPushPeriod = buttonPushTimeStop-buttonPushTimeStart ;
  2321  000688  C04D  F017         	movff	_buttonPushTimeStart,??_ProcessButton
  2322  00068C  C04E  F018         	movff	_buttonPushTimeStart+1,??_ProcessButton+1
  2323  000690  C04F  F019         	movff	_buttonPushTimeStart+2,??_ProcessButton+2
  2324  000694  C050  F01A         	movff	_buttonPushTimeStart+3,??_ProcessButton+3
  2325  000698  1E17               	comf	??_ProcessButton,f,c
  2326  00069A  1E18               	comf	??_ProcessButton+1,f,c
  2327  00069C  1E19               	comf	??_ProcessButton+2,f,c
  2328  00069E  1E1A               	comf	??_ProcessButton+3,f,c
  2329  0006A0  2A17               	incf	??_ProcessButton,f,c
  2330  0006A2  0E00               	movlw	0
  2331  0006A4  2218               	addwfc	??_ProcessButton+1,f,c
  2332  0006A6  2219               	addwfc	??_ProcessButton+2,f,c
  2333  0006A8  221A               	addwfc	??_ProcessButton+3,f,c
  2334  0006AA  5051               	movf	_buttonPushTimeStop,w,c
  2335  0006AC  2417               	addwf	??_ProcessButton,w,c
  2336  0006AE  6E1B               	movwf	ProcessButton@buttonPushPeriod,c
  2337  0006B0  5052               	movf	_buttonPushTimeStop+1,w,c
  2338  0006B2  2018               	addwfc	??_ProcessButton+1,w,c
  2339  0006B4  6E1C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2340  0006B6  5053               	movf	_buttonPushTimeStop+2,w,c
  2341  0006B8  2019               	addwfc	??_ProcessButton+2,w,c
  2342  0006BA  6E1D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2343  0006BC  5054               	movf	_buttonPushTimeStop+3,w,c
  2344  0006BE  201A               	addwfc	??_ProcessButton+3,w,c
  2345  0006C0  6E1E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2346                           
  2347                           ;keyboard.c: 57: if ( S2KeyPushTime < 12 )
  2348  0006C2  0E0C               	movlw	12
  2349  0006C4  605F               	cpfslt	_S2KeyPushTime,c
  2350  0006C6  D00B               	goto	l2438
  2351                           
  2352                           ;keyboard.c: 58: {
  2353                           ;keyboard.c: 60: levelTmpSetting ++ ;
  2354  0006C8  2A62               	incf	_levelTmpSetting,f,c
  2355                           
  2356                           ;keyboard.c: 61: if ( levelTmpSetting > 3 )
  2357  0006CA  0E03               	movlw	3
  2358  0006CC  6462               	cpfsgt	_levelTmpSetting,c
  2359  0006CE  D002               	goto	l474
  2360                           
  2361                           ;keyboard.c: 62: {
  2362                           ;keyboard.c: 63: levelTmpSetting = 1 ;
  2363  0006D0  0E01               	movlw	1
  2364  0006D2  6E62               	movwf	_levelTmpSetting,c
  2365  0006D4                     l474:
  2366                           
  2367                           ;keyboard.c: 64: }
  2368                           ;keyboard.c: 66: timerHalfSecond = 0 ;
  2369  0006D4  0E00               	movlw	0
  2370  0006D6  6E5E               	movwf	_timerHalfSecond+1,c
  2371  0006D8  0E00               	movlw	0
  2372  0006DA  6E5D               	movwf	_timerHalfSecond,c
  2373                           
  2374                           ;keyboard.c: 70: }
  2375  0006DC  D002               	goto	l2442
  2376  0006DE                     l2438:
  2377                           
  2378                           ;keyboard.c: 71: else
  2379                           ;keyboard.c: 72: {
  2380                           ;keyboard.c: 74: return ( 3 ) ;
  2381  0006DE  0E03               	movlw	3
  2382  0006E0  0012               	return	
  2383  0006E2                     l2442:
  2384                           
  2385                           ;keyboard.c: 75: }
  2386                           ;keyboard.c: 81: if( buttonPushPeriod < 50 )
  2387  0006E2  501E               	movf	ProcessButton@buttonPushPeriod+3,w,c
  2388  0006E4  101D               	iorwf	ProcessButton@buttonPushPeriod+2,w,c
  2389  0006E6  101C               	iorwf	ProcessButton@buttonPushPeriod+1,w,c
  2390  0006E8  E114               	bnz	l477
  2391  0006EA  0E32               	movlw	50
  2392  0006EC  5C1B               	subwf	ProcessButton@buttonPushPeriod,w,c
  2393  0006EE  B0D8               	btfsc	status,0,c
  2394  0006F0  D010               	goto	l477
  2395                           
  2396                           ;keyboard.c: 82: {
  2397                           ;keyboard.c: 86: levelTmpSetting -- ;
  2398  0006F2  0662               	decf	_levelTmpSetting,f,c
  2399                           
  2400                           ;keyboard.c: 87: if (levelTmpSetting < 1 )
  2401  0006F4  5062               	movf	_levelTmpSetting,w,c
  2402  0006F6  A4D8               	btfss	status,2,c
  2403  0006F8  D002               	goto	l2450
  2404                           
  2405                           ;keyboard.c: 88: {
  2406                           ;keyboard.c: 89: levelTmpSetting = 3 ;
  2407  0006FA  0E03               	movlw	3
  2408  0006FC  6E62               	movwf	_levelTmpSetting,c
  2409  0006FE                     l2450:
  2410                           
  2411                           ;keyboard.c: 90: }
  2412                           ;keyboard.c: 97: levelTmpSetting -- ;
  2413  0006FE  0662               	decf	_levelTmpSetting,f,c
  2414                           
  2415                           ;keyboard.c: 98: if (levelTmpSetting < 1 )
  2416  000700  5062               	movf	_levelTmpSetting,w,c
  2417  000702  A4D8               	btfss	status,2,c
  2418  000704  D002               	goto	l2456
  2419                           
  2420                           ;keyboard.c: 99: {
  2421                           ;keyboard.c: 100: levelTmpSetting = 3 ;
  2422  000706  0E03               	movlw	3
  2423  000708  6E62               	movwf	_levelTmpSetting,c
  2424  00070A                     l2456:
  2425                           
  2426                           ;keyboard.c: 101: }
  2427                           ;keyboard.c: 103: LevelTmpSetShow ();
  2428  00070A  EC31  F005         	call	_LevelTmpSetShow	;wreg free
  2429                           
  2430                           ;keyboard.c: 104: return ( 2 );
  2431  00070E  0E02               	movlw	2
  2432  000710  0012               	return	
  2433  000712                     l477:
  2434                           
  2435                           ;keyboard.c: 106: {
  2436                           ;keyboard.c: 107: buttonPushTimeStart = buttonPushTimeStop ;
  2437  000712  C051  F04D         	movff	_buttonPushTimeStop,_buttonPushTimeStart
  2438  000716  C052  F04E         	movff	_buttonPushTimeStop+1,_buttonPushTimeStart+1
  2439  00071A  C053  F04F         	movff	_buttonPushTimeStop+2,_buttonPushTimeStart+2
  2440  00071E  C054  F050         	movff	_buttonPushTimeStop+3,_buttonPushTimeStart+3
  2441                           
  2442                           ;keyboard.c: 113: return ( 1) ;
  2443  000722  0E01               	movlw	1
  2444  000724  0012               	return	
  2445  000726                     l2468:
  2446                           
  2447                           ;keyboard.c: 114: }
  2448                           ;keyboard.c: 116: }
  2449                           ;keyboard.c: 118: return ( 0 );
  2450  000726  0E00               	movlw	0
  2451  000728  0012               	return	
  2452  00072A                     __end_of_ProcessButton:
  2453                           	opt stack 0
  2454                           tblptru	equ	0xFF8
  2455                           prodh	equ	0xFF4
  2456                           prodl	equ	0xFF3
  2457                           intcon	equ	0xFF2
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           postinc1	equ	0xFE6
  2461                           postdec1	equ	0xFE5
  2462                           fsr1h	equ	0xFE2
  2463                           fsr1l	equ	0xFE1
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _LevelTmpSetShow *****************
  2471 ;; Defined at:
  2472 ;;		line 32 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;		None               void
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2486 ;;      Params:         0       0       0       0
  2487 ;;      Locals:         0       0       0       0
  2488 ;;      Temps:          0       0       0       0
  2489 ;;      Totals:         0       0       0       0
  2490 ;;Total ram usage:        0 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    2
  2493 ;; This function calls:
  2494 ;;		_turnOffAllLed
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;;		_ProcessButton
  2498 ;;		_InitializeHardware
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text9
  2503  000A62                     __ptext9:
  2504                           	opt stack 0
  2505  000A62                     _LevelTmpSetShow:
  2506                           	opt stack 27
  2507                           
  2508                           ;RGBLedDisplay.c: 35: turnOffAllLed();
  2509                           
  2510                           ;incstack = 0
  2511  000A62  EC01  F006         	call	_turnOffAllLed	;wreg free
  2512                           
  2513                           ;RGBLedDisplay.c: 36: switch ( levelTmpSetting )
  2514  000A66  D015               	goto	l2288
  2515  000A68                     l415:
  2516                           
  2517                           ;RGBLedDisplay.c: 39: PORTCbits.RC0 = 1 ;
  2518  000A68  8082               	bsf	3970,0,c	;volatile
  2519                           
  2520                           ;RGBLedDisplay.c: 40: PORTCbits.RC1 = 1 ;
  2521  000A6A  8282               	bsf	3970,1,c	;volatile
  2522                           
  2523                           ;RGBLedDisplay.c: 41: PORTCbits.RC2 = 1 ;
  2524  000A6C  8482               	bsf	3970,2,c	;volatile
  2525                           
  2526                           ;RGBLedDisplay.c: 42: break;
  2527  000A6E  0012               	return	
  2528  000A70                     l417:
  2529                           
  2530                           ;RGBLedDisplay.c: 44: PORTCbits.RC0 = 1 ;
  2531  000A70  8082               	bsf	3970,0,c	;volatile
  2532                           
  2533                           ;RGBLedDisplay.c: 45: PORTCbits.RC1 = 1 ;
  2534  000A72  8282               	bsf	3970,1,c	;volatile
  2535                           
  2536                           ;RGBLedDisplay.c: 46: PORTCbits.RC2 = 1 ;
  2537  000A74  8482               	bsf	3970,2,c	;volatile
  2538                           
  2539                           ;RGBLedDisplay.c: 47: PORTCbits.RC3 = 1 ;
  2540  000A76  8682               	bsf	3970,3,c	;volatile
  2541                           
  2542                           ;RGBLedDisplay.c: 48: PORTCbits.RC4 = 1 ;
  2543  000A78  8882               	bsf	3970,4,c	;volatile
  2544                           
  2545                           ;RGBLedDisplay.c: 49: PORTCbits.RC5 = 1 ;
  2546  000A7A  8A82               	bsf	3970,5,c	;volatile
  2547                           
  2548                           ;RGBLedDisplay.c: 50: break;
  2549  000A7C  0012               	return	
  2550  000A7E                     l418:
  2551                           
  2552                           ;RGBLedDisplay.c: 52: PORTCbits.RC0 = 1 ;
  2553  000A7E  8082               	bsf	3970,0,c	;volatile
  2554                           
  2555                           ;RGBLedDisplay.c: 53: PORTCbits.RC1 = 1 ;
  2556  000A80  8282               	bsf	3970,1,c	;volatile
  2557                           
  2558                           ;RGBLedDisplay.c: 54: PORTCbits.RC2 = 1 ;
  2559  000A82  8482               	bsf	3970,2,c	;volatile
  2560                           
  2561                           ;RGBLedDisplay.c: 55: PORTCbits.RC3 = 1 ;
  2562  000A84  8682               	bsf	3970,3,c	;volatile
  2563                           
  2564                           ;RGBLedDisplay.c: 56: PORTCbits.RC4 = 1 ;
  2565  000A86  8882               	bsf	3970,4,c	;volatile
  2566                           
  2567                           ;RGBLedDisplay.c: 57: PORTCbits.RC5 = 1 ;
  2568  000A88  8A82               	bsf	3970,5,c	;volatile
  2569                           
  2570                           ;RGBLedDisplay.c: 58: PORTCbits.RC6 = 1 ;
  2571  000A8A  8C82               	bsf	3970,6,c	;volatile
  2572                           
  2573                           ;RGBLedDisplay.c: 59: PORTCbits.RC7 = 1 ;
  2574  000A8C  8E82               	bsf	3970,7,c	;volatile
  2575                           
  2576                           ;RGBLedDisplay.c: 60: PORTBbits.RB3 = 1 ;
  2577  000A8E  8681               	bsf	3969,3,c	;volatile
  2578                           
  2579                           ;RGBLedDisplay.c: 64: }
  2580                           
  2581                           ;RGBLedDisplay.c: 63: break;
  2582                           
  2583                           ;RGBLedDisplay.c: 62: default:
  2584                           
  2585                           ;RGBLedDisplay.c: 61: break;
  2586  000A90  0012               	return	
  2587  000A92                     l2288:
  2588  000A92  5062               	movf	_levelTmpSetting,w,c
  2589                           
  2590                           ; Switch size 1, requested type "space"
  2591                           ; Number of cases is 3, Range of values is 1 to 3
  2592                           ; switch strategies available:
  2593                           ; Name         Instructions Cycles
  2594                           ; simple_byte           10     6 (average)
  2595                           ;	Chosen strategy is simple_byte
  2596  000A94  0A01               	xorlw	1	; case 1
  2597  000A96  B4D8               	btfsc	status,2,c
  2598  000A98  D7E7               	goto	l415
  2599  000A9A  0A03               	xorlw	3	; case 2
  2600  000A9C  B4D8               	btfsc	status,2,c
  2601  000A9E  D7E8               	goto	l417
  2602  000AA0  0A01               	xorlw	1	; case 3
  2603  000AA2  A4D8               	btfss	status,2,c
  2604  000AA4  0012               	return	
  2605  000AA6  D7EB               	goto	l418
  2606  000AA8                     __end_of_LevelTmpSetShow:
  2607                           	opt stack 0
  2608                           tblptru	equ	0xFF8
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           intcon	equ	0xFF2
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           postinc1	equ	0xFE6
  2615                           postdec1	equ	0xFE5
  2616                           fsr1h	equ	0xFE2
  2617                           fsr1l	equ	0xFE1
  2618                           postinc2	equ	0xFDE
  2619                           postdec2	equ	0xFDD
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _turnOffAllLed *****************
  2625 ;; Defined at:
  2626 ;;		line 74 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;		None               void
  2633 ;; Registers used:
  2634 ;;		wreg, status,2
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2640 ;;      Params:         0       0       0       0
  2641 ;;      Locals:         0       0       0       0
  2642 ;;      Temps:          0       0       0       0
  2643 ;;      Totals:         0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;;		_ShutDownSystem
  2652 ;;		_ProcessHeat
  2653 ;;		_LevelTmpSetShow
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text10
  2658  000C02                     __ptext10:
  2659                           	opt stack 0
  2660  000C02                     _turnOffAllLed:
  2661                           	opt stack 29
  2662                           
  2663                           ;RGBLedDisplay.c: 77: PORTC = 0;
  2664                           
  2665                           ;incstack = 0
  2666  000C02  0E00               	movlw	0
  2667  000C04  6E82               	movwf	3970,c	;volatile
  2668                           
  2669                           ;RGBLedDisplay.c: 78: PORTBbits.RB3 = 0;
  2670  000C06  9681               	bcf	3969,3,c	;volatile
  2671  000C08  0012               	return		;funcret
  2672  000C0A                     __end_of_turnOffAllLed:
  2673                           	opt stack 0
  2674                           tblptru	equ	0xFF8
  2675                           prodh	equ	0xFF4
  2676                           prodl	equ	0xFF3
  2677                           intcon	equ	0xFF2
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           postinc1	equ	0xFE6
  2681                           postdec1	equ	0xFE5
  2682                           fsr1h	equ	0xFE2
  2683                           fsr1l	equ	0xFE1
  2684                           postinc2	equ	0xFDE
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _InitializeTimer0 *****************
  2691 ;; Defined at:
  2692 ;;		line 113 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;		None               void
  2699 ;; Registers used:
  2700 ;;		wreg, status,2
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2706 ;;      Params:         0       0       0       0
  2707 ;;      Locals:         0       0       0       0
  2708 ;;      Temps:          0       0       0       0
  2709 ;;      Totals:         0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text11
  2721  000BD4                     __ptext11:
  2722                           	opt stack 0
  2723  000BD4                     _InitializeTimer0:
  2724                           	opt stack 29
  2725                           
  2726                           ;system.c: 115: T0CONbits.T08BIT = 0 ;
  2727                           
  2728                           ;incstack = 0
  2729  000BD4  9CD5               	bcf	4053,6,c	;volatile
  2730                           
  2731                           ;system.c: 116: T0CONbits.T0CS = 0 ;
  2732  000BD6  9AD5               	bcf	4053,5,c	;volatile
  2733                           
  2734                           ;system.c: 117: T0CONbits.PSA = 1 ;
  2735  000BD8  86D5               	bsf	4053,3,c	;volatile
  2736                           
  2737                           ;system.c: 119: TMR0H = (65536-40000)/256;
  2738  000BDA  0E63               	movlw	99
  2739  000BDC  6ED7               	movwf	4055,c	;volatile
  2740                           
  2741                           ;system.c: 120: TMR0L = (65536-40000)%256 ;
  2742  000BDE  0EC0               	movlw	192
  2743  000BE0  6ED6               	movwf	4054,c	;volatile
  2744                           
  2745                           ;system.c: 122: T0CONbits.TMR0ON = 1 ;
  2746  000BE2  8ED5               	bsf	4053,7,c	;volatile
  2747                           
  2748                           ;system.c: 125: INTCONbits.TMR0IF = 0 ;
  2749  000BE4  94F2               	bcf	intcon,2,c	;volatile
  2750                           
  2751                           ;system.c: 126: INTCONbits.TMR0IE = 1;
  2752  000BE6  8AF2               	bsf	intcon,5,c	;volatile
  2753                           
  2754                           ;system.c: 129: INTCONbits.PEIE = 1 ;
  2755  000BE8  8CF2               	bsf	intcon,6,c	;volatile
  2756  000BEA  0012               	return		;funcret
  2757  000BEC                     __end_of_InitializeTimer0:
  2758                           	opt stack 0
  2759                           tblptru	equ	0xFF8
  2760                           prodh	equ	0xFF4
  2761                           prodl	equ	0xFF3
  2762                           intcon	equ	0xFF2
  2763                           postinc0	equ	0xFEE
  2764                           wreg	equ	0xFE8
  2765                           postinc1	equ	0xFE6
  2766                           postdec1	equ	0xFE5
  2767                           fsr1h	equ	0xFE2
  2768                           fsr1l	equ	0xFE1
  2769                           postinc2	equ	0xFDE
  2770                           postdec2	equ	0xFDD
  2771                           fsr2h	equ	0xFDA
  2772                           fsr2l	equ	0xFD9
  2773                           status	equ	0xFD8
  2774                           
  2775 ;; *************** function _InitializePinmux *****************
  2776 ;; Defined at:
  2777 ;;		line 67 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;		None               void
  2784 ;; Registers used:
  2785 ;;		None
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2791 ;;      Params:         0       0       0       0
  2792 ;;      Locals:         0       0       0       0
  2793 ;;      Temps:          0       0       0       0
  2794 ;;      Totals:         0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    1
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text12
  2806  000B4C                     __ptext12:
  2807                           	opt stack 0
  2808  000B4C                     _InitializePinmux:
  2809                           	opt stack 29
  2810                           
  2811                           ;system.c: 70: TRISCbits.TRISC0 = 0;
  2812                           
  2813                           ;incstack = 0
  2814  000B4C  9094               	bcf	3988,0,c	;volatile
  2815                           
  2816                           ;system.c: 71: TRISCbits.TRISC1 = 0;
  2817  000B4E  9294               	bcf	3988,1,c	;volatile
  2818                           
  2819                           ;system.c: 72: TRISCbits.TRISC2 = 0;
  2820  000B50  9494               	bcf	3988,2,c	;volatile
  2821                           
  2822                           ;system.c: 73: TRISCbits.TRISC3 = 0;
  2823  000B52  9694               	bcf	3988,3,c	;volatile
  2824                           
  2825                           ;system.c: 74: TRISCbits.TRISC4 = 0;
  2826  000B54  9894               	bcf	3988,4,c	;volatile
  2827                           
  2828                           ;system.c: 75: TRISCbits.TRISC5 = 0;
  2829  000B56  9A94               	bcf	3988,5,c	;volatile
  2830                           
  2831                           ;system.c: 76: TRISCbits.TRISC6 = 0;
  2832  000B58  9C94               	bcf	3988,6,c	;volatile
  2833                           
  2834                           ;system.c: 77: TRISCbits.TRISC7 = 0;
  2835  000B5A  9E94               	bcf	3988,7,c	;volatile
  2836                           
  2837                           ;system.c: 79: TRISBbits.TRISB3 = 0;
  2838  000B5C  9693               	bcf	3987,3,c	;volatile
  2839                           
  2840                           ;system.c: 82: TRISAbits.TRISA0 = 1 ;
  2841  000B5E  8092               	bsf	3986,0,c	;volatile
  2842                           
  2843                           ;system.c: 85: TRISAbits.TRISA1 = 1;
  2844  000B60  8292               	bsf	3986,1,c	;volatile
  2845                           
  2846                           ;system.c: 87: TRISAbits.TRISA2 = 1 ;
  2847  000B62  8492               	bsf	3986,2,c	;volatile
  2848                           
  2849                           ;system.c: 88: TRISAbits.TRISA3 = 1 ;
  2850  000B64  8692               	bsf	3986,3,c	;volatile
  2851                           
  2852                           ;system.c: 91: TRISAbits.TRISA4 = 1;
  2853  000B66  8892               	bsf	3986,4,c	;volatile
  2854                           
  2855                           ;system.c: 94: TRISAbits.TRISA5 = 1;
  2856  000B68  8A92               	bsf	3986,5,c	;volatile
  2857                           
  2858                           ;system.c: 97: TRISBbits.TRISB0 = 1;
  2859  000B6A  8093               	bsf	3987,0,c	;volatile
  2860                           
  2861                           ;system.c: 100: TRISBbits.TRISB1 = 0;
  2862  000B6C  9293               	bcf	3987,1,c	;volatile
  2863                           
  2864                           ;system.c: 103: TRISBbits.TRISB2 = 0;
  2865  000B6E  9493               	bcf	3987,2,c	;volatile
  2866                           
  2867                           ;system.c: 106: TRISBbits.TRISB4 = 1;
  2868  000B70  8893               	bsf	3987,4,c	;volatile
  2869  000B72  0012               	return		;funcret
  2870  000B74                     __end_of_InitializePinmux:
  2871                           	opt stack 0
  2872                           tblptru	equ	0xFF8
  2873                           prodh	equ	0xFF4
  2874                           prodl	equ	0xFF3
  2875                           intcon	equ	0xFF2
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           postinc1	equ	0xFE6
  2879                           postdec1	equ	0xFE5
  2880                           fsr1h	equ	0xFE2
  2881                           fsr1l	equ	0xFE1
  2882                           postinc2	equ	0xFDE
  2883                           postdec2	equ	0xFDD
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function _InitializeOscillator *****************
  2889 ;; Defined at:
  2890 ;;		line 28 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;		None               void
  2897 ;; Registers used:
  2898 ;;		None
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2904 ;;      Params:         0       0       0       0
  2905 ;;      Locals:         0       0       0       0
  2906 ;;      Temps:          0       0       0       0
  2907 ;;      Totals:         0       0       0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    1
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_main
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text13
  2919  000C1A                     __ptext13:
  2920                           	opt stack 0
  2921  000C1A                     _InitializeOscillator:
  2922                           	opt stack 29
  2923                           
  2924                           ;incstack = 0
  2925  000C1A  0012               	return		;funcret
  2926  000C1C                     __end_of_InitializeOscillator:
  2927                           	opt stack 0
  2928                           tblptru	equ	0xFF8
  2929                           prodh	equ	0xFF4
  2930                           prodl	equ	0xFF3
  2931                           intcon	equ	0xFF2
  2932                           postinc0	equ	0xFEE
  2933                           wreg	equ	0xFE8
  2934                           postinc1	equ	0xFE6
  2935                           postdec1	equ	0xFE5
  2936                           fsr1h	equ	0xFE2
  2937                           fsr1l	equ	0xFE1
  2938                           postinc2	equ	0xFDE
  2939                           postdec2	equ	0xFDD
  2940                           fsr2h	equ	0xFDA
  2941                           fsr2l	equ	0xFD9
  2942                           status	equ	0xFD8
  2943                           
  2944 ;; *************** function _InitializeInterrupts *****************
  2945 ;; Defined at:
  2946 ;;		line 52 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;		None               void
  2953 ;; Registers used:
  2954 ;;		None
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2960 ;;      Params:         0       0       0       0
  2961 ;;      Locals:         0       0       0       0
  2962 ;;      Temps:          0       0       0       0
  2963 ;;      Totals:         0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text14
  2975  000C0A                     __ptext14:
  2976                           	opt stack 0
  2977  000C0A                     _InitializeInterrupts:
  2978                           	opt stack 29
  2979                           
  2980                           ;system.c: 55: INTCONbits.INT0IE = 1;
  2981                           
  2982                           ;incstack = 0
  2983  000C0A  88F2               	bsf	intcon,4,c	;volatile
  2984                           
  2985                           ;system.c: 58: INTCONbits.TMR0IE = 1;
  2986  000C0C  8AF2               	bsf	intcon,5,c	;volatile
  2987                           
  2988                           ;system.c: 61: INTCONbits.GIE = 1;
  2989  000C0E  8EF2               	bsf	intcon,7,c	;volatile
  2990  000C10  0012               	return		;funcret
  2991  000C12                     __end_of_InitializeInterrupts:
  2992                           	opt stack 0
  2993                           tblptru	equ	0xFF8
  2994                           prodh	equ	0xFF4
  2995                           prodl	equ	0xFF3
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           postinc1	equ	0xFE6
  3000                           postdec1	equ	0xFE5
  3001                           fsr1h	equ	0xFE2
  3002                           fsr1l	equ	0xFE1
  3003                           postinc2	equ	0xFDE
  3004                           postdec2	equ	0xFDD
  3005                           fsr2h	equ	0xFDA
  3006                           fsr2l	equ	0xFD9
  3007                           status	equ	0xFD8
  3008                           
  3009 ;; *************** function _InitializeINT0 *****************
  3010 ;; Defined at:
  3011 ;;		line 169 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;		None               void
  3018 ;; Registers used:
  3019 ;;		None
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3025 ;;      Params:         0       0       0       0
  3026 ;;      Locals:         0       0       0       0
  3027 ;;      Temps:          0       0       0       0
  3028 ;;      Totals:         0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    1
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text15
  3040  000C12                     __ptext15:
  3041                           	opt stack 0
  3042  000C12                     _InitializeINT0:
  3043                           	opt stack 29
  3044                           
  3045                           ;system.c: 171: INTCON2bits.INTEDG0 = 0 ;
  3046                           
  3047                           ;incstack = 0
  3048  000C12  9CF1               	bcf	intcon2,6,c	;volatile
  3049                           
  3050                           ;system.c: 172: INTCONbits.INT0IF = 0 ;
  3051  000C14  92F2               	bcf	intcon,1,c	;volatile
  3052                           
  3053                           ;system.c: 174: INTCONbits.INT0IE = 1 ;
  3054  000C16  88F2               	bsf	intcon,4,c	;volatile
  3055  000C18  0012               	return		;funcret
  3056  000C1A                     __end_of_InitializeINT0:
  3057                           	opt stack 0
  3058                           tblptru	equ	0xFF8
  3059                           prodh	equ	0xFF4
  3060                           prodl	equ	0xFF3
  3061                           intcon	equ	0xFF2
  3062                           intcon2	equ	0xFF1
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           postinc1	equ	0xFE6
  3066                           postdec1	equ	0xFE5
  3067                           fsr1h	equ	0xFE2
  3068                           fsr1l	equ	0xFE1
  3069                           postinc2	equ	0xFDE
  3070                           postdec2	equ	0xFDD
  3071                           fsr2h	equ	0xFDA
  3072                           fsr2l	equ	0xFD9
  3073                           status	equ	0xFD8
  3074                           
  3075 ;; *************** function _InitializeAD *****************
  3076 ;; Defined at:
  3077 ;;		line 210 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;		None               void
  3084 ;; Registers used:
  3085 ;;		None
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3091 ;;      Params:         0       0       0       0
  3092 ;;      Locals:         0       0       0       0
  3093 ;;      Temps:          0       0       0       0
  3094 ;;      Totals:         0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_main
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text16
  3106  000B9A                     __ptext16:
  3107                           	opt stack 0
  3108  000B9A                     _InitializeAD:
  3109                           	opt stack 29
  3110                           
  3111                           ;system.c: 221: ADCON1bits.PCFG3 = 1;
  3112                           
  3113                           ;incstack = 0
  3114  000B9A  86C1               	bsf	4033,3,c	;volatile
  3115                           
  3116                           ;system.c: 222: ADCON1bits.PCFG2 = 0;
  3117  000B9C  94C1               	bcf	4033,2,c	;volatile
  3118                           
  3119                           ;system.c: 223: ADCON1bits.PCFG1 = 0;
  3120  000B9E  92C1               	bcf	4033,1,c	;volatile
  3121                           
  3122                           ;system.c: 224: ADCON1bits.PCFG0 = 1;
  3123  000BA0  80C1               	bsf	4033,0,c	;volatile
  3124                           
  3125                           ;system.c: 226: ADCON1bits.VCFG1 = 1 ;
  3126  000BA2  8AC1               	bsf	4033,5,c	;volatile
  3127                           
  3128                           ;system.c: 227: ADCON1bits.VCFG0 = 1 ;
  3129  000BA4  88C1               	bsf	4033,4,c	;volatile
  3130                           
  3131                           ;system.c: 238: ADCON2bits.ADCS2 = 0 ;
  3132  000BA6  94C0               	bcf	4032,2,c	;volatile
  3133                           
  3134                           ;system.c: 239: ADCON2bits.ADCS1 = 1 ;
  3135  000BA8  82C0               	bsf	4032,1,c	;volatile
  3136                           
  3137                           ;system.c: 240: ADCON2bits.ADCS0 = 0 ;
  3138  000BAA  90C0               	bcf	4032,0,c	;volatile
  3139                           
  3140                           ;system.c: 242: ADCON2bits.ADFM = 1 ;
  3141  000BAC  8EC0               	bsf	4032,7,c	;volatile
  3142                           
  3143                           ;system.c: 244: ADCON2bits.ACQT2 = 1;
  3144  000BAE  8AC0               	bsf	4032,5,c	;volatile
  3145                           
  3146                           ;system.c: 245: ADCON2bits.ACQT1 = 1;
  3147  000BB0  88C0               	bsf	4032,4,c	;volatile
  3148                           
  3149                           ;system.c: 246: ADCON2bits.ACQT0 = 0;
  3150  000BB2  96C0               	bcf	4032,3,c	;volatile
  3151                           
  3152                           ;system.c: 257: ADCON0bits.ADON = 1 ;
  3153  000BB4  80C2               	bsf	4034,0,c	;volatile
  3154  000BB6  0012               	return		;funcret
  3155  000BB8                     __end_of_InitializeAD:
  3156                           	opt stack 0
  3157                           tblptru	equ	0xFF8
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           intcon	equ	0xFF2
  3161                           intcon2	equ	0xFF1
  3162                           postinc0	equ	0xFEE
  3163                           wreg	equ	0xFE8
  3164                           postinc1	equ	0xFE6
  3165                           postdec1	equ	0xFE5
  3166                           fsr1h	equ	0xFE2
  3167                           fsr1l	equ	0xFE1
  3168                           postinc2	equ	0xFDE
  3169                           postdec2	equ	0xFDD
  3170                           fsr2h	equ	0xFDA
  3171                           fsr2l	equ	0xFD9
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function _GetAdcChargBatValue *****************
  3175 ;; Defined at:
  3176 ;;		line 542 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  channelNumbe    1    wreg     unsigned char 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  3181 ;;  temp            2   36[COMRAM] unsigned short 
  3182 ;;  i               1   38[COMRAM] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  2   31[COMRAM] unsigned short 
  3185 ;; Registers used:
  3186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3192 ;;      Params:         2       0       0       0
  3193 ;;      Locals:         4       0       0       0
  3194 ;;      Temps:          2       0       0       0
  3195 ;;      Totals:         8       0       0       0
  3196 ;;Total ram usage:        8 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    3
  3199 ;; This function calls:
  3200 ;;		_AD_Converter
  3201 ;;		___lwdiv
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text17
  3208  00072A                     __ptext17:
  3209                           	opt stack 0
  3210  00072A                     _GetAdcChargBatValue:
  3211                           	opt stack 27
  3212                           
  3213                           ;incstack = 0
  3214                           ;GetAdcChargBatValue@channelNumber stored from wreg
  3215  00072A  6E24               	movwf	GetAdcChargBatValue@channelNumber,c
  3216                           
  3217                           ;system.c: 544: uint8 i;
  3218                           ;system.c: 545: uint16 temp = 0 ;
  3219  00072C  0E00               	movlw	0
  3220  00072E  6E26               	movwf	GetAdcChargBatValue@temp+1,c
  3221  000730  0E00               	movlw	0
  3222  000732  6E25               	movwf	GetAdcChargBatValue@temp,c
  3223                           
  3224                           ;system.c: 546: for ( i=0; i< ( 10-1) ;i++)
  3225  000734  0E00               	movlw	0
  3226  000736  6E27               	movwf	GetAdcChargBatValue@i,c
  3227  000738                     l2566:
  3228  000738  0E08               	movlw	8
  3229  00073A  6427               	cpfsgt	GetAdcChargBatValue@i,c
  3230  00073C  D001               	goto	l2570
  3231  00073E  D01E               	goto	l2576
  3232  000740                     l2570:
  3233                           
  3234                           ;system.c: 547: {
  3235                           ;system.c: 548: adcChargeStatValue[i] = adcChargeStatValue[i+1] ;
  3236  000740  5027               	movf	GetAdcChargBatValue@i,w,c
  3237  000742  6E22               	movwf	??_GetAdcChargBatValue& (0+255),c
  3238  000744  6A23               	clrf	(??_GetAdcChargBatValue+1)& (0+255),c
  3239  000746  90D8               	bcf	status,0,c
  3240  000748  3622               	rlcf	??_GetAdcChargBatValue,f,c
  3241  00074A  3623               	rlcf	??_GetAdcChargBatValue+1,f,c
  3242  00074C  0E02               	movlw	2
  3243  00074E  2622               	addwf	??_GetAdcChargBatValue,f,c
  3244  000750  0E00               	movlw	0
  3245  000752  2223               	addwfc	??_GetAdcChargBatValue+1,f,c
  3246  000754  0E94               	movlw	low _adcChargeStatValue
  3247  000756  2422               	addwf	??_GetAdcChargBatValue,w,c
  3248  000758  6ED9               	movwf	fsr2l,c
  3249  00075A  0E00               	movlw	high _adcChargeStatValue
  3250  00075C  2023               	addwfc	??_GetAdcChargBatValue+1,w,c
  3251  00075E  6EDA               	movwf	fsr2h,c
  3252  000760  5027               	movf	GetAdcChargBatValue@i,w,c
  3253  000762  0D02               	mullw	2
  3254  000764  0E94               	movlw	low _adcChargeStatValue
  3255  000766  24F3               	addwf	prodl,w,c
  3256  000768  6EE1               	movwf	fsr1l,c
  3257  00076A  0E00               	movlw	high _adcChargeStatValue
  3258  00076C  20F4               	addwfc	prodh,w,c
  3259  00076E  6EE2               	movwf	fsr1h,c
  3260  000770  CFDE FFE6          	movff	postinc2,postinc1
  3261  000774  CFDD FFE5          	movff	postdec2,postdec1
  3262  000778  2A27               	incf	GetAdcChargBatValue@i,f,c
  3263  00077A  D7DE               	goto	l2566
  3264  00077C                     l2576:
  3265                           
  3266                           ;system.c: 549: }
  3267                           ;system.c: 551: adcChargeStatValue[10-1] = AD_Converter( channelNumber ) ;
  3268  00077C  5024               	movf	GetAdcChargBatValue@channelNumber,w,c
  3269  00077E  EC54  F005         	call	_AD_Converter
  3270  000782  C019  F0A6         	movff	?_AD_Converter,_adcChargeStatValue+18
  3271  000786  C01A  F0A7         	movff	?_AD_Converter+1,_adcChargeStatValue+19
  3272                           
  3273                           ;system.c: 553: for ( i=0 ;i<10 ;i++)
  3274  00078A  0E00               	movlw	0
  3275  00078C  6E27               	movwf	GetAdcChargBatValue@i,c
  3276  00078E                     l2580:
  3277  00078E  0E09               	movlw	9
  3278  000790  6427               	cpfsgt	GetAdcChargBatValue@i,c
  3279  000792  D001               	goto	l2584
  3280  000794  D014               	goto	l2590
  3281  000796                     l2584:
  3282                           
  3283                           ;system.c: 554: {
  3284                           ;system.c: 555: temp = temp + adcChargeStatValue[i] ;
  3285  000796  5027               	movf	GetAdcChargBatValue@i,w,c
  3286  000798  0D02               	mullw	2
  3287  00079A  0E94               	movlw	low _adcChargeStatValue
  3288  00079C  24F3               	addwf	prodl,w,c
  3289  00079E  6ED9               	movwf	fsr2l,c
  3290  0007A0  0E00               	movlw	high _adcChargeStatValue
  3291  0007A2  20F4               	addwfc	prodh,w,c
  3292  0007A4  6EDA               	movwf	fsr2h,c
  3293  0007A6  CFDE F022          	movff	postinc2,??_GetAdcChargBatValue
  3294  0007AA  CFDD F023          	movff	postdec2,??_GetAdcChargBatValue+1
  3295  0007AE  5025               	movf	GetAdcChargBatValue@temp,w,c
  3296  0007B0  2422               	addwf	??_GetAdcChargBatValue,w,c
  3297  0007B2  6E25               	movwf	GetAdcChargBatValue@temp,c
  3298  0007B4  5026               	movf	GetAdcChargBatValue@temp+1,w,c
  3299  0007B6  2023               	addwfc	??_GetAdcChargBatValue+1,w,c
  3300  0007B8  6E26               	movwf	GetAdcChargBatValue@temp+1,c
  3301  0007BA  2A27               	incf	GetAdcChargBatValue@i,f,c
  3302  0007BC  D7E8               	goto	l2580
  3303  0007BE                     l2590:
  3304                           
  3305                           ;system.c: 556: }
  3306                           ;system.c: 558: return ( temp/10 );
  3307  0007BE  C025  F017         	movff	GetAdcChargBatValue@temp,___lwdiv@dividend
  3308  0007C2  C026  F018         	movff	GetAdcChargBatValue@temp+1,___lwdiv@dividend+1
  3309  0007C6  0E00               	movlw	0
  3310  0007C8  6E1A               	movwf	___lwdiv@divisor+1,c
  3311  0007CA  0E0A               	movlw	10
  3312  0007CC  6E19               	movwf	___lwdiv@divisor,c
  3313  0007CE  ECE5  F004         	call	___lwdiv	;wreg free
  3314  0007D2  C017  F020         	movff	?___lwdiv,?_GetAdcChargBatValue
  3315  0007D6  C018  F021         	movff	?___lwdiv+1,?_GetAdcChargBatValue+1
  3316  0007DA  0012               	return	
  3317  0007DC                     __end_of_GetAdcChargBatValue:
  3318                           	opt stack 0
  3319                           tblptru	equ	0xFF8
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           intcon2	equ	0xFF1
  3324                           postinc0	equ	0xFEE
  3325                           wreg	equ	0xFE8
  3326                           postinc1	equ	0xFE6
  3327                           postdec1	equ	0xFE5
  3328                           fsr1h	equ	0xFE2
  3329                           fsr1l	equ	0xFE1
  3330                           postinc2	equ	0xFDE
  3331                           postdec2	equ	0xFDD
  3332                           fsr2h	equ	0xFDA
  3333                           fsr2l	equ	0xFD9
  3334                           status	equ	0xFD8
  3335                           
  3336 ;; *************** function _GetAdcBatValue *****************
  3337 ;; Defined at:
  3338 ;;		line 477 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  channelNumbe    1    wreg     unsigned char 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  3343 ;;  temp            2   36[COMRAM] unsigned short 
  3344 ;;  i               1   38[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2   31[COMRAM] unsigned short 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3354 ;;      Params:         2       0       0       0
  3355 ;;      Locals:         4       0       0       0
  3356 ;;      Temps:          2       0       0       0
  3357 ;;      Totals:         8       0       0       0
  3358 ;;Total ram usage:        8 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    3
  3361 ;; This function calls:
  3362 ;;		_AD_Converter
  3363 ;;		___lwdiv
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text18
  3370  0007DC                     __ptext18:
  3371                           	opt stack 0
  3372  0007DC                     _GetAdcBatValue:
  3373                           	opt stack 27
  3374                           
  3375                           ;incstack = 0
  3376                           ;GetAdcBatValue@channelNumber stored from wreg
  3377  0007DC  6E24               	movwf	GetAdcBatValue@channelNumber,c
  3378                           
  3379                           ;system.c: 479: uint8 i;
  3380                           ;system.c: 480: uint16 temp = 0 ;
  3381  0007DE  0E00               	movlw	0
  3382  0007E0  6E26               	movwf	GetAdcBatValue@temp+1,c
  3383  0007E2  0E00               	movlw	0
  3384  0007E4  6E25               	movwf	GetAdcBatValue@temp,c
  3385                           
  3386                           ;system.c: 481: for ( i=0; i< ( 10-1) ;i++)
  3387  0007E6  0E00               	movlw	0
  3388  0007E8  6E27               	movwf	GetAdcBatValue@i,c
  3389  0007EA                     l2396:
  3390  0007EA  0E08               	movlw	8
  3391  0007EC  6427               	cpfsgt	GetAdcBatValue@i,c
  3392  0007EE  D001               	goto	l2400
  3393  0007F0  D01E               	goto	l2406
  3394  0007F2                     l2400:
  3395                           
  3396                           ;system.c: 482: {
  3397                           ;system.c: 483: adcBatValue[i] = adcBatValue[i+1] ;
  3398  0007F2  5027               	movf	GetAdcBatValue@i,w,c
  3399  0007F4  6E22               	movwf	??_GetAdcBatValue& (0+255),c
  3400  0007F6  6A23               	clrf	(??_GetAdcBatValue+1)& (0+255),c
  3401  0007F8  90D8               	bcf	status,0,c
  3402  0007FA  3622               	rlcf	??_GetAdcBatValue,f,c
  3403  0007FC  3623               	rlcf	??_GetAdcBatValue+1,f,c
  3404  0007FE  0E02               	movlw	2
  3405  000800  2622               	addwf	??_GetAdcBatValue,f,c
  3406  000802  0E00               	movlw	0
  3407  000804  2223               	addwfc	??_GetAdcBatValue+1,f,c
  3408  000806  0E39               	movlw	low _adcBatValue
  3409  000808  2422               	addwf	??_GetAdcBatValue,w,c
  3410  00080A  6ED9               	movwf	fsr2l,c
  3411  00080C  0E00               	movlw	high _adcBatValue
  3412  00080E  2023               	addwfc	??_GetAdcBatValue+1,w,c
  3413  000810  6EDA               	movwf	fsr2h,c
  3414  000812  5027               	movf	GetAdcBatValue@i,w,c
  3415  000814  0D02               	mullw	2
  3416  000816  0E39               	movlw	low _adcBatValue
  3417  000818  24F3               	addwf	prodl,w,c
  3418  00081A  6EE1               	movwf	fsr1l,c
  3419  00081C  0E00               	movlw	high _adcBatValue
  3420  00081E  20F4               	addwfc	prodh,w,c
  3421  000820  6EE2               	movwf	fsr1h,c
  3422  000822  CFDE FFE6          	movff	postinc2,postinc1
  3423  000826  CFDD FFE5          	movff	postdec2,postdec1
  3424  00082A  2A27               	incf	GetAdcBatValue@i,f,c
  3425  00082C  D7DE               	goto	l2396
  3426  00082E                     l2406:
  3427                           
  3428                           ;system.c: 484: }
  3429                           ;system.c: 486: adcBatValue[10-1] = AD_Converter( channelNumber ) ;
  3430  00082E  5024               	movf	GetAdcBatValue@channelNumber,w,c
  3431  000830  EC54  F005         	call	_AD_Converter
  3432  000834  C019  F04B         	movff	?_AD_Converter,_adcBatValue+18
  3433  000838  C01A  F04C         	movff	?_AD_Converter+1,_adcBatValue+19
  3434                           
  3435                           ;system.c: 488: for ( i=0 ;i<10 ;i++)
  3436  00083C  0E00               	movlw	0
  3437  00083E  6E27               	movwf	GetAdcBatValue@i,c
  3438  000840                     l2410:
  3439  000840  0E09               	movlw	9
  3440  000842  6427               	cpfsgt	GetAdcBatValue@i,c
  3441  000844  D001               	goto	l2414
  3442  000846  D014               	goto	l2420
  3443  000848                     l2414:
  3444                           
  3445                           ;system.c: 489: {
  3446                           ;system.c: 490: temp = temp + adcBatValue[i] ;
  3447  000848  5027               	movf	GetAdcBatValue@i,w,c
  3448  00084A  0D02               	mullw	2
  3449  00084C  0E39               	movlw	low _adcBatValue
  3450  00084E  24F3               	addwf	prodl,w,c
  3451  000850  6ED9               	movwf	fsr2l,c
  3452  000852  0E00               	movlw	high _adcBatValue
  3453  000854  20F4               	addwfc	prodh,w,c
  3454  000856  6EDA               	movwf	fsr2h,c
  3455  000858  CFDE F022          	movff	postinc2,??_GetAdcBatValue
  3456  00085C  CFDD F023          	movff	postdec2,??_GetAdcBatValue+1
  3457  000860  5025               	movf	GetAdcBatValue@temp,w,c
  3458  000862  2422               	addwf	??_GetAdcBatValue,w,c
  3459  000864  6E25               	movwf	GetAdcBatValue@temp,c
  3460  000866  5026               	movf	GetAdcBatValue@temp+1,w,c
  3461  000868  2023               	addwfc	??_GetAdcBatValue+1,w,c
  3462  00086A  6E26               	movwf	GetAdcBatValue@temp+1,c
  3463  00086C  2A27               	incf	GetAdcBatValue@i,f,c
  3464  00086E  D7E8               	goto	l2410
  3465  000870                     l2420:
  3466                           
  3467                           ;system.c: 491: }
  3468                           ;system.c: 493: return ( temp/10 );
  3469  000870  C025  F017         	movff	GetAdcBatValue@temp,___lwdiv@dividend
  3470  000874  C026  F018         	movff	GetAdcBatValue@temp+1,___lwdiv@dividend+1
  3471  000878  0E00               	movlw	0
  3472  00087A  6E1A               	movwf	___lwdiv@divisor+1,c
  3473  00087C  0E0A               	movlw	10
  3474  00087E  6E19               	movwf	___lwdiv@divisor,c
  3475  000880  ECE5  F004         	call	___lwdiv	;wreg free
  3476  000884  C017  F020         	movff	?___lwdiv,?_GetAdcBatValue
  3477  000888  C018  F021         	movff	?___lwdiv+1,?_GetAdcBatValue+1
  3478  00088C  0012               	return	
  3479  00088E                     __end_of_GetAdcBatValue:
  3480                           	opt stack 0
  3481                           tblptru	equ	0xFF8
  3482                           prodh	equ	0xFF4
  3483                           prodl	equ	0xFF3
  3484                           intcon	equ	0xFF2
  3485                           intcon2	equ	0xFF1
  3486                           postinc0	equ	0xFEE
  3487                           wreg	equ	0xFE8
  3488                           postinc1	equ	0xFE6
  3489                           postdec1	equ	0xFE5
  3490                           fsr1h	equ	0xFE2
  3491                           fsr1l	equ	0xFE1
  3492                           postinc2	equ	0xFDE
  3493                           postdec2	equ	0xFDD
  3494                           fsr2h	equ	0xFDA
  3495                           fsr2l	equ	0xFD9
  3496                           status	equ	0xFD8
  3497                           
  3498 ;; *************** function ___lwdiv *****************
  3499 ;; Defined at:
  3500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  dividend        2   22[COMRAM] unsigned int 
  3503 ;;  divisor         2   24[COMRAM] unsigned int 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  quotient        2   27[COMRAM] unsigned int 
  3506 ;;  counter         1   26[COMRAM] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  2   22[COMRAM] unsigned int 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3516 ;;      Params:         4       0       0       0
  3517 ;;      Locals:         3       0       0       0
  3518 ;;      Temps:          0       0       0       0
  3519 ;;      Totals:         7       0       0       0
  3520 ;;Total ram usage:        7 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    1
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_GetAdcBatValue
  3527 ;;		_GetAdcAD597Value
  3528 ;;		_GetAdcChargBatValue
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text19
  3533  0009CA                     __ptext19:
  3534                           	opt stack 0
  3535  0009CA                     ___lwdiv:
  3536                           	opt stack 27
  3537                           
  3538                           ;incstack = 0
  3539  0009CA  0E00               	movlw	0
  3540  0009CC  6E1D               	movwf	___lwdiv@quotient+1,c
  3541  0009CE  0E00               	movlw	0
  3542  0009D0  6E1C               	movwf	___lwdiv@quotient,c
  3543  0009D2  5019               	movf	___lwdiv@divisor,w,c
  3544  0009D4  101A               	iorwf	___lwdiv@divisor+1,w,c
  3545  0009D6  B4D8               	btfsc	status,2,c
  3546  0009D8  D01C               	goto	l883
  3547  0009DA  0E01               	movlw	1
  3548  0009DC  6E1B               	movwf	___lwdiv@counter,c
  3549  0009DE  D004               	goto	l2246
  3550  0009E0                     l2244:
  3551  0009E0  90D8               	bcf	status,0,c
  3552  0009E2  3619               	rlcf	___lwdiv@divisor,f,c
  3553  0009E4  361A               	rlcf	___lwdiv@divisor+1,f,c
  3554  0009E6  2A1B               	incf	___lwdiv@counter,f,c
  3555  0009E8                     l2246:
  3556  0009E8  AE1A               	btfss	___lwdiv@divisor+1,7,c
  3557  0009EA  D7FA               	goto	l2244
  3558  0009EC                     l2248:
  3559  0009EC  90D8               	bcf	status,0,c
  3560  0009EE  361C               	rlcf	___lwdiv@quotient,f,c
  3561  0009F0  361D               	rlcf	___lwdiv@quotient+1,f,c
  3562  0009F2  5019               	movf	___lwdiv@divisor,w,c
  3563  0009F4  5C17               	subwf	___lwdiv@dividend,w,c
  3564  0009F6  501A               	movf	___lwdiv@divisor+1,w,c
  3565  0009F8  5818               	subwfb	___lwdiv@dividend+1,w,c
  3566  0009FA  A0D8               	btfss	status,0,c
  3567  0009FC  D005               	goto	l2256
  3568  0009FE  5019               	movf	___lwdiv@divisor,w,c
  3569  000A00  5E17               	subwf	___lwdiv@dividend,f,c
  3570  000A02  501A               	movf	___lwdiv@divisor+1,w,c
  3571  000A04  5A18               	subwfb	___lwdiv@dividend+1,f,c
  3572  000A06  801C               	bsf	___lwdiv@quotient,0,c
  3573  000A08                     l2256:
  3574  000A08  90D8               	bcf	status,0,c
  3575  000A0A  321A               	rrcf	___lwdiv@divisor+1,f,c
  3576  000A0C  3219               	rrcf	___lwdiv@divisor,f,c
  3577  000A0E  2E1B               	decfsz	___lwdiv@counter,f,c
  3578  000A10  D7ED               	goto	l2248
  3579  000A12                     l883:
  3580  000A12  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
  3581  000A16  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3582  000A1A  0012               	return		;funcret
  3583  000A1C                     __end_of___lwdiv:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           prodh	equ	0xFF4
  3587                           prodl	equ	0xFF3
  3588                           intcon	equ	0xFF2
  3589                           intcon2	equ	0xFF1
  3590                           postinc0	equ	0xFEE
  3591                           wreg	equ	0xFE8
  3592                           postinc1	equ	0xFE6
  3593                           postdec1	equ	0xFE5
  3594                           fsr1h	equ	0xFE2
  3595                           fsr1l	equ	0xFE1
  3596                           postinc2	equ	0xFDE
  3597                           postdec2	equ	0xFDD
  3598                           fsr2h	equ	0xFDA
  3599                           fsr2l	equ	0xFD9
  3600                           status	equ	0xFD8
  3601                           
  3602 ;; *************** function _AD_Converter *****************
  3603 ;; Defined at:
  3604 ;;		line 268 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  channelNumbe    1    wreg     char 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  channelNumbe    1   28[COMRAM] char 
  3609 ;;  AD_Result       2   29[COMRAM] unsigned short 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  2   24[COMRAM] unsigned short 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3619 ;;      Params:         2       0       0       0
  3620 ;;      Locals:         3       0       0       0
  3621 ;;      Temps:          2       0       0       0
  3622 ;;      Totals:         7       0       0       0
  3623 ;;Total ram usage:        7 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    2
  3626 ;; This function calls:
  3627 ;;		_delay_10us
  3628 ;; This function is called by:
  3629 ;;		_GetAdcBatValue
  3630 ;;		_GetAdcAD597Value
  3631 ;;		_GetAdcChargBatValue
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text20
  3636  000AA8                     __ptext20:
  3637                           	opt stack 0
  3638  000AA8                     _AD_Converter:
  3639                           	opt stack 26
  3640                           
  3641                           ;incstack = 0
  3642                           ;AD_Converter@channelNumber stored from wreg
  3643  000AA8  6E1D               	movwf	AD_Converter@channelNumber,c
  3644                           
  3645                           ;system.c: 270: uint16 AD_Result ;
  3646                           ;system.c: 280: ADCON0 = ((channelNumber & 0x07) << 2) | 0x01;
  3647  000AAA  C01D  F01B         	movff	AD_Converter@channelNumber,??_AD_Converter
  3648  000AAE  0E07               	movlw	7
  3649  000AB0  161B               	andwf	??_AD_Converter,f,c
  3650  000AB2  90D8               	bcf	status,0,c
  3651  000AB4  361B               	rlcf	??_AD_Converter,f,c
  3652  000AB6  90D8               	bcf	status,0,c
  3653  000AB8  341B               	rlcf	??_AD_Converter,w,c
  3654  000ABA  0901               	iorlw	1
  3655  000ABC  6EC2               	movwf	4034,c	;volatile
  3656                           
  3657                           ;system.c: 285: delay_10us() ;
  3658  000ABE  ECDC  F005         	call	_delay_10us	;wreg free
  3659                           
  3660                           ;system.c: 286: delay_10us() ;
  3661  000AC2  ECDC  F005         	call	_delay_10us	;wreg free
  3662                           
  3663                           ;system.c: 288: ADCON0bits.GO = 1;
  3664  000AC6  82C2               	bsf	4034,1,c	;volatile
  3665  000AC8                     l232:
  3666  000AC8  B2C2               	btfsc	4034,1,c	;volatile
  3667  000ACA  D7FE               	goto	l232
  3668                           
  3669                           ;system.c: 292: PIR1bits.ADIF = 0 ;
  3670  000ACC  9C9E               	bcf	3998,6,c	;volatile
  3671                           
  3672                           ;system.c: 294: AD_Result =( ADRESH << 8 ) | ADRESL ;
  3673  000ACE  50C3               	movf	4035,w,c	;volatile
  3674  000AD0  CFC4 F01B          	movff	4036,??_AD_Converter	;volatile
  3675  000AD4  6A1C               	clrf	(??_AD_Converter+1)& (0+255),c
  3676  000AD6  C01B  F01C         	movff	??_AD_Converter,??_AD_Converter+1
  3677  000ADA  6A1B               	clrf	??_AD_Converter,c
  3678  000ADC  101B               	iorwf	??_AD_Converter,w,c
  3679  000ADE  6E1E               	movwf	AD_Converter@AD_Result,c
  3680  000AE0  501C               	movf	??_AD_Converter+1,w,c
  3681  000AE2  6E1F               	movwf	AD_Converter@AD_Result+1,c
  3682                           
  3683                           ;system.c: 296: return (AD_Result);
  3684  000AE4  C01E  F019         	movff	AD_Converter@AD_Result,?_AD_Converter
  3685  000AE8  C01F  F01A         	movff	AD_Converter@AD_Result+1,?_AD_Converter+1
  3686  000AEC  0012               	return	
  3687  000AEE                     __end_of_AD_Converter:
  3688                           	opt stack 0
  3689                           tblptru	equ	0xFF8
  3690                           prodh	equ	0xFF4
  3691                           prodl	equ	0xFF3
  3692                           intcon	equ	0xFF2
  3693                           intcon2	equ	0xFF1
  3694                           postinc0	equ	0xFEE
  3695                           wreg	equ	0xFE8
  3696                           postinc1	equ	0xFE6
  3697                           postdec1	equ	0xFE5
  3698                           fsr1h	equ	0xFE2
  3699                           fsr1l	equ	0xFE1
  3700                           postinc2	equ	0xFDE
  3701                           postdec2	equ	0xFDD
  3702                           fsr2h	equ	0xFDA
  3703                           fsr2l	equ	0xFD9
  3704                           status	equ	0xFD8
  3705                           
  3706 ;; *************** function _delay_10us *****************
  3707 ;; Defined at:
  3708 ;;		line 54 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  i               2   22[COMRAM] unsigned int 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;		None               void
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3722 ;;      Params:         0       0       0       0
  3723 ;;      Locals:         2       0       0       0
  3724 ;;      Temps:          0       0       0       0
  3725 ;;      Totals:         2       0       0       0
  3726 ;;Total ram usage:        2 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_AD_Converter
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text21
  3737  000BB8                     __ptext21:
  3738                           	opt stack 0
  3739  000BB8                     _delay_10us:
  3740                           	opt stack 26
  3741                           
  3742                           ;user.c: 56: unsigned int i;
  3743                           ;user.c: 57: for (i=0; i<4; i++);
  3744                           
  3745                           ;incstack = 0
  3746  000BB8  0E00               	movlw	0
  3747  000BBA  6E18               	movwf	delay_10us@i+1,c
  3748  000BBC  0E00               	movlw	0
  3749  000BBE  6E17               	movwf	delay_10us@i,c
  3750  000BC0                     l2212:
  3751  000BC0  5018               	movf	delay_10us@i+1,w,c
  3752  000BC2  E107               	bnz	l135
  3753  000BC4  0E04               	movlw	4
  3754  000BC6  5C17               	subwf	delay_10us@i,w,c
  3755  000BC8  B0D8               	btfsc	status,0,c
  3756  000BCA  0012               	return	
  3757  000BCC  4A17               	infsnz	delay_10us@i,f,c
  3758  000BCE  2A18               	incf	delay_10us@i+1,f,c
  3759  000BD0  D7F7               	goto	l2212
  3760  000BD2                     l135:
  3761  000BD2  0012               	return		;funcret
  3762  000BD4                     __end_of_delay_10us:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           prodh	equ	0xFF4
  3766                           prodl	equ	0xFF3
  3767                           intcon	equ	0xFF2
  3768                           intcon2	equ	0xFF1
  3769                           postinc0	equ	0xFEE
  3770                           wreg	equ	0xFE8
  3771                           postinc1	equ	0xFE6
  3772                           postdec1	equ	0xFE5
  3773                           fsr1h	equ	0xFE2
  3774                           fsr1l	equ	0xFE1
  3775                           postinc2	equ	0xFDE
  3776                           postdec2	equ	0xFDD
  3777                           fsr2h	equ	0xFDA
  3778                           fsr2l	equ	0xFD9
  3779                           status	equ	0xFD8
  3780                           
  3781 ;; *************** function _ISR *****************
  3782 ;; Defined at:
  3783 ;;		line 22 in file "WAFR-01-C001 HD-debug.X/interrupts/interrupts.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;		None               void
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3797 ;;      Params:         0       0       0       0
  3798 ;;      Locals:         0       0       0       0
  3799 ;;      Temps:         22       0       0       0
  3800 ;;      Totals:        22       0       0       0
  3801 ;;Total ram usage:       22 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		Interrupt level 2
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	intcode
  3811  000008                     __pintcode:
  3812                           	opt stack 0
  3813  000008                     _ISR:
  3814                           	opt stack 26
  3815                           
  3816                           ;incstack = 0
  3817  000008  8265               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3818  00000A  CFFA F009          	movff	pclath,??_ISR+8
  3819  00000E  CFFB F00A          	movff	pclatu,??_ISR+9
  3820  000012  EDA3  F002         	call	int_func,f	;refresh shadow registers
  3821                           pclatu	equ	0xFFB
  3822                           pclath	equ	0xFFA
  3823                           tblptru	equ	0xFF8
  3824                           prodh	equ	0xFF4
  3825                           prodl	equ	0xFF3
  3826                           intcon	equ	0xFF2
  3827                           intcon2	equ	0xFF1
  3828                           postinc0	equ	0xFEE
  3829                           wreg	equ	0xFE8
  3830                           postinc1	equ	0xFE6
  3831                           postdec1	equ	0xFE5
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           postinc2	equ	0xFDE
  3835                           postdec2	equ	0xFDD
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8
  3839                           
  3840                           	psect	intcode_body
  3841  000546                     __pintcode_body:
  3842                           	opt stack 26
  3843  000546                     int_func:
  3844                           	opt stack 26
  3845  000546  0006               	pop		; remove dummy address from shadow register refresh
  3846  000548  CFE9 F00B          	movff	fsr0l,??_ISR+10
  3847  00054C  CFEA F00C          	movff	fsr0h,??_ISR+11
  3848  000550  CFE1 F00D          	movff	fsr1l,??_ISR+12
  3849  000554  CFE2 F00E          	movff	fsr1h,??_ISR+13
  3850  000558  CFD9 F00F          	movff	fsr2l,??_ISR+14
  3851  00055C  CFDA F010          	movff	fsr2h,??_ISR+15
  3852  000560  CFF3 F011          	movff	prodl,??_ISR+16
  3853  000564  CFF4 F012          	movff	prodh,??_ISR+17
  3854  000568  CFF6 F013          	movff	tblptrl,??_ISR+18
  3855  00056C  CFF7 F014          	movff	tblptrh,??_ISR+19
  3856  000570  CFF8 F015          	movff	tblptru,??_ISR+20
  3857  000574  CFF5 F016          	movff	tablat,??_ISR+21
  3858                           
  3859                           ;interrupts.c: 26: if ( INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  3860  000578  BAF2               	btfsc	intcon,5,c	;volatile
  3861  00057A  A4F2               	btfss	intcon,2,c	;volatile
  3862  00057C  D014               	goto	i2l1644
  3863                           
  3864                           ;interrupts.c: 27: {
  3865                           ;interrupts.c: 28: INTCONbits.TMR0IF = 0;
  3866  00057E  94F2               	bcf	intcon,2,c	;volatile
  3867                           
  3868                           ;interrupts.c: 29: timer0Count++ ;
  3869  000580  2A63               	incf	_timer0Count,f,c
  3870                           
  3871                           ;interrupts.c: 30: timeSystemRun++ ;
  3872  000582  0E01               	movlw	1
  3873  000584  2659               	addwf	_timeSystemRun,f,c
  3874  000586  0E00               	movlw	0
  3875  000588  225A               	addwfc	_timeSystemRun+1,f,c
  3876  00058A  225B               	addwfc	_timeSystemRun+2,f,c
  3877  00058C  225C               	addwfc	_timeSystemRun+3,f,c
  3878                           
  3879                           ;interrupts.c: 32: if (timer0Count == 50)
  3880  00058E  0E32               	movlw	50
  3881  000590  1863               	xorwf	_timer0Count,w,c
  3882  000592  A4D8               	btfss	status,2,c
  3883  000594  D004               	goto	i2l1640
  3884                           
  3885                           ;interrupts.c: 33: {
  3886                           ;interrupts.c: 34: timer0Count = 0 ;
  3887  000596  0E00               	movlw	0
  3888  000598  6E63               	movwf	_timer0Count,c
  3889                           
  3890                           ;interrupts.c: 35: timerHalfSecond ++ ;
  3891  00059A  4A5D               	infsnz	_timerHalfSecond,f,c
  3892  00059C  2A5E               	incf	_timerHalfSecond+1,f,c
  3893  00059E                     i2l1640:
  3894                           
  3895                           ;interrupts.c: 36: }
  3896                           ;interrupts.c: 38: TMR0H = (65536-40000)/256;
  3897  00059E  0E63               	movlw	99
  3898  0005A0  6ED7               	movwf	4055,c	;volatile
  3899                           
  3900                           ;interrupts.c: 39: TMR0L = (65536-40000)%256 ;
  3901  0005A2  0EC0               	movlw	192
  3902  0005A4  6ED6               	movwf	4054,c	;volatile
  3903  0005A6                     i2l1644:
  3904                           
  3905                           ;interrupts.c: 40: }
  3906                           ;interrupts.c: 44: if ( INTCONbits.INT0IF && INTCONbits.INT0IE )
  3907  0005A6  B2F2               	btfsc	intcon,1,c	;volatile
  3908  0005A8  A8F2               	btfss	intcon,4,c	;volatile
  3909  0005AA  D043               	goto	i2l333
  3910                           
  3911                           ;interrupts.c: 45: {
  3912                           ;interrupts.c: 46: INTCONbits.INT0IF = 0 ;
  3913  0005AC  92F2               	bcf	intcon,1,c	;volatile
  3914                           
  3915                           ;interrupts.c: 49: if ( (timeSystemRun - pushButtonJitterTime) < 2 ){
  3916  0005AE  C055  F001         	movff	_pushButtonJitterTime,??_ISR
  3917  0005B2  C056  F002         	movff	_pushButtonJitterTime+1,??_ISR+1
  3918  0005B6  C057  F003         	movff	_pushButtonJitterTime+2,??_ISR+2
  3919  0005BA  C058  F004         	movff	_pushButtonJitterTime+3,??_ISR+3
  3920  0005BE  1E01               	comf	??_ISR,f,c
  3921  0005C0  1E02               	comf	??_ISR+1,f,c
  3922  0005C2  1E03               	comf	??_ISR+2,f,c
  3923  0005C4  1E04               	comf	??_ISR+3,f,c
  3924  0005C6  2A01               	incf	??_ISR,f,c
  3925  0005C8  0E00               	movlw	0
  3926  0005CA  2202               	addwfc	??_ISR+1,f,c
  3927  0005CC  2203               	addwfc	??_ISR+2,f,c
  3928  0005CE  2204               	addwfc	??_ISR+3,f,c
  3929  0005D0  5059               	movf	_timeSystemRun,w,c
  3930  0005D2  2401               	addwf	??_ISR,w,c
  3931  0005D4  6E05               	movwf	(??_ISR+4)& (0+255),c
  3932  0005D6  505A               	movf	_timeSystemRun+1,w,c
  3933  0005D8  2002               	addwfc	??_ISR+1,w,c
  3934  0005DA  6E06               	movwf	(??_ISR+5)& (0+255),c
  3935  0005DC  505B               	movf	_timeSystemRun+2,w,c
  3936  0005DE  2003               	addwfc	??_ISR+2,w,c
  3937  0005E0  6E07               	movwf	(??_ISR+6)& (0+255),c
  3938  0005E2  505C               	movf	_timeSystemRun+3,w,c
  3939  0005E4  2004               	addwfc	??_ISR+3,w,c
  3940  0005E6  6E08               	movwf	(??_ISR+7)& (0+255),c
  3941  0005E8  5008               	movf	??_ISR+7,w,c
  3942  0005EA  1007               	iorwf	??_ISR+6,w,c
  3943  0005EC  1006               	iorwf	??_ISR+5,w,c
  3944  0005EE  E104               	bnz	i2l329
  3945  0005F0  0E02               	movlw	2
  3946  0005F2  5C05               	subwf	??_ISR+4,w,c
  3947  0005F4  A0D8               	btfss	status,0,c
  3948  0005F6  D01D               	goto	i2l333
  3949  0005F8                     i2l329:
  3950                           
  3951                           ;interrupts.c: 52: if ( !PORTBbits.RB0 )
  3952  0005F8  B081               	btfsc	3969,0,c	;volatile
  3953  0005FA  D006               	goto	i2l331
  3954                           
  3955                           ;interrupts.c: 53: {
  3956                           ;interrupts.c: 54: INTCON2bits.INTEDG0 = 1 ;
  3957  0005FC  8CF1               	bsf	intcon2,6,c	;volatile
  3958                           
  3959                           ;interrupts.c: 56: timerHalfSecond = 0 ;
  3960  0005FE  0E00               	movlw	0
  3961  000600  6E5E               	movwf	_timerHalfSecond+1,c
  3962  000602  0E00               	movlw	0
  3963  000604  6E5D               	movwf	_timerHalfSecond,c
  3964                           
  3965                           ;interrupts.c: 57: }else
  3966  000606  D00D               	goto	i2l1662
  3967  000608                     i2l331:
  3968                           
  3969                           ;interrupts.c: 58: {
  3970                           ;interrupts.c: 59: INTCON2bits.INTEDG0 = 0 ;
  3971  000608  9CF1               	bcf	intcon2,6,c	;volatile
  3972                           
  3973                           ;interrupts.c: 61: S2KeyPushTime = timerHalfSecond;
  3974  00060A  C05D  F05F         	movff	_timerHalfSecond,_S2KeyPushTime
  3975                           
  3976                           ;interrupts.c: 62: flagS2KeyPushed = 1 ;
  3977  00060E  0E01               	movlw	1
  3978  000610  6E61               	movwf	_flagS2KeyPushed,c
  3979                           
  3980                           ;interrupts.c: 64: buttonPushTimeStop = timeSystemRun ;
  3981  000612  C059  F051         	movff	_timeSystemRun,_buttonPushTimeStop
  3982  000616  C05A  F052         	movff	_timeSystemRun+1,_buttonPushTimeStop+1
  3983  00061A  C05B  F053         	movff	_timeSystemRun+2,_buttonPushTimeStop+2
  3984  00061E  C05C  F054         	movff	_timeSystemRun+3,_buttonPushTimeStop+3
  3985  000622                     i2l1662:
  3986                           
  3987                           ;interrupts.c: 66: }
  3988                           ;interrupts.c: 67: pushButtonJitterTime = timeSystemRun ;
  3989  000622  C059  F055         	movff	_timeSystemRun,_pushButtonJitterTime
  3990  000626  C05A  F056         	movff	_timeSystemRun+1,_pushButtonJitterTime+1
  3991  00062A  C05B  F057         	movff	_timeSystemRun+2,_pushButtonJitterTime+2
  3992  00062E  C05C  F058         	movff	_timeSystemRun+3,_pushButtonJitterTime+3
  3993  000632                     i2l333:
  3994  000632  C016  FFF5         	movff	??_ISR+21,tablat
  3995  000636  C015  FFF8         	movff	??_ISR+20,tblptru
  3996  00063A  C014  FFF7         	movff	??_ISR+19,tblptrh
  3997  00063E  C013  FFF6         	movff	??_ISR+18,tblptrl
  3998  000642  C012  FFF4         	movff	??_ISR+17,prodh
  3999  000646  C011  FFF3         	movff	??_ISR+16,prodl
  4000  00064A  C010  FFDA         	movff	??_ISR+15,fsr2h
  4001  00064E  C00F  FFD9         	movff	??_ISR+14,fsr2l
  4002  000652  C00E  FFE2         	movff	??_ISR+13,fsr1h
  4003  000656  C00D  FFE1         	movff	??_ISR+12,fsr1l
  4004  00065A  C00C  FFEA         	movff	??_ISR+11,fsr0h
  4005  00065E  C00B  FFE9         	movff	??_ISR+10,fsr0l
  4006  000662  C00A  FFFB         	movff	??_ISR+9,pclatu
  4007  000666  C009  FFFA         	movff	??_ISR+8,pclath
  4008  00066A  9265               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4009  00066C  0011               	retfie		f
  4010  00066E                     __end_of_ISR:
  4011                           	opt stack 0
  4012  0000                     pclatu	equ	0xFFB
  4013                           pclath	equ	0xFFA
  4014                           tblptru	equ	0xFF8
  4015                           tblptrh	equ	0xFF7
  4016                           tblptrl	equ	0xFF6
  4017                           tablat	equ	0xFF5
  4018                           prodh	equ	0xFF4
  4019                           prodl	equ	0xFF3
  4020                           intcon	equ	0xFF2
  4021                           intcon2	equ	0xFF1
  4022                           postinc0	equ	0xFEE
  4023                           fsr0h	equ	0xFEA
  4024                           fsr0l	equ	0xFE9
  4025                           wreg	equ	0xFE8
  4026                           postinc1	equ	0xFE6
  4027                           postdec1	equ	0xFE5
  4028                           fsr1h	equ	0xFE2
  4029                           fsr1l	equ	0xFE1
  4030                           postinc2	equ	0xFDE
  4031                           postdec2	equ	0xFDD
  4032                           fsr2h	equ	0xFDA
  4033                           fsr2l	equ	0xFD9
  4034                           status	equ	0xFD8
  4035                           pclatu	equ	0xFFB
  4036                           pclath	equ	0xFFA
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           intcon2	equ	0xFF1
  4045                           postinc0	equ	0xFEE
  4046                           fsr0h	equ	0xFEA
  4047                           fsr0l	equ	0xFE9
  4048                           wreg	equ	0xFE8
  4049                           postinc1	equ	0xFE6
  4050                           postdec1	equ	0xFE5
  4051                           fsr1h	equ	0xFE2
  4052                           fsr1l	equ	0xFE1
  4053                           postinc2	equ	0xFDE
  4054                           postdec2	equ	0xFDD
  4055                           fsr2h	equ	0xFDA
  4056                           fsr2l	equ	0xFD9
  4057                           status	equ	0xFD8
  4058                           
  4059                           	psect	rparam
  4060  0000                     pclatu	equ	0xFFB
  4061                           pclath	equ	0xFFA
  4062                           tblptru	equ	0xFF8
  4063                           tblptrh	equ	0xFF7
  4064                           tblptrl	equ	0xFF6
  4065                           tablat	equ	0xFF5
  4066                           prodh	equ	0xFF4
  4067                           prodl	equ	0xFF3
  4068                           intcon	equ	0xFF2
  4069                           intcon2	equ	0xFF1
  4070                           postinc0	equ	0xFEE
  4071                           fsr0h	equ	0xFEA
  4072                           fsr0l	equ	0xFE9
  4073                           wreg	equ	0xFE8
  4074                           postinc1	equ	0xFE6
  4075                           postdec1	equ	0xFE5
  4076                           fsr1h	equ	0xFE2
  4077                           fsr1l	equ	0xFE1
  4078                           postinc2	equ	0xFDE
  4079                           postdec2	equ	0xFDD
  4080                           fsr2h	equ	0xFDA
  4081                           fsr2l	equ	0xFD9
  4082                           status	equ	0xFD8
  4083                           
  4084                           	psect	temp
  4085  000065                     btemp:
  4086                           	opt stack 0
  4087  000065                     	ds	1
  4088  0000                     int$flags	set	btemp
  4089                           pclatu	equ	0xFFB
  4090                           pclath	equ	0xFFA
  4091                           tblptru	equ	0xFF8
  4092                           tblptrh	equ	0xFF7
  4093                           tblptrl	equ	0xFF6
  4094                           tablat	equ	0xFF5
  4095                           prodh	equ	0xFF4
  4096                           prodl	equ	0xFF3
  4097                           intcon	equ	0xFF2
  4098                           intcon2	equ	0xFF1
  4099                           postinc0	equ	0xFEE
  4100                           fsr0h	equ	0xFEA
  4101                           fsr0l	equ	0xFE9
  4102                           wreg	equ	0xFE8
  4103                           postinc1	equ	0xFE6
  4104                           postdec1	equ	0xFE5
  4105                           fsr1h	equ	0xFE2
  4106                           fsr1l	equ	0xFE1
  4107                           postinc2	equ	0xFDE
  4108                           postdec2	equ	0xFDD
  4109                           fsr2h	equ	0xFDA
  4110                           fsr2l	equ	0xFD9
  4111                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56     100
    BANK0           128     10      50
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ProcessHeat
    _ShutDownSystem->_delay_ms
    _ProcessHeat->_GetAdcAD597Value
    _GetAdcAD597Value->_AD_Converter
    _GetAdcChargBatValue->_AD_Converter
    _GetAdcBatValue->_AD_Converter
    _AD_Converter->_delay_10us

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    11      5    5464
                                             50 COMRAM     6     1      5
                                              0 BANK0     10    10      0
                     _GetAdcBatValue
                _GetAdcChargBatValue
                       _InitializeAD
                     _InitializeINT0
               _InitializeInterrupts
               _InitializeOscillator
                   _InitializePinmux
                   _InitializeTimer0
                    _LevelTmpSetShow
                      _ProcessButton
                        _ProcessHeat
                         _ReadEEprom
                     _ShutDownSystem
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _ShutDownSystem                                       1     1      0     676
                                             28 COMRAM     1     1      0
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2     676
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ProcessHeat                                         11    11      0    1525
                                             39 COMRAM    11    11      0
                   _GetAdcAD597Value
                 _HeatProcessLedShow
                         _ReadEEprom
                        _WriteEEprom
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (2) _WriteEEprom                                          2     1      1     116
                                             22 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ReadEEprom                                           1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HeatProcessLedShow                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetAdcAD597Value                                     8     6      2     995
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _ProcessButton                                        8     8      0      37
                                             22 COMRAM     8     8      0
                    _LevelTmpSetShow
 ---------------------------------------------------------------------------------
 (2) _LevelTmpSetShow                                      0     0      0       0
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _turnOffAllLed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializePinmux                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeOscillator                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeINT0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeAD                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetAdcChargBatValue                                  8     6      2    1026
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _GetAdcBatValue                                       8     6      2    1026
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     565
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _AD_Converter                                         7     5      2     133
                                             24 COMRAM     7     5      2
                         _delay_10us
 ---------------------------------------------------------------------------------
 (4) _delay_10us                                           2     2      0      68
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 22    22      0       0
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetAdcBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _GetAdcChargBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _InitializeAD
   _InitializeINT0
   _InitializeInterrupts
   _InitializeOscillator
   _InitializePinmux
   _InitializeTimer0
   _LevelTmpSetShow
     _turnOffAllLed
   _ProcessButton
     _LevelTmpSetShow
       _turnOffAllLed
   _ProcessHeat
     _GetAdcAD597Value
       _AD_Converter
         _delay_10us
       ___lwdiv
     _HeatProcessLedShow
     _ReadEEprom
     _WriteEEprom
     _turnOffAllLed
   _ReadEEprom
   _ShutDownSystem
     _delay_ms
     _turnOffAllLed
   _delay_ms
   _turnOffAllLed

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      32       5       39.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      64       1       79.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96       3        0.0%
DATA                 0      0      96      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Oct 14 15:10:19 2015

              _buttonPushTimeStop 0051                       __CFG_CP0$ON 000000  
                     __CFG_CP1$ON 000000              __size_of_WriteEEprom 0028  
             _buttonPushTimeStart 004D                                l71 01B8  
                              l81 01F4                                l74 0198  
                              l97 0320                       __CFG_CPB$ON 000000  
                     __CFG_CPD$ON 000000                       __CFG_BORV$3 000000  
                     __CFG_OSC$HS 000000                               l135 0BD2  
                             l232 0AC8                               l270 04F8  
                             l415 0A68                               l263 0482  
                             l255 040E                               l417 0A70  
                             l249 0542                               l418 0A7E  
                             l362 0B26                               l369 0BEE  
                             l474 06D4                               l477 0712  
                             l883 0A12                               _ISR 0008  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                              ?_ISR 0001  
                    __CFG_WDT$OFF 000000                              l2212 0BC0  
                            l2310 0936                              l2400 07F2  
                            l2320 095C                              l2410 0840  
                            l2330 0986                              l2314 0942  
                            l2244 09E0                              l2420 0870  
                            l2324 096A                              l2308 0B44  
                            l2500 03F0                              l2246 09E8  
                            l2414 0848                              l2406 082E  
                            l2350 08A4                              l2334 0996  
                            l2318 0952                              l2342 09B4  
                            l2262 0AF8                              l2256 0A08  
                            l2248 09EC                              l2360 08F2  
                            l2328 097C                              l2272 0B12  
                            l2264 0B00                              l2450 06FE  
                            l2442 06E2                              l2370 0916  
                            l2346 089C                              l2338 09AA  
                            l2282 0BFA                              l2506 0410  
                            l2274 0B16                              l2610 0054  
                            l2364 08FA                              l2356 08E0  
                            l2524 0484                              l2508 043E  
                            l2438 06DE                              l2526 04B2  
                            l2518 0464                              l2550 053C  
                            l2630 0126                              l2614 0090  
                            l2288 0A92                              l2456 070A  
                            l2544 04FA                              l2712 02C0  
                            l2570 0740                              l2538 04DA  
                            l2642 017C                              l2618 00B0  
                            l2396 07EA                              l2580 078E  
                            l2468 0726                              l2492 03CC  
                            l2548 0528                              l2484 0386  
                            l2556 0A20                              l2628 0104  
                            l2590 07BE                              l2566 0738  
                            l2726 02F4                              l2742 0342  
                            l2670 020E                              l2638 015C  
                            l2584 0796                              l2576 077C  
                            l2488 03B8                              l2680 0234  
                            l2664 01F0                              l2656 01CA  
                            l2690 0272                              l2674 0214  
                            l2658 01DC                              l2668 0208  
                            l2676 022A                              u2020 0A2C  
                            u2100 005E                              u2040 0A46  
                            u2120 0074                              u2038 0A2E  
                            u2118 0060                              u2058 0A48  
                            u2138 0076                              u2270 0246  
                            u2276 0248                              u1920 03D8  
                            u1930 040A                              u1950 044A  
                            u1960 047E                              u1980 04BE  
                            u1990 04F4                      __CFG_PWRT$ON 000000  
                    __CFG_WRT0$ON 000000                      __CFG_WRT1$ON 000000  
                   __CFG_EBTR0$ON 000000                     __CFG_EBTR1$ON 000000  
                    __CFG_WRTB$ON 000000                      __CFG_WRTC$ON 000000  
                    __CFG_WRTD$ON 000000                     __CFG_EBTRB$ON 000000  
                            _main 001A                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0065  
                            pclat 000FFA                      main@adcValue 00B0  
                            prodh 000FF4                              prodl 000FF3  
                            start 0016                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
   __size_of_InitializeInterrupts 0008                             ??_ISR 0001  
                           ?_main 0033                             _EEADR 000FA9  
                 __end_of___lwdiv 0A1C                             i2l331 0608  
                           i2l333 0632                             i2l329 05F8  
                    main@keyValue 00AD                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _PORTC 000F82  
                  __CFG_FCMEN$OFF 000000     GetAdcAD597Value@channelNumber 0024  
   __size_of_InitializeOscillator 0002              __end_of_AD_Converter 0AEE  
                           main@i 00AE       __end_of_GetAdcChargBatValue 07DC  
                  __CFG_BOREN$OFF 000000                             tablat 000FF5  
                   ?_InitializeAD 0001                             status 000FD8  
                      _ReadEEprom 0BEC                   __initialization 0B74  
         __size_of_InitializeINT0 0008                      __end_of_main 034A  
        ProcessHeat@countHeatTime 002D         __size_of_InitializePinmux 0028  
       __size_of_InitializeTimer0 0018                            ??_main 0038  
                   __activetblptr 000002               ProcessHeat@adcValue 0031  
        __size_of_LevelTmpSetShow 0046                            _ADCON0 000FC2  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                  ??_InitializeAD 0017                            i2l1640 059E  
                          i2l1644 05A6                            i2l1662 0622  
                 WriteEEprom@addr 0018                   WriteEEprom@data 0017  
             ProcessHeat@flagStop 002C            __size_of_turnOffAllLed 0008  
              GetAdcBatValue@temp 0025                  __end_of_delay_ms 0B24  
                  __CFG_XINST$OFF 000000       __size_of_HeatProcessLedShow 0096  
                  __CFG_STVREN$ON 000000                            _cyData 0060  
                ??_GetAdcBatValue 0022                         ??___lwdiv 001B  
                          clear_0 0B7A                            clear_1 0B86  
       AD_Converter@channelNumber 001D                     _S2KeyPushTime 005F  
        __end_of_GetAdcAD597Value 0934                            tblptrh 000FF7  
                          tblptrl 000FF6                     ??_ProcessHeat 0028  
                          tblptru 000FF8                   _levelTmpSetting 0062  
                      __accesstop 0080           __end_of__initialization 0B8C  
                 __CFG_PBADEN$OFF 000000                       ?_ReadEEprom 0001  
         __size_of_ShutDownSystem 0046                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001       GetAdcBatValue@channelNumber 0024  
           __end_of_ProcessButton 072A                   _timerHalfSecond 005D  
                   _turnOffAllLed 0C02             __size_of_AD_Converter 0046  
               GetAdcAD597Value@i 0027                        __pbssBANK0 0080  
             __end_of_ProcessHeat 0546                        _delay_10us 0BB8  
               ??_LevelTmpSetShow 0017                     ??_WriteEEprom 0018  
                  _InitializeINT0 0C12                      _AD_Converter 0AA8  
            __end_of_InitializeAD 0BB8                  _InitializePinmux 0B4C  
                _InitializeTimer0 0BD4                    ?_turnOffAllLed 0001  
                 _flagS2KeyPushed 0061              GetAdcChargBatValue@i 0027  
             __size_of_ReadEEprom 0016                         ?_delay_ms 0017  
    __end_of_InitializeInterrupts 0C12            __end_of_InitializeINT0 0C1A  
               main@flagChargeBat 00AC                           __Hparam 0000  
            GetAdcAD597Value@temp 0025                           __Lparam 0000  
                 GetAdcBatValue@i 0027      __end_of_InitializeOscillator 0C1C  
                         ___lwdiv 09CA                           __pcinit 0B74  
                         __ramtop 0300               __end_of_WriteEEprom 0B4C  
                         __ptext0 001A                           __ptext1 0A1C  
                         __ptext2 0AEE                           __ptext3 034A  
                         __ptext4 0B24                           __ptext5 0BEC  
                         __ptext6 0934                           __ptext7 088E  
                         __ptext8 066E                           __ptext9 0A62  
                       _T0CONbits 000FD5                      __size_of_ISR 0666  
                      ??_delay_ms 0019                       _ProcessHeat 034A  
            _pushButtonJitterTime 0055                    __pintcode_body 0546  
            end_of_initialization 0B8C                       ?_delay_10us 0001  
                   __Lmediumconst 0000                           int_func 0546  
                  _ShutDownSystem 0A1C                   ?_InitializeINT0 0001  
    __size_of_GetAdcChargBatValue 00B2                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                     _adcBatValue 0039                   ??_turnOffAllLed 0017  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82                         _TRISAbits 000F92  
               ?_GetAdcAD597Value 0020                         _TRISBbits 000F93  
                       _TRISCbits 000F94                ??_GetAdcAD597Value 0022  
          __end_of_ShutDownSystem 0A62                      ??_ReadEEprom 0017  
                  ReadEEprom@addr 0017        __end_of_HeatProcessLedShow 09CA  
           __size_of_InitializeAD 001E                       _WriteEEprom 0B24  
            _InitializeInterrupts 0C0A             AD_Converter@AD_Result 001E  
             __size_of_delay_10us 001C               start_initialization 0B74  
                 _LevelTmpSetShow 0A62                       __end_of_ISR 066E  
              __end_of_ReadEEprom 0C02              _InitializeOscillator 0C1A  
                 ?_ShutDownSystem 0001          __end_of_InitializePinmux 0B74  
        __end_of_InitializeTimer0 0BEC                      _InitializeAD 0B9A  
                   _adcAD597Value 0080             ?_InitializeInterrupts 0001  
                __CFG_LPT1OSC$OFF 000000                       __pbssCOMRAM 0039  
                   __pcstackBANK0 00A8           __size_of_GetAdcBatValue 00B2  
           ?_InitializeOscillator 0001                 __size_of_delay_ms 0036  
          __size_of_ProcessButton 00BC                  ___lwdiv@dividend 0017  
               __CFG_CCP2MX$PORTC 000000                         __pintcode 0008  
                        ?___lwdiv 0017           __end_of_LevelTmpSetShow 0AA8  
             _GetAdcChargBatValue 072A                      ?_ProcessHeat 0001  
                ___lwdiv@quotient 001C                  ??_InitializeINT0 0017  
                    ??_delay_10us 0017                         delay_ms@i 001B  
                       delay_ms@j 0019                         delay_ms@x 0017  
          ??_InitializeInterrupts 0017              ?_GetAdcChargBatValue 0020  
                        _PIR1bits 000F9E                  __CFG_WDTPS$32768 000000  
                   _ProcessButton 066E                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
              __end_of_delay_10us 0BD4            ??_InitializeOscillator 0017  
                     _INTCON2bits 000FF1                        _EECON1bits 000FA6  
           ??_GetAdcChargBatValue 0022         __size_of_GetAdcAD597Value 00A6  
                        __Hrparam 0000                          __Lrparam 0000  
                    ?_WriteEEprom 0017                    ?_ProcessButton 0001  
                __size_of___lwdiv 0052                  ?_LevelTmpSetShow 0001  
           __end_of_turnOffAllLed 0C0A                     _timeSystemRun 0059  
              _HeatProcessLedShow 0934                 main@countHeatTime 00A8  
                  _GetAdcBatValue 07DC                          _delay_ms 0AEE  
                ??_ShutDownSystem 001D                   ___lwdiv@divisor 0019  
                 ___lwdiv@counter 001B               ?_HeatProcessLedShow 0001  
                        __ptext10 0C02                          __ptext11 0BD4  
                        __ptext20 0AA8                          __ptext12 0B4C  
                        __ptext21 0BB8                          __ptext13 0C1A  
                        __ptext14 0C0A                          __ptext15 0C12  
                        __ptext16 0B9A                          __ptext17 072A  
                        __ptext18 07DC                          __ptext19 09CA  
                     delay_10us@i 0017                 ?_InitializePinmux 0001  
               ?_InitializeTimer0 0001                     __size_of_main 0330  
GetAdcChargBatValue@channelNumber 0024                ??_InitializePinmux 0017  
              ??_InitializeTimer0 0017           GetAdcChargBatValue@temp 0025  
   ProcessButton@buttonPushPeriod 001B              ??_HeatProcessLedShow 0017  
                   ?_AD_Converter 0019                          int$flags 0065  
                        main@argc 0033                          main@argv 0035  
              _adcChargeStatValue 0094            __end_of_GetAdcBatValue 088E  
                      _INTCONbits 000FF2              __size_of_ProcessHeat 01FC  
                        intlevel2 0000                   ??_ProcessButton 0017  
                  ??_AD_Converter 001B                       _timer0Count 0063  
                     _timer1Count 0064                   ?_GetAdcBatValue 0020  
                _GetAdcAD597Value 088E  

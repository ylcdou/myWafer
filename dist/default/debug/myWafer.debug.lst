

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Oct 14 17:07:22 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     _PORTAbits	set	3968
    38  0000                     _PORTBbits	set	3969
    39  0000                     _PORTC	set	3970
    40  0000                     _PORTCbits	set	3970
    41  0000                     _TRISAbits	set	3986
    42  0000                     _TRISBbits	set	3987
    43  0000                     _TRISCbits	set	3988
    44  0000                     _ADCON0	set	4034
    45  0000                     _ADCON0bits	set	4034
    46  0000                     _ADCON1bits	set	4033
    47  0000                     _ADCON2bits	set	4032
    48  0000                     _ADRESH	set	4036
    49  0000                     _ADRESL	set	4035
    50  0000                     _EEADR	set	4009
    51  0000                     _EECON1bits	set	4006
    52  0000                     _EECON2	set	4007
    53  0000                     _EEDATA	set	4008
    54  0000                     _PIR1bits	set	3998
    55  0000                     _T0CONbits	set	4053
    56  0000                     _TMR0H	set	4055
    57  0000                     _TMR0L	set	4054
    58  0000                     _INTCON2bits	set	4081
    59  0000                     _INTCONbits	set	4082
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  000B90                     __pcinit:
    65                           	opt stack 0
    66  000B90                     start_initialization:
    67                           	opt stack 0
    68  000B90                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to BANK0 (40 bytes)
    72  000B90  EE00  F080         	lfsr	0,__pbssBANK0
    73  000B94  0E28               	movlw	40
    74  000B96                     clear_0:
    75  000B96  6AEE               	clrf	postinc0,c
    76  000B98  06E8               	decf	wreg,f,c
    77  000B9A  E1FD               	bnz	clear_0
    78                           
    79                           ; Clear objects allocated to COMRAM (44 bytes)
    80  000B9C  EE00  F039         	lfsr	0,__pbssCOMRAM
    81  000BA0  0E2C               	movlw	44
    82  000BA2                     clear_1:
    83  000BA2  6AEE               	clrf	postinc0,c
    84  000BA4  06E8               	decf	wreg,f,c
    85  000BA6  E1FD               	bnz	clear_1
    86  000BA8                     end_of_initialization:
    87                           	opt stack 0
    88  000BA8                     __end_of__initialization:
    89                           	opt stack 0
    90  000BA8  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91  000BAA  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92  000BAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  000BAE  6EF8               	movwf	tblptru,c
    94  000BB0  0100               	movlb	0
    95  000BB2  EF0D  F000         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000039                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000039                     _adcBatValue:
   104                           	opt stack 0
   105  000039                     	ds	20
   106  00004D                     _buttonPushTimeStart:
   107                           	opt stack 0
   108  00004D                     	ds	4
   109  000051                     _buttonPushTimeStop:
   110                           	opt stack 0
   111  000051                     	ds	4
   112  000055                     _pushButtonJitterTime:
   113                           	opt stack 0
   114  000055                     	ds	4
   115  000059                     _timeSystemRun:
   116                           	opt stack 0
   117  000059                     	ds	4
   118  00005D                     _timerHalfSecond:
   119                           	opt stack 0
   120  00005D                     	ds	2
   121  00005F                     _S2KeyPushTime:
   122                           	opt stack 0
   123  00005F                     	ds	1
   124  000060                     _cyData:
   125                           	opt stack 0
   126  000060                     	ds	1
   127  000061                     _flagS2KeyPushed:
   128                           	opt stack 0
   129  000061                     	ds	1
   130  000062                     _levelTmpSetting:
   131                           	opt stack 0
   132  000062                     	ds	1
   133  000063                     _timer0Count:
   134                           	opt stack 0
   135  000063                     	ds	1
   136  000064                     _timer1Count:
   137                           	opt stack 0
   138  000064                     	ds	1
   139                           tblptru	equ	0xFF8
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssBANK0
   144  000080                     __pbssBANK0:
   145                           	opt stack 0
   146  000080                     _adcAD597Value:
   147                           	opt stack 0
   148  000080                     	ds	20
   149  000094                     _adcChargeStatValue:
   150                           	opt stack 0
   151  000094                     	ds	20
   152                           tblptru	equ	0xFF8
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           
   156                           	psect	cstackBANK0
   157  0000A8                     __pcstackBANK0:
   158                           	opt stack 0
   159  0000A8                     main@countHeatTime:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x0
   163  0000A8                     	ds	4
   164  0000AC                     main@flagChargeBat:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0x4
   168  0000AC                     	ds	1
   169  0000AD                     main@keyValue:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x5
   173  0000AD                     	ds	1
   174  0000AE                     main@i:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x6
   178  0000AE                     	ds	2
   179  0000B0                     main@adcValue:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x8
   183  0000B0                     	ds	2
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	cstackCOMRAM
   189  000001                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000001                     ??_ISR:
   192  000001                     
   193                           ; 1 bytes @ 0x0
   194  000001                     	ds	22
   195  000017                     ??_ProcessButton:
   196  000017                     ?___lwdiv:
   197                           	opt stack 0
   198  000017                     WriteEEprom@data:
   199                           	opt stack 0
   200  000017                     ReadEEprom@addr:
   201                           	opt stack 0
   202  000017                     delay_ms@x:
   203                           	opt stack 0
   204  000017                     delay_10us@i:
   205                           	opt stack 0
   206  000017                     ___lwdiv@dividend:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x16
   210  000017                     	ds	1
   211  000018                     WriteEEprom@addr:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x17
   215  000018                     	ds	1
   216  000019                     ?_AD_Converter:
   217                           	opt stack 0
   218  000019                     delay_ms@j:
   219                           	opt stack 0
   220  000019                     ___lwdiv@divisor:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x18
   224  000019                     	ds	2
   225  00001B                     ??_AD_Converter:
   226  00001B                     ___lwdiv@counter:
   227                           	opt stack 0
   228  00001B                     delay_ms@i:
   229                           	opt stack 0
   230  00001B                     ProcessButton@buttonPushPeriod:
   231                           	opt stack 0
   232                           
   233                           ; 4 bytes @ 0x1A
   234  00001B                     	ds	1
   235  00001C                     ___lwdiv@quotient:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x1B
   239  00001C                     	ds	1
   240  00001D                     ??_ShutDownSystem:
   241  00001D                     AD_Converter@channelNumber:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x1C
   245  00001D                     	ds	1
   246  00001E                     AD_Converter@AD_Result:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x1D
   250  00001E                     	ds	2
   251  000020                     ?_GetAdcBatValue:
   252                           	opt stack 0
   253  000020                     ?_GetAdcChargBatValue:
   254                           	opt stack 0
   255  000020                     ?_GetAdcAD597Value:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x1F
   259  000020                     	ds	2
   260  000022                     ??_GetAdcBatValue:
   261  000022                     ??_GetAdcChargBatValue:
   262  000022                     ??_GetAdcAD597Value:
   263                           
   264                           ; 0 bytes @ 0x21
   265  000022                     	ds	2
   266  000024                     GetAdcBatValue@channelNumber:
   267                           	opt stack 0
   268  000024                     GetAdcAD597Value@channelNumber:
   269                           	opt stack 0
   270  000024                     GetAdcChargBatValue@channelNumber:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x23
   274  000024                     	ds	1
   275  000025                     GetAdcBatValue@temp:
   276                           	opt stack 0
   277  000025                     GetAdcAD597Value@temp:
   278                           	opt stack 0
   279  000025                     GetAdcChargBatValue@temp:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x24
   283  000025                     	ds	2
   284  000027                     GetAdcBatValue@i:
   285                           	opt stack 0
   286  000027                     GetAdcAD597Value@i:
   287                           	opt stack 0
   288  000027                     GetAdcChargBatValue@i:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x26
   292  000027                     	ds	1
   293  000028                     ??_ProcessHeat:
   294                           
   295                           ; 0 bytes @ 0x27
   296  000028                     	ds	4
   297  00002C                     ProcessHeat@flagStop:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x2B
   301  00002C                     	ds	1
   302  00002D                     ProcessHeat@countHeatTime:
   303                           	opt stack 0
   304                           
   305                           ; 4 bytes @ 0x2C
   306  00002D                     	ds	4
   307  000031                     ProcessHeat@adcValue:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x30
   311  000031                     	ds	2
   312  000033                     
   313                           ; 2 bytes @ 0x32
   314  000033                     	ds	2
   315  000035                     
   316                           ; 3 bytes @ 0x34
   317  000035                     	ds	3
   318  000038                     ??_main:
   319                           
   320                           ; 0 bytes @ 0x37
   321  000038                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 40 in file "WAFR-01-C001 HD-debug.X/WAFR-01-C001-HD-debug main/WAFR-01-C001-HD-debug-main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  argc            2   50[COMRAM] int 
   334 ;;  argv            3   52[COMRAM] PTR PTR unsigned char 
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  countHeatTim    4    0[BANK0 ] unsigned long 
   337 ;;  adcValue        2    8[BANK0 ] short 
   338 ;;  i               2    6[BANK0 ] unsigned int 
   339 ;;  keyValue        1    5[BANK0 ] char 
   340 ;;  flagChargeBa    1    4[BANK0 ] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2   50[COMRAM] int 
   343 ;; Registers used:
   344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   350 ;;      Params:         5       0       0       0
   351 ;;      Locals:         0      10       0       0
   352 ;;      Temps:          1       0       0       0
   353 ;;      Totals:         6      10       0       0
   354 ;;Total ram usage:       16 bytes
   355 ;; Hardware stack levels required when called:    5
   356 ;; This function calls:
   357 ;;		_GetAdcBatValue
   358 ;;		_GetAdcChargBatValue
   359 ;;		_InitializeAD
   360 ;;		_InitializeINT0
   361 ;;		_InitializeInterrupts
   362 ;;		_InitializeOscillator
   363 ;;		_InitializePinmux
   364 ;;		_InitializeTimer0
   365 ;;		_LevelTmpSetShow
   366 ;;		_ProcessButton
   367 ;;		_ProcessHeat
   368 ;;		_ReadEEprom
   369 ;;		_ShutDownSystem
   370 ;;		_delay_ms
   371 ;;		_turnOffAllLed
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text0
   378  00001A                     __ptext0:
   379                           	opt stack 0
   380  00001A                     _main:
   381                           	opt stack 26
   382                           
   383                           ;WAFR-01-C001-HD-debug-main.c: 42: unsigned int i;
   384                           ;WAFR-01-C001-HD-debug-main.c: 43: int8 keyValue;
   385                           ;WAFR-01-C001-HD-debug-main.c: 47: int16 adcValue;
   386                           ;WAFR-01-C001-HD-debug-main.c: 49: uint32 countHeatTime = 0 ;
   387                           
   388                           ;incstack = 0
   389  00001A  0E00               	movlw	0
   390  00001C  0100               	movlb	0	; () banked
   391  00001E  6FA8               	movwf	main@countHeatTime& (0+255),b
   392  000020  0E00               	movlw	0
   393  000022  6FA9               	movwf	(main@countHeatTime+1)& (0+255),b
   394  000024  0E00               	movlw	0
   395  000026  6FAA               	movwf	(main@countHeatTime+2)& (0+255),b
   396  000028  0E00               	movlw	0
   397  00002A  6FAB               	movwf	(main@countHeatTime+3)& (0+255),b
   398                           
   399                           ;WAFR-01-C001-HD-debug-main.c: 50: uint8 flagChargeBat = 0 ;
   400  00002C  0E00               	movlw	0
   401  00002E  0100               	movlb	0	; () banked
   402  000030  6FAC               	movwf	main@flagChargeBat& (0+255),b
   403                           
   404                           ; BSR set to: 0
   405                           ;WAFR-01-C001-HD-debug-main.c: 53: InitializeOscillator();
   406  000032  EC1B  F006         	call	_InitializeOscillator	;wreg free
   407                           
   408                           ;WAFR-01-C001-HD-debug-main.c: 55: InitializePinmux();
   409  000036  ECB4  F005         	call	_InitializePinmux	;wreg free
   410                           
   411                           ;WAFR-01-C001-HD-debug-main.c: 57: PORTBbits.RB2 = 1;
   412  00003A  8481               	bsf	3969,2,c	;volatile
   413                           
   414                           ;WAFR-01-C001-HD-debug-main.c: 66: InitializeInterrupts();
   415  00003C  EC13  F006         	call	_InitializeInterrupts	;wreg free
   416                           
   417                           ;WAFR-01-C001-HD-debug-main.c: 68: InitializeTimer0();
   418  000040  ECF8  F005         	call	_InitializeTimer0	;wreg free
   419                           
   420                           ;WAFR-01-C001-HD-debug-main.c: 70: InitializeINT0();
   421  000044  EC17  F006         	call	_InitializeINT0	;wreg free
   422                           
   423                           ;WAFR-01-C001-HD-debug-main.c: 74: InitializeAD();
   424  000048  ECDB  F005         	call	_InitializeAD	;wreg free
   425                           
   426                           ;WAFR-01-C001-HD-debug-main.c: 76: turnOffAllLed();
   427  00004C  EC0F  F006         	call	_turnOffAllLed	;wreg free
   428                           
   429                           ;WAFR-01-C001-HD-debug-main.c: 79: PORTBbits.RB1 = 0 ;
   430  000050  9281               	bcf	3969,1,c	;volatile
   431                           
   432                           ;WAFR-01-C001-HD-debug-main.c: 85: while ( !PORTBbits.RB0 )
   433  000052  D01E               	goto	l2614
   434  000054                     l2610:
   435                           
   436                           ;WAFR-01-C001-HD-debug-main.c: 86: {
   437                           ;WAFR-01-C001-HD-debug-main.c: 87: PORTCbits.RC0 = ! PORTCbits.RC0 ;
   438  000054  B082               	btfsc	3970,0,c	;volatile
   439  000056  D003               	goto	u2080
   440  000058  6A38               	clrf	??_main& (0+255),c
   441  00005A  2A38               	incf	??_main& (0+255),f,c
   442  00005C  D001               	goto	u2098
   443  00005E                     u2080:
   444  00005E  6A38               	clrf	??_main& (0+255),c
   445  000060                     u2098:
   446  000060  5082               	movf	3970,w,c	;volatile
   447  000062  1838               	xorwf	??_main,w,c
   448  000064  0BFE               	andlw	-2
   449  000066  1838               	xorwf	??_main,w,c
   450  000068  6E82               	movwf	3970,c	;volatile
   451                           
   452                           ;WAFR-01-C001-HD-debug-main.c: 88: PORTCbits.RC2 = ! PORTCbits.RC2;
   453  00006A  B482               	btfsc	3970,2,c	;volatile
   454  00006C  D003               	goto	u2100
   455  00006E  6A38               	clrf	??_main& (0+255),c
   456  000070  2A38               	incf	??_main& (0+255),f,c
   457  000072  D001               	goto	u2118
   458  000074                     u2100:
   459  000074  6A38               	clrf	??_main& (0+255),c
   460  000076                     u2118:
   461  000076  4638               	rlncf	??_main,f,c
   462  000078  4638               	rlncf	??_main,f,c
   463  00007A  5082               	movf	3970,w,c	;volatile
   464  00007C  1838               	xorwf	??_main,w,c
   465  00007E  0BFB               	andlw	-5
   466  000080  1838               	xorwf	??_main,w,c
   467  000082  6E82               	movwf	3970,c	;volatile
   468                           
   469                           ;WAFR-01-C001-HD-debug-main.c: 89: delay_ms(80);
   470  000084  0E00               	movlw	0
   471  000086  6E18               	movwf	delay_ms@x+1,c
   472  000088  0E50               	movlw	80
   473  00008A  6E17               	movwf	delay_ms@x,c
   474  00008C  EC85  F005         	call	_delay_ms	;wreg free
   475  000090                     l2614:
   476  000090  A081               	btfss	3969,0,c	;volatile
   477  000092  D7E0               	goto	l2610
   478                           
   479                           ;WAFR-01-C001-HD-debug-main.c: 90: }
   480                           ;WAFR-01-C001-HD-debug-main.c: 91: PORTCbits.RC0 = 0 ;
   481  000094  9082               	bcf	3970,0,c	;volatile
   482                           
   483                           ;WAFR-01-C001-HD-debug-main.c: 94: timeSystemRun = 0 ;
   484  000096  0E00               	movlw	0
   485  000098  6E59               	movwf	_timeSystemRun,c
   486  00009A  0E00               	movlw	0
   487  00009C  6E5A               	movwf	_timeSystemRun+1,c
   488  00009E  0E00               	movlw	0
   489  0000A0  6E5B               	movwf	_timeSystemRun+2,c
   490  0000A2  0E00               	movlw	0
   491  0000A4  6E5C               	movwf	_timeSystemRun+3,c
   492                           
   493                           ;WAFR-01-C001-HD-debug-main.c: 100: for ( i = 0 ; i < 10 ; i++)
   494  0000A6  0E00               	movlw	0
   495  0000A8  0100               	movlb	0	; () banked
   496  0000AA  6FAF               	movwf	(main@i+1)& (0+255),b
   497  0000AC  0E00               	movlw	0
   498  0000AE  6FAE               	movwf	main@i& (0+255),b
   499  0000B0                     l2618:
   500                           
   501                           ; BSR set to: 0
   502  0000B0  0100               	movlb	0	; () banked
   503  0000B2  51AF               	movf	(main@i+1)& (0+255),w,b
   504  0000B4  E127               	bnz	l2628
   505  0000B6  0E0A               	movlw	10
   506  0000B8  0100               	movlb	0	; () banked
   507  0000BA  5DAE               	subwf	main@i& (0+255),w,b
   508  0000BC  B0D8               	btfsc	status,0,c
   509  0000BE  D022               	goto	l2628
   510                           
   511                           ; BSR set to: 0
   512                           ;WAFR-01-C001-HD-debug-main.c: 101: {
   513                           ;WAFR-01-C001-HD-debug-main.c: 102: adcBatValue[i] = 816 ;
   514                           
   515                           ; BSR set to: 0
   516                           
   517                           ; BSR set to: 0
   518  0000C0  90D8               	bcf	status,0,c
   519  0000C2  0100               	movlb	0	; () banked
   520  0000C4  35AE               	rlcf	main@i& (0+255),w,b
   521  0000C6  6ED9               	movwf	fsr2l,c
   522  0000C8  0100               	movlb	0	; () banked
   523  0000CA  35AF               	rlcf	(main@i+1)& (0+255),w,b
   524  0000CC  6EDA               	movwf	fsr2h,c
   525  0000CE  0E39               	movlw	low _adcBatValue
   526  0000D0  26D9               	addwf	fsr2l,f,c
   527  0000D2  0E00               	movlw	high _adcBatValue
   528  0000D4  22DA               	addwfc	fsr2h,f,c
   529  0000D6  0E30               	movlw	48
   530  0000D8  6EDE               	movwf	postinc2,c
   531  0000DA  0E03               	movlw	3
   532  0000DC  6EDD               	movwf	postdec2,c
   533                           
   534                           ;WAFR-01-C001-HD-debug-main.c: 103: adcAD597Value[i] = 0 ;
   535  0000DE  90D8               	bcf	status,0,c
   536  0000E0  0100               	movlb	0	; () banked
   537  0000E2  35AE               	rlcf	main@i& (0+255),w,b
   538  0000E4  6ED9               	movwf	fsr2l,c
   539  0000E6  0100               	movlb	0	; () banked
   540  0000E8  35AF               	rlcf	(main@i+1)& (0+255),w,b
   541  0000EA  6EDA               	movwf	fsr2h,c
   542  0000EC  0E80               	movlw	low _adcAD597Value
   543  0000EE  26D9               	addwf	fsr2l,f,c
   544  0000F0  0E00               	movlw	high _adcAD597Value
   545  0000F2  22DA               	addwfc	fsr2h,f,c
   546  0000F4  0E00               	movlw	0
   547  0000F6  6EDE               	movwf	postinc2,c
   548  0000F8  0E00               	movlw	0
   549  0000FA  6EDD               	movwf	postdec2,c
   550                           
   551                           ; BSR set to: 0
   552  0000FC  0100               	movlb	0	; () banked
   553  0000FE  4BAE               	infsnz	main@i& (0+255),f,b
   554  000100  2BAF               	incf	(main@i+1)& (0+255),f,b
   555  000102  D7D6               	goto	l2618
   556  000104                     l2628:
   557                           
   558                           ; BSR set to: 0
   559                           ;WAFR-01-C001-HD-debug-main.c: 104: }
   560                           ;WAFR-01-C001-HD-debug-main.c: 107: buttonPushTimeStart = 0 ;
   561  000104  0E00               	movlw	0
   562  000106  6E4D               	movwf	_buttonPushTimeStart,c
   563  000108  0E00               	movlw	0
   564  00010A  6E4E               	movwf	_buttonPushTimeStart+1,c
   565  00010C  0E00               	movlw	0
   566  00010E  6E4F               	movwf	_buttonPushTimeStart+2,c
   567  000110  0E00               	movlw	0
   568  000112  6E50               	movwf	_buttonPushTimeStart+3,c
   569                           
   570                           ;WAFR-01-C001-HD-debug-main.c: 108: buttonPushTimeStop = 0 ;
   571  000114  0E00               	movlw	0
   572  000116  6E51               	movwf	_buttonPushTimeStop,c
   573  000118  0E00               	movlw	0
   574  00011A  6E52               	movwf	_buttonPushTimeStop+1,c
   575  00011C  0E00               	movlw	0
   576  00011E  6E53               	movwf	_buttonPushTimeStop+2,c
   577  000120  0E00               	movlw	0
   578  000122  6E54               	movwf	_buttonPushTimeStop+3,c
   579                           
   580                           ;WAFR-01-C001-HD-debug-main.c: 113: while(timeSystemRun < 10 * 100)
   581  000124  D052               	goto	l2656
   582  000126                     l2630:
   583                           
   584                           ; BSR set to: 0
   585                           ;WAFR-01-C001-HD-debug-main.c: 114: {
   586                           ;WAFR-01-C001-HD-debug-main.c: 115: adcValue = GetAdcBatValue( 4 );
   587  000126  0E04               	movlw	4
   588  000128  ECFC  F003         	call	_GetAdcBatValue
   589  00012C  C020  F0B0         	movff	?_GetAdcBatValue,main@adcValue
   590  000130  C021  F0B1         	movff	?_GetAdcBatValue+1,main@adcValue+1
   591                           
   592                           ;WAFR-01-C001-HD-debug-main.c: 117: turnOffAllLed();
   593  000134  EC0F  F006         	call	_turnOffAllLed	;wreg free
   594                           
   595                           ;WAFR-01-C001-HD-debug-main.c: 118: if ( adcValue > 996)
   596  000138  0100               	movlb	0	; () banked
   597  00013A  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   598  00013C  D00F               	goto	l2638
   599  00013E  0EE5               	movlw	229
   600  000140  0100               	movlb	0	; () banked
   601  000142  5DB0               	subwf	main@adcValue& (0+255),w,b
   602  000144  0E03               	movlw	3
   603  000146  0100               	movlb	0	; () banked
   604  000148  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   605  00014A  A0D8               	btfss	status,0,c
   606  00014C  D007               	goto	l2638
   607                           
   608                           ; BSR set to: 0
   609                           ;WAFR-01-C001-HD-debug-main.c: 119: {
   610                           ;WAFR-01-C001-HD-debug-main.c: 121: PORTCbits.RC0 = 1;
   611  00014E  8082               	bsf	3970,0,c	;volatile
   612                           
   613                           ;WAFR-01-C001-HD-debug-main.c: 122: PORTCbits.RC1 = 1;
   614  000150  8282               	bsf	3970,1,c	;volatile
   615                           
   616                           ;WAFR-01-C001-HD-debug-main.c: 123: PORTCbits.RC3 = 1;
   617  000152  8682               	bsf	3970,3,c	;volatile
   618                           
   619                           ;WAFR-01-C001-HD-debug-main.c: 124: PORTCbits.RC4 = 1;
   620  000154  8882               	bsf	3970,4,c	;volatile
   621                           
   622                           ;WAFR-01-C001-HD-debug-main.c: 125: PORTCbits.RC6 = 1;
   623  000156  8C82               	bsf	3970,6,c	;volatile
   624                           
   625                           ;WAFR-01-C001-HD-debug-main.c: 126: PORTCbits.RC7 = 1;
   626  000158  8E82               	bsf	3970,7,c	;volatile
   627                           
   628                           ;WAFR-01-C001-HD-debug-main.c: 127: }else if ( adcValue > 891 )
   629  00015A  D02E               	goto	l71
   630  00015C                     l2638:
   631                           
   632                           ; BSR set to: 0
   633  00015C  0100               	movlb	0	; () banked
   634  00015E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   635  000160  D00D               	goto	l2642
   636  000162  0E7C               	movlw	124
   637  000164  0100               	movlb	0	; () banked
   638  000166  5DB0               	subwf	main@adcValue& (0+255),w,b
   639  000168  0E03               	movlw	3
   640  00016A  0100               	movlb	0	; () banked
   641  00016C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   642  00016E  A0D8               	btfss	status,0,c
   643  000170  D005               	goto	l2642
   644                           
   645                           ; BSR set to: 0
   646                           ;WAFR-01-C001-HD-debug-main.c: 128: {
   647                           ;WAFR-01-C001-HD-debug-main.c: 129: PORTCbits.RC0 = 1;
   648  000172  8082               	bsf	3970,0,c	;volatile
   649                           
   650                           ;WAFR-01-C001-HD-debug-main.c: 130: PORTCbits.RC1 = 1;
   651  000174  8282               	bsf	3970,1,c	;volatile
   652                           
   653                           ;WAFR-01-C001-HD-debug-main.c: 131: PORTCbits.RC3 = 1;
   654  000176  8682               	bsf	3970,3,c	;volatile
   655                           
   656                           ;WAFR-01-C001-HD-debug-main.c: 132: PORTCbits.RC4 = 1;
   657  000178  8882               	bsf	3970,4,c	;volatile
   658                           
   659                           ;WAFR-01-C001-HD-debug-main.c: 133: }else if ( adcValue > 816)
   660  00017A  D01E               	goto	l71
   661  00017C                     l2642:
   662                           
   663                           ; BSR set to: 0
   664  00017C  0100               	movlb	0	; () banked
   665  00017E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   666  000180  D00B               	goto	l74
   667  000182  0E31               	movlw	49
   668  000184  0100               	movlb	0	; () banked
   669  000186  5DB0               	subwf	main@adcValue& (0+255),w,b
   670  000188  0E03               	movlw	3
   671  00018A  0100               	movlb	0	; () banked
   672  00018C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   673  00018E  A0D8               	btfss	status,0,c
   674  000190  D003               	goto	l74
   675                           
   676                           ; BSR set to: 0
   677                           ;WAFR-01-C001-HD-debug-main.c: 134: {
   678                           ;WAFR-01-C001-HD-debug-main.c: 135: PORTCbits.RC0 = 1;
   679  000192  8082               	bsf	3970,0,c	;volatile
   680                           
   681                           ;WAFR-01-C001-HD-debug-main.c: 136: PORTCbits.RC1 = 1;
   682  000194  8282               	bsf	3970,1,c	;volatile
   683                           
   684                           ;WAFR-01-C001-HD-debug-main.c: 137: } else
   685  000196  D010               	goto	l71
   686  000198                     l74:
   687                           
   688                           ; BSR set to: 0
   689                           ;WAFR-01-C001-HD-debug-main.c: 138: {
   690                           ;WAFR-01-C001-HD-debug-main.c: 139: PORTCbits.RC0 = 1;
   691  000198  8082               	bsf	3970,0,c	;volatile
   692                           
   693                           ;WAFR-01-C001-HD-debug-main.c: 140: PORTCbits.RC1 = 1;
   694  00019A  8282               	bsf	3970,1,c	;volatile
   695                           
   696                           ; BSR set to: 0
   697                           ;WAFR-01-C001-HD-debug-main.c: 141: delay_ms(100);
   698  00019C  0E00               	movlw	0
   699  00019E  6E18               	movwf	delay_ms@x+1,c
   700  0001A0  0E64               	movlw	100
   701  0001A2  6E17               	movwf	delay_ms@x,c
   702  0001A4  EC85  F005         	call	_delay_ms	;wreg free
   703                           
   704                           ;WAFR-01-C001-HD-debug-main.c: 142: PORTCbits.RC0 = 0;
   705  0001A8  9082               	bcf	3970,0,c	;volatile
   706                           
   707                           ;WAFR-01-C001-HD-debug-main.c: 143: PORTCbits.RC1 = 0;
   708  0001AA  9282               	bcf	3970,1,c	;volatile
   709                           
   710                           ;WAFR-01-C001-HD-debug-main.c: 144: delay_ms(100);
   711  0001AC  0E00               	movlw	0
   712  0001AE  6E18               	movwf	delay_ms@x+1,c
   713  0001B0  0E64               	movlw	100
   714  0001B2  6E17               	movwf	delay_ms@x,c
   715  0001B4  EC85  F005         	call	_delay_ms	;wreg free
   716  0001B8                     l71:
   717                           
   718                           ;WAFR-01-C001-HD-debug-main.c: 145: }
   719                           ;WAFR-01-C001-HD-debug-main.c: 147: keyValue = ProcessButton();
   720  0001B8  EC45  F003         	call	_ProcessButton	;wreg free
   721  0001BC  0100               	movlb	0	; () banked
   722  0001BE  6FAD               	movwf	main@keyValue& (0+255),b
   723                           
   724                           ; BSR set to: 0
   725                           ;WAFR-01-C001-HD-debug-main.c: 148: if ( keyValue != 0 )
   726  0001C0  0100               	movlb	0	; () banked
   727  0001C2  51AD               	movf	main@keyValue& (0+255),w,b
   728  0001C4  0100               	movlb	0	; () banked
   729  0001C6  A4D8               	btfss	status,2,c
   730  0001C8  D009               	goto	l2658
   731  0001CA                     l2656:
   732                           
   733                           ; BSR set to: 0
   734  0001CA  505C               	movf	_timeSystemRun+3,w,c
   735  0001CC  105B               	iorwf	_timeSystemRun+2,w,c
   736  0001CE  E106               	bnz	l2658
   737  0001D0  0EE8               	movlw	232
   738  0001D2  5C59               	subwf	_timeSystemRun,w,c
   739  0001D4  0E03               	movlw	3
   740  0001D6  585A               	subwfb	_timeSystemRun+1,w,c
   741  0001D8  A0D8               	btfss	status,0,c
   742  0001DA  D7A5               	goto	l2630
   743  0001DC                     l2658:
   744                           
   745                           ; BSR set to: 0
   746                           ;WAFR-01-C001-HD-debug-main.c: 151: }
   747                           ;WAFR-01-C001-HD-debug-main.c: 152: }
   748                           ;WAFR-01-C001-HD-debug-main.c: 158: levelTmpSetting = ReadEEprom( 0 );
   749  0001DC  0E00               	movlw	0
   750  0001DE  EC04  F006         	call	_ReadEEprom
   751  0001E2  6E62               	movwf	_levelTmpSetting,c
   752                           
   753                           ;WAFR-01-C001-HD-debug-main.c: 159: if ( (levelTmpSetting > 3) | (levelTmpSetting == 0 )
      +                           )
   754  0001E4  0E04               	movlw	4
   755  0001E6  6062               	cpfslt	_levelTmpSetting,c
   756  0001E8  D003               	goto	l2664
   757  0001EA  5062               	movf	_levelTmpSetting,w,c
   758  0001EC  A4D8               	btfss	status,2,c
   759  0001EE  D002               	goto	l81
   760  0001F0                     l2664:
   761                           
   762                           ;WAFR-01-C001-HD-debug-main.c: 160: {
   763                           ;WAFR-01-C001-HD-debug-main.c: 161: levelTmpSetting = 1 ;
   764  0001F0  0E01               	movlw	1
   765  0001F2  6E62               	movwf	_levelTmpSetting,c
   766  0001F4                     l81:
   767                           
   768                           ;WAFR-01-C001-HD-debug-main.c: 193: {
   769                           ;WAFR-01-C001-HD-debug-main.c: 194: if ( !flagChargeBat )
   770  0001F4  0100               	movlb	0	; () banked
   771  0001F6  51AC               	movf	main@flagChargeBat& (0+255),w,b
   772  0001F8  0100               	movlb	0	; () banked
   773  0001FA  A4D8               	btfss	status,2,c
   774  0001FC  D01B               	goto	l2680
   775                           
   776                           ; BSR set to: 0
   777                           ;WAFR-01-C001-HD-debug-main.c: 195: {
   778                           ;WAFR-01-C001-HD-debug-main.c: 196: keyValue = ProcessButton();
   779  0001FE  EC45  F003         	call	_ProcessButton	;wreg free
   780  000202  0100               	movlb	0	; () banked
   781  000204  6FAD               	movwf	main@keyValue& (0+255),b
   782                           
   783                           ;WAFR-01-C001-HD-debug-main.c: 197: switch ( keyValue)
   784  000206  D006               	goto	l2674
   785  000208                     l2668:
   786                           
   787                           ; BSR set to: 0
   788                           ;WAFR-01-C001-HD-debug-main.c: 205: ProcessHeat();
   789  000208  ECB3  F001         	call	_ProcessHeat	;wreg free
   790                           
   791                           ;WAFR-01-C001-HD-debug-main.c: 206: break;
   792  00020C  D00E               	goto	l2676
   793  00020E                     l2670:
   794                           
   795                           ;WAFR-01-C001-HD-debug-main.c: 208: ShutDownSystem();
   796  00020E  EC1C  F005         	call	_ShutDownSystem	;wreg free
   797                           
   798                           ;WAFR-01-C001-HD-debug-main.c: 211: }
   799                           
   800                           ;WAFR-01-C001-HD-debug-main.c: 210: default: break;
   801                           
   802                           ;WAFR-01-C001-HD-debug-main.c: 209: break;
   803  000212  D00B               	goto	l2676
   804  000214                     l2674:
   805  000214  0100               	movlb	0	; () banked
   806  000216  51AD               	movf	main@keyValue& (0+255),w,b
   807                           
   808                           ; Switch size 1, requested type "space"
   809                           ; Number of cases is 3, Range of values is 1 to 3
   810                           ; switch strategies available:
   811                           ; Name         Instructions Cycles
   812                           ; simple_byte           10     6 (average)
   813                           ;	Chosen strategy is simple_byte
   814  000218  0A01               	xorlw	1	; case 1
   815  00021A  B4D8               	btfsc	status,2,c
   816  00021C  D006               	goto	l2676
   817  00021E  0A03               	xorlw	3	; case 2
   818  000220  B4D8               	btfsc	status,2,c
   819  000222  D7F2               	goto	l2668
   820  000224  0A01               	xorlw	1	; case 3
   821  000226  B4D8               	btfsc	status,2,c
   822  000228  D7F2               	goto	l2670
   823  00022A                     l2676:
   824                           
   825                           ;WAFR-01-C001-HD-debug-main.c: 220: if ( timerHalfSecond >= 1 )
   826  00022A  505D               	movf	_timerHalfSecond,w,c
   827  00022C  105E               	iorwf	_timerHalfSecond+1,w,c
   828  00022E  A4D8               	btfss	status,2,c
   829                           
   830                           ;WAFR-01-C001-HD-debug-main.c: 221: {
   831                           ;WAFR-01-C001-HD-debug-main.c: 222: LevelTmpSetShow();
   832  000230  EC3F  F005         	call	_LevelTmpSetShow	;wreg free
   833  000234                     l2680:
   834                           
   835                           ;WAFR-01-C001-HD-debug-main.c: 223: }
   836                           ;WAFR-01-C001-HD-debug-main.c: 224: }
   837                           ;WAFR-01-C001-HD-debug-main.c: 228: if ( PORTAbits.RA4 )
   838  000234  A880               	btfss	3968,4,c	;volatile
   839  000236  D093               	goto	l2742
   840                           
   841                           ;WAFR-01-C001-HD-debug-main.c: 229: {
   842                           ;WAFR-01-C001-HD-debug-main.c: 230: flagChargeBat = 1;
   843  000238  0E01               	movlw	1
   844  00023A  0100               	movlb	0	; () banked
   845  00023C  6FAC               	movwf	main@flagChargeBat& (0+255),b
   846                           
   847                           ; BSR set to: 0
   848                           ;WAFR-01-C001-HD-debug-main.c: 232: adcValue = GetAdcChargBatValue( 1 );
   849  00023E  0E01               	movlw	1
   850  000240  ECA3  F003         	call	_GetAdcChargBatValue
   851  000244  C020  F0B0         	movff	?_GetAdcChargBatValue,main@adcValue
   852  000248  C021  F0B1         	movff	?_GetAdcChargBatValue+1,main@adcValue+1
   853                           
   854                           ;WAFR-01-C001-HD-debug-main.c: 233: if ( adcValue > 800 )
   855  00024C  0100               	movlb	0	; () banked
   856  00024E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   857  000250  D00C               	goto	l2690
   858  000252  0E21               	movlw	33
   859  000254  0100               	movlb	0	; () banked
   860  000256  5DB0               	subwf	main@adcValue& (0+255),w,b
   861  000258  0E03               	movlw	3
   862  00025A  0100               	movlb	0	; () banked
   863  00025C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   864  00025E  A0D8               	btfss	status,0,c
   865  000260  D004               	goto	l2690
   866                           
   867                           ; BSR set to: 0
   868                           ;WAFR-01-C001-HD-debug-main.c: 234: {
   869                           ;WAFR-01-C001-HD-debug-main.c: 236: PORTCbits.RC1 = 1;
   870  000262  8282               	bsf	3970,1,c	;volatile
   871                           
   872                           ;WAFR-01-C001-HD-debug-main.c: 237: PORTCbits.RC4 = 1;
   873  000264  8882               	bsf	3970,4,c	;volatile
   874                           
   875                           ;WAFR-01-C001-HD-debug-main.c: 238: PORTCbits.RC7 = 1;
   876  000266  8E82               	bsf	3970,7,c	;volatile
   877                           
   878                           ;WAFR-01-C001-HD-debug-main.c: 240: }else
   879  000268  D7C5               	goto	l81
   880  00026A                     l2690:
   881                           
   882                           ; BSR set to: 0
   883                           ;WAFR-01-C001-HD-debug-main.c: 241: {
   884                           ;WAFR-01-C001-HD-debug-main.c: 242: adcValue = GetAdcBatValue( 4 );
   885  00026A  0E04               	movlw	4
   886  00026C  ECFC  F003         	call	_GetAdcBatValue
   887  000270  C020  F0B0         	movff	?_GetAdcBatValue,main@adcValue
   888  000274  C021  F0B1         	movff	?_GetAdcBatValue+1,main@adcValue+1
   889                           
   890                           ;WAFR-01-C001-HD-debug-main.c: 244: turnOffAllLed();
   891  000278  EC0F  F006         	call	_turnOffAllLed	;wreg free
   892                           
   893                           ;WAFR-01-C001-HD-debug-main.c: 245: if ( adcValue > 996)
   894  00027C  0100               	movlb	0	; () banked
   895  00027E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   896  000280  D021               	goto	l2712
   897  000282  0EE5               	movlw	229
   898  000284  0100               	movlb	0	; () banked
   899  000286  5DB0               	subwf	main@adcValue& (0+255),w,b
   900  000288  0E03               	movlw	3
   901  00028A  0100               	movlb	0	; () banked
   902  00028C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   903  00028E  A0D8               	btfss	status,0,c
   904  000290  D019               	goto	l2712
   905                           
   906                           ; BSR set to: 0
   907                           ;WAFR-01-C001-HD-debug-main.c: 246: {
   908                           ;WAFR-01-C001-HD-debug-main.c: 248: PORTCbits.RC0 = 1;
   909  000292  8082               	bsf	3970,0,c	;volatile
   910                           
   911                           ;WAFR-01-C001-HD-debug-main.c: 249: PORTCbits.RC1 = 1;
   912  000294  8282               	bsf	3970,1,c	;volatile
   913                           
   914                           ;WAFR-01-C001-HD-debug-main.c: 250: PORTCbits.RC3 = 1;
   915  000296  8682               	bsf	3970,3,c	;volatile
   916                           
   917                           ;WAFR-01-C001-HD-debug-main.c: 251: PORTCbits.RC4 = 1;
   918  000298  8882               	bsf	3970,4,c	;volatile
   919                           
   920                           ;WAFR-01-C001-HD-debug-main.c: 252: PORTCbits.RC6 = 1;
   921  00029A  8C82               	bsf	3970,6,c	;volatile
   922                           
   923                           ;WAFR-01-C001-HD-debug-main.c: 253: PORTCbits.RC7 = 1;
   924  00029C  8E82               	bsf	3970,7,c	;volatile
   925                           
   926                           ; BSR set to: 0
   927                           ;WAFR-01-C001-HD-debug-main.c: 254: delay_ms(200);
   928  00029E  0E00               	movlw	0
   929  0002A0  6E18               	movwf	delay_ms@x+1,c
   930  0002A2  0EC8               	movlw	200
   931  0002A4  6E17               	movwf	delay_ms@x,c
   932  0002A6  EC85  F005         	call	_delay_ms	;wreg free
   933                           
   934                           ;WAFR-01-C001-HD-debug-main.c: 255: PORTCbits.RC0 = 0;
   935  0002AA  9082               	bcf	3970,0,c	;volatile
   936                           
   937                           ;WAFR-01-C001-HD-debug-main.c: 256: PORTCbits.RC1 = 0;
   938  0002AC  9282               	bcf	3970,1,c	;volatile
   939                           
   940                           ;WAFR-01-C001-HD-debug-main.c: 257: PORTCbits.RC3 = 0;
   941  0002AE  9682               	bcf	3970,3,c	;volatile
   942                           
   943                           ;WAFR-01-C001-HD-debug-main.c: 258: PORTCbits.RC4 = 0;
   944  0002B0  9882               	bcf	3970,4,c	;volatile
   945                           
   946                           ;WAFR-01-C001-HD-debug-main.c: 259: PORTCbits.RC6 = 0;
   947  0002B2  9C82               	bcf	3970,6,c	;volatile
   948                           
   949                           ;WAFR-01-C001-HD-debug-main.c: 260: PORTCbits.RC7 = 0;
   950  0002B4  9E82               	bcf	3970,7,c	;volatile
   951                           
   952                           ;WAFR-01-C001-HD-debug-main.c: 261: delay_ms(200);
   953  0002B6  0E00               	movlw	0
   954  0002B8  6E18               	movwf	delay_ms@x+1,c
   955  0002BA  0EC8               	movlw	200
   956  0002BC  6E17               	movwf	delay_ms@x,c
   957  0002BE  EC85  F005         	call	_delay_ms	;wreg free
   958                           
   959                           ;WAFR-01-C001-HD-debug-main.c: 263: }else if ( adcValue > 891 )
   960  0002C2  D798               	goto	l81
   961  0002C4                     l2712:
   962  0002C4  0100               	movlb	0	; () banked
   963  0002C6  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   964  0002C8  D01D               	goto	l2726
   965  0002CA  0E7C               	movlw	124
   966  0002CC  0100               	movlb	0	; () banked
   967  0002CE  5DB0               	subwf	main@adcValue& (0+255),w,b
   968  0002D0  0E03               	movlw	3
   969  0002D2  0100               	movlb	0	; () banked
   970  0002D4  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   971  0002D6  A0D8               	btfss	status,0,c
   972  0002D8  D015               	goto	l2726
   973                           
   974                           ; BSR set to: 0
   975                           ;WAFR-01-C001-HD-debug-main.c: 264: {
   976                           ;WAFR-01-C001-HD-debug-main.c: 265: PORTCbits.RC0 = 1;
   977  0002DA  8082               	bsf	3970,0,c	;volatile
   978                           
   979                           ;WAFR-01-C001-HD-debug-main.c: 266: PORTCbits.RC1 = 1;
   980  0002DC  8282               	bsf	3970,1,c	;volatile
   981                           
   982                           ;WAFR-01-C001-HD-debug-main.c: 267: PORTCbits.RC3 = 1;
   983  0002DE  8682               	bsf	3970,3,c	;volatile
   984                           
   985                           ;WAFR-01-C001-HD-debug-main.c: 268: PORTCbits.RC4 = 1;
   986  0002E0  8882               	bsf	3970,4,c	;volatile
   987                           
   988                           ; BSR set to: 0
   989                           ;WAFR-01-C001-HD-debug-main.c: 269: delay_ms(200);
   990  0002E2  0E00               	movlw	0
   991  0002E4  6E18               	movwf	delay_ms@x+1,c
   992  0002E6  0EC8               	movlw	200
   993  0002E8  6E17               	movwf	delay_ms@x,c
   994  0002EA  EC85  F005         	call	_delay_ms	;wreg free
   995                           
   996                           ;WAFR-01-C001-HD-debug-main.c: 270: PORTCbits.RC0 = 0;
   997  0002EE  9082               	bcf	3970,0,c	;volatile
   998                           
   999                           ;WAFR-01-C001-HD-debug-main.c: 271: PORTCbits.RC1 = 0;
  1000  0002F0  9282               	bcf	3970,1,c	;volatile
  1001                           
  1002                           ;WAFR-01-C001-HD-debug-main.c: 272: PORTCbits.RC3 = 0;
  1003  0002F2  9682               	bcf	3970,3,c	;volatile
  1004                           
  1005                           ;WAFR-01-C001-HD-debug-main.c: 273: PORTCbits.RC4 = 0;
  1006  0002F4  9882               	bcf	3970,4,c	;volatile
  1007                           
  1008                           ;WAFR-01-C001-HD-debug-main.c: 274: delay_ms(200);
  1009  0002F6  0E00               	movlw	0
  1010  0002F8  6E18               	movwf	delay_ms@x+1,c
  1011  0002FA  0EC8               	movlw	200
  1012  0002FC  6E17               	movwf	delay_ms@x,c
  1013  0002FE  EC85  F005         	call	_delay_ms	;wreg free
  1014                           
  1015                           ;WAFR-01-C001-HD-debug-main.c: 275: }else if ( adcValue > 816)
  1016  000302  D778               	goto	l81
  1017  000304                     l2726:
  1018  000304  0100               	movlb	0	; () banked
  1019  000306  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1020  000308  D019               	goto	l97
  1021  00030A  0E31               	movlw	49
  1022  00030C  0100               	movlb	0	; () banked
  1023  00030E  5DB0               	subwf	main@adcValue& (0+255),w,b
  1024  000310  0E03               	movlw	3
  1025  000312  0100               	movlb	0	; () banked
  1026  000314  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
  1027  000316  A0D8               	btfss	status,0,c
  1028  000318  D011               	goto	l97
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;WAFR-01-C001-HD-debug-main.c: 276: {
  1032                           ;WAFR-01-C001-HD-debug-main.c: 277: PORTCbits.RC0 = 1;
  1033  00031A  8082               	bsf	3970,0,c	;volatile
  1034                           
  1035                           ;WAFR-01-C001-HD-debug-main.c: 278: PORTCbits.RC1 = 1;
  1036  00031C  8282               	bsf	3970,1,c	;volatile
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;WAFR-01-C001-HD-debug-main.c: 279: delay_ms(200);
  1040  00031E  0E00               	movlw	0
  1041  000320  6E18               	movwf	delay_ms@x+1,c
  1042  000322  0EC8               	movlw	200
  1043  000324  6E17               	movwf	delay_ms@x,c
  1044  000326  EC85  F005         	call	_delay_ms	;wreg free
  1045                           
  1046                           ;WAFR-01-C001-HD-debug-main.c: 280: PORTCbits.RC0 = 0;
  1047  00032A  9082               	bcf	3970,0,c	;volatile
  1048                           
  1049                           ;WAFR-01-C001-HD-debug-main.c: 281: PORTCbits.RC1 = 0;
  1050  00032C  9282               	bcf	3970,1,c	;volatile
  1051                           
  1052                           ;WAFR-01-C001-HD-debug-main.c: 282: delay_ms(200);
  1053  00032E  0E00               	movlw	0
  1054  000330  6E18               	movwf	delay_ms@x+1,c
  1055  000332  0EC8               	movlw	200
  1056  000334  6E17               	movwf	delay_ms@x,c
  1057  000336  EC85  F005         	call	_delay_ms	;wreg free
  1058                           
  1059                           ;WAFR-01-C001-HD-debug-main.c: 283: } else
  1060  00033A  D75C               	goto	l81
  1061  00033C                     l97:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;WAFR-01-C001-HD-debug-main.c: 284: {
  1065                           ;WAFR-01-C001-HD-debug-main.c: 285: PORTCbits.RC0 = 1;
  1066  00033C  8082               	bsf	3970,0,c	;volatile
  1067                           
  1068                           ;WAFR-01-C001-HD-debug-main.c: 286: PORTCbits.RC1 = 1;
  1069  00033E  8282               	bsf	3970,1,c	;volatile
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;WAFR-01-C001-HD-debug-main.c: 287: delay_ms(100);
  1073  000340  0E00               	movlw	0
  1074  000342  6E18               	movwf	delay_ms@x+1,c
  1075  000344  0E64               	movlw	100
  1076  000346  6E17               	movwf	delay_ms@x,c
  1077  000348  EC85  F005         	call	_delay_ms	;wreg free
  1078                           
  1079                           ;WAFR-01-C001-HD-debug-main.c: 288: PORTCbits.RC0 = 0;
  1080  00034C  9082               	bcf	3970,0,c	;volatile
  1081                           
  1082                           ;WAFR-01-C001-HD-debug-main.c: 289: PORTCbits.RC1 = 0;
  1083  00034E  9282               	bcf	3970,1,c	;volatile
  1084                           
  1085                           ;WAFR-01-C001-HD-debug-main.c: 290: delay_ms(100);
  1086  000350  0E00               	movlw	0
  1087  000352  6E18               	movwf	delay_ms@x+1,c
  1088  000354  0E64               	movlw	100
  1089  000356  6E17               	movwf	delay_ms@x,c
  1090  000358  EC85  F005         	call	_delay_ms	;wreg free
  1091                           
  1092                           ;WAFR-01-C001-HD-debug-main.c: 291: }
  1093                           ;WAFR-01-C001-HD-debug-main.c: 292: }
  1094                           ;WAFR-01-C001-HD-debug-main.c: 293: } else
  1095  00035C  D74B               	goto	l81
  1096  00035E                     l2742:
  1097                           
  1098                           ;WAFR-01-C001-HD-debug-main.c: 294: {
  1099                           ;WAFR-01-C001-HD-debug-main.c: 295: flagChargeBat = 0 ;
  1100  00035E  0E00               	movlw	0
  1101  000360  0100               	movlb	0	; () banked
  1102  000362  6FAC               	movwf	main@flagChargeBat& (0+255),b
  1103                           
  1104                           ; BSR set to: 0
  1105                           
  1106                           ; BSR set to: 0
  1107  000364  D747               	goto	l81
  1108  000366                     __end_of_main:
  1109                           	opt stack 0
  1110                           tblptru	equ	0xFF8
  1111                           postinc0	equ	0xFEE
  1112                           wreg	equ	0xFE8
  1113                           postinc2	equ	0xFDE
  1114                           postdec2	equ	0xFDD
  1115                           fsr2h	equ	0xFDA
  1116                           fsr2l	equ	0xFD9
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _ShutDownSystem *****************
  1120 ;; Defined at:
  1121 ;;		line 334 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;		None               void
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1135 ;;      Params:         0       0       0       0
  1136 ;;      Locals:         0       0       0       0
  1137 ;;      Temps:          1       0       0       0
  1138 ;;      Totals:         1       0       0       0
  1139 ;;Total ram usage:        1 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		_delay_ms
  1144 ;;		_turnOffAllLed
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text1
  1151  000A38                     __ptext1:
  1152                           	opt stack 0
  1153  000A38                     _ShutDownSystem:
  1154                           	opt stack 28
  1155                           
  1156                           ;system.c: 337: turnOffAllLed();
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;incstack = 0
  1160  000A38  EC0F  F006         	call	_turnOffAllLed	;wreg free
  1161  000A3C                     l2556:
  1162                           
  1163                           ;system.c: 339: {
  1164                           ;system.c: 340: PORTBbits.RB2 = 0 ;
  1165  000A3C  9481               	bcf	3969,2,c	;volatile
  1166                           
  1167                           ;system.c: 341: PORTCbits.RC2 = ! PORTCbits.RC2 ;
  1168  000A3E  B482               	btfsc	3970,2,c	;volatile
  1169  000A40  D003               	goto	u2000
  1170  000A42  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1171  000A44  2A1D               	incf	??_ShutDownSystem& (0+255),f,c
  1172  000A46  D001               	goto	u2018
  1173  000A48                     u2000:
  1174  000A48  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1175  000A4A                     u2018:
  1176  000A4A  461D               	rlncf	??_ShutDownSystem,f,c
  1177  000A4C  461D               	rlncf	??_ShutDownSystem,f,c
  1178  000A4E  5082               	movf	3970,w,c	;volatile
  1179  000A50  181D               	xorwf	??_ShutDownSystem,w,c
  1180  000A52  0BFB               	andlw	-5
  1181  000A54  181D               	xorwf	??_ShutDownSystem,w,c
  1182  000A56  6E82               	movwf	3970,c	;volatile
  1183                           
  1184                           ;system.c: 343: PORTCbits.RC1 = ! PORTCbits.RC1 ;
  1185  000A58  B282               	btfsc	3970,1,c	;volatile
  1186  000A5A  D003               	goto	u2020
  1187  000A5C  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1188  000A5E  2A1D               	incf	??_ShutDownSystem& (0+255),f,c
  1189  000A60  D001               	goto	u2038
  1190  000A62                     u2020:
  1191  000A62  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1192  000A64                     u2038:
  1193  000A64  461D               	rlncf	??_ShutDownSystem,f,c
  1194  000A66  5082               	movf	3970,w,c	;volatile
  1195  000A68  181D               	xorwf	??_ShutDownSystem,w,c
  1196  000A6A  0BFD               	andlw	-3
  1197  000A6C  181D               	xorwf	??_ShutDownSystem,w,c
  1198  000A6E  6E82               	movwf	3970,c	;volatile
  1199                           
  1200                           ;system.c: 344: delay_ms(80);
  1201  000A70  0E00               	movlw	0
  1202  000A72  6E18               	movwf	delay_ms@x+1,c
  1203  000A74  0E50               	movlw	80
  1204  000A76  6E17               	movwf	delay_ms@x,c
  1205  000A78  EC85  F005         	call	_delay_ms	;wreg free
  1206  000A7C  D7DF               	goto	l2556
  1207  000A7E                     __end_of_ShutDownSystem:
  1208                           	opt stack 0
  1209                           tblptru	equ	0xFF8
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           postinc2	equ	0xFDE
  1213                           postdec2	equ	0xFDD
  1214                           fsr2h	equ	0xFDA
  1215                           fsr2l	equ	0xFD9
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _delay_ms *****************
  1219 ;; Defined at:
  1220 ;;		line 27 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  x               2   22[COMRAM] unsigned int 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  i               2   26[COMRAM] unsigned int 
  1225 ;;  j               2   24[COMRAM] unsigned int 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;		None               void
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1235 ;;      Params:         2       0       0       0
  1236 ;;      Locals:         4       0       0       0
  1237 ;;      Temps:          0       0       0       0
  1238 ;;      Totals:         6       0       0       0
  1239 ;;Total ram usage:        6 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    1
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;;		_ShutDownSystem
  1247 ;;		_delay_s
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text2
  1252  000B0A                     __ptext2:
  1253                           	opt stack 0
  1254  000B0A                     _delay_ms:
  1255                           	opt stack 29
  1256                           
  1257                           ;user.c: 29: unsigned int i,j;
  1258                           ;user.c: 31: for ( j=0 ; j<x ;j++ )
  1259                           
  1260                           ;incstack = 0
  1261  000B0A  0E00               	movlw	0
  1262  000B0C  6E1A               	movwf	delay_ms@j+1,c
  1263  000B0E  0E00               	movlw	0
  1264  000B10  6E19               	movwf	delay_ms@j,c
  1265  000B12  D00F               	goto	l2274
  1266  000B14                     l2262:
  1267                           
  1268                           ;user.c: 32: {
  1269                           ;user.c: 33: for ( i=0; i<400; i++ );
  1270  000B14  0E00               	movlw	0
  1271  000B16  6E1C               	movwf	delay_ms@i+1,c
  1272  000B18  0E00               	movlw	0
  1273  000B1A  6E1B               	movwf	delay_ms@i,c
  1274  000B1C                     l2264:
  1275  000B1C  0E90               	movlw	144
  1276  000B1E  5C1B               	subwf	delay_ms@i,w,c
  1277  000B20  0E01               	movlw	1
  1278  000B22  581C               	subwfb	delay_ms@i+1,w,c
  1279  000B24  B0D8               	btfsc	status,0,c
  1280  000B26  D003               	goto	l2272
  1281  000B28  4A1B               	infsnz	delay_ms@i,f,c
  1282  000B2A  2A1C               	incf	delay_ms@i+1,f,c
  1283  000B2C  D7F7               	goto	l2264
  1284  000B2E                     l2272:
  1285  000B2E  4A19               	infsnz	delay_ms@j,f,c
  1286  000B30  2A1A               	incf	delay_ms@j+1,f,c
  1287  000B32                     l2274:
  1288  000B32  5017               	movf	delay_ms@x,w,c
  1289  000B34  5C19               	subwf	delay_ms@j,w,c
  1290  000B36  5018               	movf	delay_ms@x+1,w,c
  1291  000B38  581A               	subwfb	delay_ms@j+1,w,c
  1292  000B3A  B0D8               	btfsc	status,0,c
  1293  000B3C  0012               	return	
  1294  000B3E  D7EA               	goto	l2262
  1295  000B40                     __end_of_delay_ms:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           postinc2	equ	0xFDE
  1301                           postdec2	equ	0xFDD
  1302                           fsr2h	equ	0xFDA
  1303                           fsr2l	equ	0xFD9
  1304                           status	equ	0xFD8
  1305                           
  1306 ;; *************** function _ProcessHeat *****************
  1307 ;; Defined at:
  1308 ;;		line 355 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  countHeatTim    4   44[COMRAM] unsigned long 
  1313 ;;  adcValue        2   48[COMRAM] unsigned short 
  1314 ;;  flagStop        1   43[COMRAM] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;		None               void
  1317 ;; Registers used:
  1318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1324 ;;      Params:         0       0       0       0
  1325 ;;      Locals:         7       0       0       0
  1326 ;;      Temps:          4       0       0       0
  1327 ;;      Totals:        11       0       0       0
  1328 ;;Total ram usage:       11 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    4
  1331 ;; This function calls:
  1332 ;;		_GetAdcAD597Value
  1333 ;;		_HeatProcessLedShow
  1334 ;;		_ReadEEprom
  1335 ;;		_WriteEEprom
  1336 ;;		_turnOffAllLed
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text3
  1343  000366                     __ptext3:
  1344                           	opt stack 0
  1345  000366                     _ProcessHeat:
  1346                           	opt stack 26
  1347                           
  1348                           ;system.c: 357: uint16 adcValue;
  1349                           ;system.c: 358: uint8 flagStop=0 ;
  1350                           
  1351                           ;incstack = 0
  1352  000366  0E00               	movlw	0
  1353  000368  6E2C               	movwf	ProcessHeat@flagStop,c
  1354                           
  1355                           ;system.c: 359: uint32 countHeatTime = 0 ;
  1356  00036A  0E00               	movlw	0
  1357  00036C  6E2D               	movwf	ProcessHeat@countHeatTime,c
  1358  00036E  0E00               	movlw	0
  1359  000370  6E2E               	movwf	ProcessHeat@countHeatTime+1,c
  1360  000372  0E00               	movlw	0
  1361  000374  6E2F               	movwf	ProcessHeat@countHeatTime+2,c
  1362  000376  0E00               	movlw	0
  1363  000378  6E30               	movwf	ProcessHeat@countHeatTime+3,c
  1364                           
  1365                           ;system.c: 363: WriteEEprom ( 0, levelTmpSetting );
  1366  00037A  C062  F017         	movff	_levelTmpSetting,WriteEEprom@data
  1367  00037E  0E00               	movlw	0
  1368  000380  ECA0  F005         	call	_WriteEEprom
  1369                           
  1370                           ;system.c: 367: levelTmpSetting = ReadEEprom( 0 );
  1371  000384  0E00               	movlw	0
  1372  000386  EC04  F006         	call	_ReadEEprom
  1373  00038A  6E62               	movwf	_levelTmpSetting,c
  1374                           
  1375                           ;system.c: 369: PORTBbits.RB1 = 1 ;
  1376  00038C  8281               	bsf	3969,1,c	;volatile
  1377                           
  1378                           ;system.c: 371: turnOffAllLed();
  1379  00038E  EC0F  F006         	call	_turnOffAllLed	;wreg free
  1380                           
  1381                           ;system.c: 372: countHeatTime = timeSystemRun ;
  1382  000392  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1383  000396  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1384  00039A  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1385  00039E  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1386  0003A2                     l2484:
  1387                           
  1388                           ;system.c: 374: {
  1389                           ;system.c: 376: if ( (countHeatTime + 1500 ) < timeSystemRun )
  1390  0003A2  0EDC               	movlw	220
  1391  0003A4  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1392  0003A6  6E28               	movwf	??_ProcessHeat& (0+255),c
  1393  0003A8  0E05               	movlw	5
  1394  0003AA  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1395  0003AC  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1396  0003AE  0E00               	movlw	0
  1397  0003B0  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1398  0003B2  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1399  0003B4  0E00               	movlw	0
  1400  0003B6  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1401  0003B8  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1402  0003BA  5059               	movf	_timeSystemRun,w,c
  1403  0003BC  5C28               	subwf	??_ProcessHeat,w,c
  1404  0003BE  505A               	movf	_timeSystemRun+1,w,c
  1405  0003C0  5829               	subwfb	??_ProcessHeat+1,w,c
  1406  0003C2  505B               	movf	_timeSystemRun+2,w,c
  1407  0003C4  582A               	subwfb	??_ProcessHeat+2,w,c
  1408  0003C6  505C               	movf	_timeSystemRun+3,w,c
  1409  0003C8  582B               	subwfb	??_ProcessHeat+3,w,c
  1410  0003CA  B0D8               	btfsc	status,0,c
  1411  0003CC  D003               	goto	l2488
  1412                           
  1413                           ;system.c: 377: {
  1414                           ;system.c: 378: flagStop = 1 ;
  1415  0003CE  0E01               	movlw	1
  1416  0003D0  6E2C               	movwf	ProcessHeat@flagStop,c
  1417                           
  1418                           ;system.c: 379: break;
  1419  0003D2  D0C5               	goto	l249
  1420  0003D4                     l2488:
  1421                           
  1422                           ;system.c: 380: }
  1423                           ;system.c: 382: HeatProcessLedShow();
  1424  0003D4  ECA8  F004         	call	_HeatProcessLedShow	;wreg free
  1425                           
  1426                           ;system.c: 384: adcValue = GetAdcAD597Value( 0 );
  1427  0003D8  0E00               	movlw	0
  1428  0003DA  EC55  F004         	call	_GetAdcAD597Value
  1429  0003DE  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1430  0003E2  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1431                           
  1432                           ;system.c: 386: switch ( levelTmpSetting )
  1433  0003E6  D0AE               	goto	l2548
  1434  0003E8                     l2492:
  1435                           
  1436                           ;system.c: 389: if ( adcValue > 180 )
  1437  0003E8  5032               	movf	ProcessHeat@adcValue+1,w,c
  1438  0003EA  E104               	bnz	u1900
  1439  0003EC  0EB5               	movlw	181
  1440  0003EE  5C31               	subwf	ProcessHeat@adcValue,w,c
  1441  0003F0  A0D8               	btfss	status,0,c
  1442  0003F2  D0B2               	goto	l2550
  1443  0003F4                     u1900:
  1444                           
  1445                           ;system.c: 390: {
  1446                           ;system.c: 391: flagStop = 1 ;
  1447  0003F4  0E01               	movlw	1
  1448  0003F6  6E2C               	movwf	ProcessHeat@flagStop,c
  1449                           
  1450                           ;system.c: 392: PORTCbits.RC2 = 1 ;
  1451  0003F8  8482               	bsf	3970,2,c	;volatile
  1452                           
  1453                           ;system.c: 394: countHeatTime = timeSystemRun ;
  1454  0003FA  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1455  0003FE  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1456  000402  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1457  000406  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1458                           
  1459                           ;system.c: 395: while ( (countHeatTime + 1000) > timeSystemRun )
  1460  00040A  D010               	goto	l2506
  1461  00040C                     l2500:
  1462                           
  1463                           ;system.c: 396: {
  1464                           ;system.c: 397: adcValue = GetAdcAD597Value( 0 );
  1465  00040C  0E00               	movlw	0
  1466  00040E  EC55  F004         	call	_GetAdcAD597Value
  1467  000412  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1468  000416  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1469                           
  1470                           ;system.c: 398: if ( adcValue > 180)
  1471  00041A  5032               	movf	ProcessHeat@adcValue+1,w,c
  1472  00041C  E104               	bnz	u1910
  1473  00041E  0EB5               	movlw	181
  1474  000420  5C31               	subwf	ProcessHeat@adcValue,w,c
  1475  000422  A0D8               	btfss	status,0,c
  1476  000424  D002               	goto	l255
  1477  000426                     u1910:
  1478                           
  1479                           ;system.c: 399: {
  1480                           ;system.c: 400: PORTBbits.RB1 = 0 ;
  1481  000426  9281               	bcf	3969,1,c	;volatile
  1482                           
  1483                           ;system.c: 401: }else
  1484  000428  D001               	goto	l2506
  1485  00042A                     l255:
  1486                           
  1487                           ;system.c: 402: {
  1488                           ;system.c: 403: PORTBbits.RB1 = 1 ;
  1489  00042A  8281               	bsf	3969,1,c	;volatile
  1490  00042C                     l2506:
  1491  00042C  0EE8               	movlw	232
  1492  00042E  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1493  000430  6E28               	movwf	??_ProcessHeat& (0+255),c
  1494  000432  0E03               	movlw	3
  1495  000434  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1496  000436  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1497  000438  0E00               	movlw	0
  1498  00043A  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1499  00043C  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1500  00043E  0E00               	movlw	0
  1501  000440  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1502  000442  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1503  000444  5028               	movf	??_ProcessHeat,w,c
  1504  000446  5C59               	subwf	_timeSystemRun,w,c
  1505  000448  5029               	movf	??_ProcessHeat+1,w,c
  1506  00044A  585A               	subwfb	_timeSystemRun+1,w,c
  1507  00044C  502A               	movf	??_ProcessHeat+2,w,c
  1508  00044E  585B               	subwfb	_timeSystemRun+2,w,c
  1509  000450  502B               	movf	??_ProcessHeat+3,w,c
  1510  000452  585C               	subwfb	_timeSystemRun+3,w,c
  1511  000454  B0D8               	btfsc	status,0,c
  1512  000456  D080               	goto	l2550
  1513  000458  D7D9               	goto	l2500
  1514  00045A                     l2508:
  1515                           
  1516                           ;system.c: 409: if ( adcValue > 200 )
  1517  00045A  5032               	movf	ProcessHeat@adcValue+1,w,c
  1518  00045C  E104               	bnz	u1930
  1519  00045E  0EC9               	movlw	201
  1520  000460  5C31               	subwf	ProcessHeat@adcValue,w,c
  1521  000462  A0D8               	btfss	status,0,c
  1522  000464  D079               	goto	l2550
  1523  000466                     u1930:
  1524                           
  1525                           ;system.c: 410: {
  1526                           ;system.c: 411: flagStop = 1 ;
  1527  000466  0E01               	movlw	1
  1528  000468  6E2C               	movwf	ProcessHeat@flagStop,c
  1529                           
  1530                           ;system.c: 412: PORTCbits.RC1 = 1 ;
  1531  00046A  8282               	bsf	3970,1,c	;volatile
  1532                           
  1533                           ;system.c: 413: PORTCbits.RC4 = 1 ;
  1534  00046C  8882               	bsf	3970,4,c	;volatile
  1535                           
  1536                           ;system.c: 415: countHeatTime = timeSystemRun ;
  1537  00046E  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1538  000472  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1539  000476  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1540  00047A  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1541                           
  1542                           ;system.c: 416: while ( (countHeatTime + 1000) > timeSystemRun )
  1543  00047E  D010               	goto	l2524
  1544  000480                     l2518:
  1545                           
  1546                           ;system.c: 417: {
  1547                           ;system.c: 418: adcValue = GetAdcAD597Value( 0 );
  1548  000480  0E00               	movlw	0
  1549  000482  EC55  F004         	call	_GetAdcAD597Value
  1550  000486  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1551  00048A  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1552                           
  1553                           ;system.c: 419: if ( adcValue > 200)
  1554  00048E  5032               	movf	ProcessHeat@adcValue+1,w,c
  1555  000490  E104               	bnz	u1940
  1556  000492  0EC9               	movlw	201
  1557  000494  5C31               	subwf	ProcessHeat@adcValue,w,c
  1558  000496  A0D8               	btfss	status,0,c
  1559  000498  D002               	goto	l263
  1560  00049A                     u1940:
  1561                           
  1562                           ;system.c: 420: {
  1563                           ;system.c: 421: PORTBbits.RB1 = 0 ;
  1564  00049A  9281               	bcf	3969,1,c	;volatile
  1565                           
  1566                           ;system.c: 422: }else
  1567  00049C  D001               	goto	l2524
  1568  00049E                     l263:
  1569                           
  1570                           ;system.c: 423: {
  1571                           ;system.c: 424: PORTBbits.RB1 = 1 ;
  1572  00049E  8281               	bsf	3969,1,c	;volatile
  1573  0004A0                     l2524:
  1574  0004A0  0EE8               	movlw	232
  1575  0004A2  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1576  0004A4  6E28               	movwf	??_ProcessHeat& (0+255),c
  1577  0004A6  0E03               	movlw	3
  1578  0004A8  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1579  0004AA  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1580  0004AC  0E00               	movlw	0
  1581  0004AE  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1582  0004B0  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1583  0004B2  0E00               	movlw	0
  1584  0004B4  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1585  0004B6  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1586  0004B8  5028               	movf	??_ProcessHeat,w,c
  1587  0004BA  5C59               	subwf	_timeSystemRun,w,c
  1588  0004BC  5029               	movf	??_ProcessHeat+1,w,c
  1589  0004BE  585A               	subwfb	_timeSystemRun+1,w,c
  1590  0004C0  502A               	movf	??_ProcessHeat+2,w,c
  1591  0004C2  585B               	subwfb	_timeSystemRun+2,w,c
  1592  0004C4  502B               	movf	??_ProcessHeat+3,w,c
  1593  0004C6  585C               	subwfb	_timeSystemRun+3,w,c
  1594  0004C8  B0D8               	btfsc	status,0,c
  1595  0004CA  D046               	goto	l2550
  1596  0004CC  D7D9               	goto	l2518
  1597  0004CE                     l2526:
  1598                           
  1599                           ;system.c: 430: if ( adcValue > 220 )
  1600  0004CE  5032               	movf	ProcessHeat@adcValue+1,w,c
  1601  0004D0  E104               	bnz	u1960
  1602  0004D2  0EDD               	movlw	221
  1603  0004D4  5C31               	subwf	ProcessHeat@adcValue,w,c
  1604  0004D6  A0D8               	btfss	status,0,c
  1605  0004D8  D03F               	goto	l2550
  1606  0004DA                     u1960:
  1607                           
  1608                           ;system.c: 431: {
  1609                           ;system.c: 432: flagStop = 1 ;
  1610  0004DA  0E01               	movlw	1
  1611  0004DC  6E2C               	movwf	ProcessHeat@flagStop,c
  1612                           
  1613                           ;system.c: 433: PORTCbits.RC0 = 1 ;
  1614  0004DE  8082               	bsf	3970,0,c	;volatile
  1615                           
  1616                           ;system.c: 434: PORTCbits.RC3 = 1 ;
  1617  0004E0  8682               	bsf	3970,3,c	;volatile
  1618                           
  1619                           ;system.c: 435: PORTCbits.RC6 = 1 ;
  1620  0004E2  8C82               	bsf	3970,6,c	;volatile
  1621                           
  1622                           ;system.c: 437: countHeatTime = timeSystemRun ;
  1623  0004E4  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1624  0004E8  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1625  0004EC  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1626  0004F0  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1627                           
  1628                           ;system.c: 438: while ( (countHeatTime + 1000) > timeSystemRun )
  1629  0004F4  D010               	goto	l2544
  1630  0004F6                     l2538:
  1631                           
  1632                           ;system.c: 439: {
  1633                           ;system.c: 440: adcValue = GetAdcAD597Value( 0 );
  1634  0004F6  0E00               	movlw	0
  1635  0004F8  EC55  F004         	call	_GetAdcAD597Value
  1636  0004FC  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1637  000500  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1638                           
  1639                           ;system.c: 441: if ( adcValue > 220)
  1640  000504  5032               	movf	ProcessHeat@adcValue+1,w,c
  1641  000506  E104               	bnz	u1970
  1642  000508  0EDD               	movlw	221
  1643  00050A  5C31               	subwf	ProcessHeat@adcValue,w,c
  1644  00050C  A0D8               	btfss	status,0,c
  1645  00050E  D002               	goto	l270
  1646  000510                     u1970:
  1647                           
  1648                           ;system.c: 442: {
  1649                           ;system.c: 443: PORTBbits.RB1 = 0 ;
  1650  000510  9281               	bcf	3969,1,c	;volatile
  1651                           
  1652                           ;system.c: 444: }else
  1653  000512  D001               	goto	l2544
  1654  000514                     l270:
  1655                           
  1656                           ;system.c: 445: {
  1657                           ;system.c: 446: PORTBbits.RB1 = 1 ;
  1658  000514  8281               	bsf	3969,1,c	;volatile
  1659  000516                     l2544:
  1660  000516  0EE8               	movlw	232
  1661  000518  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1662  00051A  6E28               	movwf	??_ProcessHeat& (0+255),c
  1663  00051C  0E03               	movlw	3
  1664  00051E  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1665  000520  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1666  000522  0E00               	movlw	0
  1667  000524  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1668  000526  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1669  000528  0E00               	movlw	0
  1670  00052A  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1671  00052C  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1672  00052E  5028               	movf	??_ProcessHeat,w,c
  1673  000530  5C59               	subwf	_timeSystemRun,w,c
  1674  000532  5029               	movf	??_ProcessHeat+1,w,c
  1675  000534  585A               	subwfb	_timeSystemRun+1,w,c
  1676  000536  502A               	movf	??_ProcessHeat+2,w,c
  1677  000538  585B               	subwfb	_timeSystemRun+2,w,c
  1678  00053A  502B               	movf	??_ProcessHeat+3,w,c
  1679  00053C  585C               	subwfb	_timeSystemRun+3,w,c
  1680  00053E  B0D8               	btfsc	status,0,c
  1681  000540  D00B               	goto	l2550
  1682  000542  D7D9               	goto	l2538
  1683  000544                     l2548:
  1684  000544  5062               	movf	_levelTmpSetting,w,c
  1685                           
  1686                           ; Switch size 1, requested type "space"
  1687                           ; Number of cases is 3, Range of values is 1 to 3
  1688                           ; switch strategies available:
  1689                           ; Name         Instructions Cycles
  1690                           ; simple_byte           10     6 (average)
  1691                           ;	Chosen strategy is simple_byte
  1692  000546  0A01               	xorlw	1	; case 1
  1693  000548  B4D8               	btfsc	status,2,c
  1694  00054A  D74E               	goto	l2492
  1695  00054C  0A03               	xorlw	3	; case 2
  1696  00054E  B4D8               	btfsc	status,2,c
  1697  000550  D784               	goto	l2508
  1698  000552  0A01               	xorlw	1	; case 3
  1699  000554  B4D8               	btfsc	status,2,c
  1700  000556  D7BB               	goto	l2526
  1701  000558                     l2550:
  1702                           
  1703                           ;system.c: 455: if ( flagStop )
  1704  000558  502C               	movf	ProcessHeat@flagStop,w,c
  1705  00055A  B4D8               	btfsc	status,2,c
  1706  00055C  D722               	goto	l2484
  1707  00055E                     l249:
  1708                           
  1709                           ;system.c: 458: }
  1710                           ;system.c: 459: }
  1711                           ;system.c: 461: PORTBbits.RB1 = 0 ;
  1712  00055E  9281               	bcf	3969,1,c	;volatile
  1713  000560  0012               	return		;funcret
  1714  000562                     __end_of_ProcessHeat:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           postinc2	equ	0xFDE
  1720                           postdec2	equ	0xFDD
  1721                           fsr2h	equ	0xFDA
  1722                           fsr2l	equ	0xFD9
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function _WriteEEprom *****************
  1726 ;; Defined at:
  1727 ;;		line 47 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  addr            1    wreg     unsigned char 
  1730 ;;  data            1   22[COMRAM] unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  addr            1   23[COMRAM] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;		None               void
  1735 ;; Registers used:
  1736 ;;		wreg, status,2
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1742 ;;      Params:         1       0       0       0
  1743 ;;      Locals:         1       0       0       0
  1744 ;;      Temps:          0       0       0       0
  1745 ;;      Totals:         2       0       0       0
  1746 ;;Total ram usage:        2 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_ProcessHeat
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text4
  1757  000B40                     __ptext4:
  1758                           	opt stack 0
  1759  000B40                     _WriteEEprom:
  1760                           	opt stack 28
  1761                           
  1762                           ;incstack = 0
  1763                           ;WriteEEprom@addr stored from wreg
  1764  000B40  6E18               	movwf	WriteEEprom@addr,c
  1765  000B42                     l362:
  1766                           
  1767                           ;EEprom.c: 50: while( EECON1bits.WR ) ;
  1768  000B42  B2A6               	btfsc	4006,1,c	;volatile
  1769  000B44  D7FE               	goto	l362
  1770                           
  1771                           ;EEprom.c: 52: EEADR = addr ;
  1772  000B46  C018  FFA9         	movff	WriteEEprom@addr,4009	;volatile
  1773                           
  1774                           ;EEprom.c: 53: EEDATA = data ;
  1775  000B4A  C017  FFA8         	movff	WriteEEprom@data,4008	;volatile
  1776                           
  1777                           ;EEprom.c: 54: EECON1bits.EEPGD = 0 ;
  1778  000B4E  9EA6               	bcf	4006,7,c	;volatile
  1779                           
  1780                           ;EEprom.c: 56: EECON1bits.WREN = 1 ;
  1781  000B50  84A6               	bsf	4006,2,c	;volatile
  1782                           
  1783                           ;EEprom.c: 59: INTCONbits.GIE = 0 ;
  1784  000B52  9EF2               	bcf	intcon,7,c	;volatile
  1785                           
  1786                           ;EEprom.c: 60: EECON2 = 0X55;
  1787  000B54  0E55               	movlw	85
  1788  000B56  6EA7               	movwf	4007,c	;volatile
  1789                           
  1790                           ;EEprom.c: 61: EECON2 = 0XAA;
  1791  000B58  0EAA               	movlw	170
  1792  000B5A  6EA7               	movwf	4007,c	;volatile
  1793                           
  1794                           ;EEprom.c: 62: EECON1bits.WR = 1 ;
  1795  000B5C  82A6               	bsf	4006,1,c	;volatile
  1796                           
  1797                           ;EEprom.c: 63: INTCONbits.GIE = 1 ;
  1798  000B5E  8EF2               	bsf	intcon,7,c	;volatile
  1799  000B60                     l2308:
  1800                           
  1801                           ;EEprom.c: 66: while( EECON1bits.WR) ;
  1802  000B60  B2A6               	btfsc	4006,1,c	;volatile
  1803  000B62  D7FE               	goto	l2308
  1804                           
  1805                           ;EEprom.c: 67: EECON1bits.WREN = 0 ;
  1806  000B64  94A6               	bcf	4006,2,c	;volatile
  1807  000B66  0012               	return		;funcret
  1808  000B68                     __end_of_WriteEEprom:
  1809                           	opt stack 0
  1810                           tblptru	equ	0xFF8
  1811                           intcon	equ	0xFF2
  1812                           postinc0	equ	0xFEE
  1813                           wreg	equ	0xFE8
  1814                           postinc2	equ	0xFDE
  1815                           postdec2	equ	0xFDD
  1816                           fsr2h	equ	0xFDA
  1817                           fsr2l	equ	0xFD9
  1818                           status	equ	0xFD8
  1819                           
  1820 ;; *************** function _ReadEEprom *****************
  1821 ;; Defined at:
  1822 ;;		line 79 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  addr            1    wreg     unsigned char 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  addr            1   22[COMRAM] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      unsigned char 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1836 ;;      Params:         0       0       0       0
  1837 ;;      Locals:         1       0       0       0
  1838 ;;      Temps:          0       0       0       0
  1839 ;;      Totals:         1       0       0       0
  1840 ;;Total ram usage:        1 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;;		_ProcessHeat
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text5
  1852  000C08                     __ptext5:
  1853                           	opt stack 0
  1854  000C08                     _ReadEEprom:
  1855                           	opt stack 29
  1856                           
  1857                           ;incstack = 0
  1858                           ;ReadEEprom@addr stored from wreg
  1859  000C08  6E17               	movwf	ReadEEprom@addr,c
  1860  000C0A                     l369:
  1861                           
  1862                           ;EEprom.c: 82: while( EECON1bits.RD ) ;
  1863  000C0A  B0A6               	btfsc	4006,0,c	;volatile
  1864  000C0C  D7FE               	goto	l369
  1865                           
  1866                           ;EEprom.c: 84: EEADR = addr ;
  1867  000C0E  C017  FFA9         	movff	ReadEEprom@addr,4009	;volatile
  1868                           
  1869                           ;EEprom.c: 85: EECON1bits.EEPGD = 0 ;
  1870  000C12  9EA6               	bcf	4006,7,c	;volatile
  1871                           
  1872                           ;EEprom.c: 87: EECON1bits.RD = 1 ;
  1873  000C14  80A6               	bsf	4006,0,c	;volatile
  1874  000C16                     l2282:
  1875                           
  1876                           ;EEprom.c: 89: while ( EECON1bits.RD ) ;
  1877  000C16  B0A6               	btfsc	4006,0,c	;volatile
  1878  000C18  D7FE               	goto	l2282
  1879                           
  1880                           ;EEprom.c: 91: return( EEDATA );
  1881  000C1A  50A8               	movf	4008,w,c	;volatile
  1882  000C1C  0012               	return		;funcret
  1883  000C1E                     __end_of_ReadEEprom:
  1884                           	opt stack 0
  1885                           tblptru	equ	0xFF8
  1886                           intcon	equ	0xFF2
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           postinc2	equ	0xFDE
  1890                           postdec2	equ	0xFDD
  1891                           fsr2h	equ	0xFDA
  1892                           fsr2l	equ	0xFD9
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _HeatProcessLedShow *****************
  1896 ;; Defined at:
  1897 ;;		line 92 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1911 ;;      Params:         0       0       0       0
  1912 ;;      Locals:         0       0       0       0
  1913 ;;      Temps:          0       0       0       0
  1914 ;;      Totals:         0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_ProcessHeat
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text6
  1926  000950                     __ptext6:
  1927                           	opt stack 0
  1928  000950                     _HeatProcessLedShow:
  1929                           	opt stack 28
  1930                           
  1931                           ;RGBLedDisplay.c: 96: {
  1932                           ;RGBLedDisplay.c: 97: switch ( levelTmpSetting )
  1933                           
  1934                           ;incstack = 0
  1935                           ;RGBLedDisplay.c: 95: while(1)
  1936  000950  D03F               	goto	l2342
  1937  000952                     l2310:
  1938                           
  1939                           ;RGBLedDisplay.c: 100: if ( timerHalfSecond < 1)
  1940  000952  505D               	movf	_timerHalfSecond,w,c
  1941  000954  105E               	iorwf	_timerHalfSecond+1,w,c
  1942  000956  A4D8               	btfss	status,2,c
  1943  000958  D002               	goto	l2314
  1944                           
  1945                           ;RGBLedDisplay.c: 101: {
  1946                           ;RGBLedDisplay.c: 102: PORTCbits.RC2 = 1 ;
  1947  00095A  8482               	bsf	3970,2,c	;volatile
  1948                           
  1949                           ;RGBLedDisplay.c: 103: }
  1950  00095C  0012               	return	
  1951  00095E                     l2314:
  1952                           
  1953                           ;RGBLedDisplay.c: 104: else if ( timerHalfSecond <2 )
  1954  00095E  505E               	movf	_timerHalfSecond+1,w,c
  1955  000960  E106               	bnz	l2318
  1956  000962  0E02               	movlw	2
  1957  000964  5C5D               	subwf	_timerHalfSecond,w,c
  1958  000966  B0D8               	btfsc	status,0,c
  1959  000968  D002               	goto	l2318
  1960                           
  1961                           ;RGBLedDisplay.c: 105: {
  1962                           ;RGBLedDisplay.c: 106: PORTCbits.RC2 = 0 ;
  1963  00096A  9482               	bcf	3970,2,c	;volatile
  1964                           
  1965                           ;RGBLedDisplay.c: 107: }else
  1966  00096C  0012               	return	
  1967  00096E                     l2318:
  1968                           
  1969                           ;RGBLedDisplay.c: 108: {
  1970                           ;RGBLedDisplay.c: 109: timerHalfSecond = 0 ;
  1971  00096E  0E00               	movlw	0
  1972  000970  6E5E               	movwf	_timerHalfSecond+1,c
  1973  000972  0E00               	movlw	0
  1974  000974  6E5D               	movwf	_timerHalfSecond,c
  1975                           
  1976                           ;RGBLedDisplay.c: 110: }
  1977                           ;RGBLedDisplay.c: 111: break;
  1978  000976  0012               	return	
  1979  000978                     l2320:
  1980                           
  1981                           ;RGBLedDisplay.c: 113: if ( timerHalfSecond < 1)
  1982  000978  505D               	movf	_timerHalfSecond,w,c
  1983  00097A  105E               	iorwf	_timerHalfSecond+1,w,c
  1984  00097C  A4D8               	btfss	status,2,c
  1985  00097E  D003               	goto	l2324
  1986                           
  1987                           ;RGBLedDisplay.c: 114: {
  1988                           ;RGBLedDisplay.c: 115: PORTCbits.RC1 = 1 ;
  1989  000980  8282               	bsf	3970,1,c	;volatile
  1990                           
  1991                           ;RGBLedDisplay.c: 116: PORTCbits.RC4 = 1;
  1992  000982  8882               	bsf	3970,4,c	;volatile
  1993                           
  1994                           ;RGBLedDisplay.c: 117: }
  1995  000984  0012               	return	
  1996  000986                     l2324:
  1997                           
  1998                           ;RGBLedDisplay.c: 118: else if ( timerHalfSecond < 2 )
  1999  000986  505E               	movf	_timerHalfSecond+1,w,c
  2000  000988  E107               	bnz	l2328
  2001  00098A  0E02               	movlw	2
  2002  00098C  5C5D               	subwf	_timerHalfSecond,w,c
  2003  00098E  B0D8               	btfsc	status,0,c
  2004  000990  D003               	goto	l2328
  2005                           
  2006                           ;RGBLedDisplay.c: 119: {
  2007                           ;RGBLedDisplay.c: 120: PORTCbits.RC1 = 0;
  2008  000992  9282               	bcf	3970,1,c	;volatile
  2009                           
  2010                           ;RGBLedDisplay.c: 121: PORTCbits.RC4 = 0;
  2011  000994  9882               	bcf	3970,4,c	;volatile
  2012                           
  2013                           ;RGBLedDisplay.c: 122: }else
  2014  000996  0012               	return	
  2015  000998                     l2328:
  2016                           
  2017                           ;RGBLedDisplay.c: 123: {
  2018                           ;RGBLedDisplay.c: 124: timerHalfSecond = 0 ;
  2019  000998  0E00               	movlw	0
  2020  00099A  6E5E               	movwf	_timerHalfSecond+1,c
  2021  00099C  0E00               	movlw	0
  2022  00099E  6E5D               	movwf	_timerHalfSecond,c
  2023                           
  2024                           ;RGBLedDisplay.c: 125: }
  2025                           ;RGBLedDisplay.c: 126: break;
  2026  0009A0  0012               	return	
  2027  0009A2                     l2330:
  2028                           
  2029                           ;RGBLedDisplay.c: 128: if ( timerHalfSecond < 1)
  2030  0009A2  505D               	movf	_timerHalfSecond,w,c
  2031  0009A4  105E               	iorwf	_timerHalfSecond+1,w,c
  2032  0009A6  A4D8               	btfss	status,2,c
  2033  0009A8  D004               	goto	l2334
  2034                           
  2035                           ;RGBLedDisplay.c: 129: {
  2036                           ;RGBLedDisplay.c: 130: PORTCbits.RC0 = 1 ;
  2037  0009AA  8082               	bsf	3970,0,c	;volatile
  2038                           
  2039                           ;RGBLedDisplay.c: 131: PORTCbits.RC3 = 1;
  2040  0009AC  8682               	bsf	3970,3,c	;volatile
  2041                           
  2042                           ;RGBLedDisplay.c: 132: PORTCbits.RC6 = 1;
  2043  0009AE  8C82               	bsf	3970,6,c	;volatile
  2044                           
  2045                           ;RGBLedDisplay.c: 133: }
  2046  0009B0  0012               	return	
  2047  0009B2                     l2334:
  2048                           
  2049                           ;RGBLedDisplay.c: 134: else if ( timerHalfSecond < 2 )
  2050  0009B2  505E               	movf	_timerHalfSecond+1,w,c
  2051  0009B4  E108               	bnz	l2338
  2052  0009B6  0E02               	movlw	2
  2053  0009B8  5C5D               	subwf	_timerHalfSecond,w,c
  2054  0009BA  B0D8               	btfsc	status,0,c
  2055  0009BC  D004               	goto	l2338
  2056                           
  2057                           ;RGBLedDisplay.c: 135: {
  2058                           ;RGBLedDisplay.c: 136: PORTCbits.RC0 = 0 ;
  2059  0009BE  9082               	bcf	3970,0,c	;volatile
  2060                           
  2061                           ;RGBLedDisplay.c: 137: PORTCbits.RC3 = 0;
  2062  0009C0  9682               	bcf	3970,3,c	;volatile
  2063                           
  2064                           ;RGBLedDisplay.c: 138: PORTCbits.RC6 = 0;
  2065  0009C2  9C82               	bcf	3970,6,c	;volatile
  2066                           
  2067                           ;RGBLedDisplay.c: 139: }else
  2068  0009C4  0012               	return	
  2069  0009C6                     l2338:
  2070                           
  2071                           ;RGBLedDisplay.c: 140: {
  2072                           ;RGBLedDisplay.c: 141: timerHalfSecond = 0 ;
  2073  0009C6  0E00               	movlw	0
  2074  0009C8  6E5E               	movwf	_timerHalfSecond+1,c
  2075  0009CA  0E00               	movlw	0
  2076  0009CC  6E5D               	movwf	_timerHalfSecond,c
  2077                           
  2078                           ;RGBLedDisplay.c: 146: }
  2079                           
  2080                           ;RGBLedDisplay.c: 145: break;
  2081                           
  2082                           ;RGBLedDisplay.c: 144: default:
  2083                           
  2084                           ;RGBLedDisplay.c: 142: }
  2085                           ;RGBLedDisplay.c: 143: break;
  2086  0009CE  0012               	return	
  2087  0009D0                     l2342:
  2088  0009D0  5062               	movf	_levelTmpSetting,w,c
  2089                           
  2090                           ; Switch size 1, requested type "space"
  2091                           ; Number of cases is 3, Range of values is 1 to 3
  2092                           ; switch strategies available:
  2093                           ; Name         Instructions Cycles
  2094                           ; simple_byte           10     6 (average)
  2095                           ;	Chosen strategy is simple_byte
  2096  0009D2  0A01               	xorlw	1	; case 1
  2097  0009D4  B4D8               	btfsc	status,2,c
  2098  0009D6  D7BD               	goto	l2310
  2099  0009D8  0A03               	xorlw	3	; case 2
  2100  0009DA  B4D8               	btfsc	status,2,c
  2101  0009DC  D7CD               	goto	l2320
  2102  0009DE  0A01               	xorlw	1	; case 3
  2103  0009E0  A4D8               	btfss	status,2,c
  2104                           
  2105                           ;RGBLedDisplay.c: 148: break;
  2106  0009E2  0012               	return	
  2107  0009E4  D7DE               	goto	l2330
  2108  0009E6                     __end_of_HeatProcessLedShow:
  2109                           	opt stack 0
  2110                           tblptru	equ	0xFF8
  2111                           intcon	equ	0xFF2
  2112                           postinc0	equ	0xFEE
  2113                           wreg	equ	0xFE8
  2114                           postinc2	equ	0xFDE
  2115                           postdec2	equ	0xFDD
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _GetAdcAD597Value *****************
  2121 ;; Defined at:
  2122 ;;		line 509 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  channelNumbe    1    wreg     unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  2127 ;;  temp            2   36[COMRAM] unsigned short 
  2128 ;;  i               1   38[COMRAM] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  2   31[COMRAM] unsigned short 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2138 ;;      Params:         2       0       0       0
  2139 ;;      Locals:         4       0       0       0
  2140 ;;      Temps:          2       0       0       0
  2141 ;;      Totals:         8       0       0       0
  2142 ;;Total ram usage:        8 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    3
  2145 ;; This function calls:
  2146 ;;		_AD_Converter
  2147 ;;		___lwdiv
  2148 ;; This function is called by:
  2149 ;;		_ProcessHeat
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text7
  2154  0008AA                     __ptext7:
  2155                           	opt stack 0
  2156  0008AA                     _GetAdcAD597Value:
  2157                           	opt stack 26
  2158                           
  2159                           ;incstack = 0
  2160                           ;GetAdcAD597Value@channelNumber stored from wreg
  2161  0008AA  6E24               	movwf	GetAdcAD597Value@channelNumber,c
  2162                           
  2163                           ;system.c: 511: uint8 i;
  2164                           ;system.c: 512: uint16 temp = 0 ;
  2165  0008AC  0E00               	movlw	0
  2166  0008AE  6E26               	movwf	GetAdcAD597Value@temp+1,c
  2167  0008B0  0E00               	movlw	0
  2168  0008B2  6E25               	movwf	GetAdcAD597Value@temp,c
  2169                           
  2170                           ;system.c: 515: for ( i=0; i< ( 10-1) ;i++)
  2171  0008B4  0E00               	movlw	0
  2172  0008B6  6E27               	movwf	GetAdcAD597Value@i,c
  2173  0008B8                     l2346:
  2174  0008B8  0E08               	movlw	8
  2175  0008BA  6427               	cpfsgt	GetAdcAD597Value@i,c
  2176  0008BC  D001               	goto	l2350
  2177  0008BE  D01E               	goto	l2356
  2178  0008C0                     l2350:
  2179                           
  2180                           ;system.c: 516: {
  2181                           ;system.c: 517: adcAD597Value[i] = adcAD597Value[i+1] ;
  2182  0008C0  5027               	movf	GetAdcAD597Value@i,w,c
  2183  0008C2  6E22               	movwf	??_GetAdcAD597Value& (0+255),c
  2184  0008C4  6A23               	clrf	(??_GetAdcAD597Value+1)& (0+255),c
  2185  0008C6  90D8               	bcf	status,0,c
  2186  0008C8  3622               	rlcf	??_GetAdcAD597Value,f,c
  2187  0008CA  3623               	rlcf	??_GetAdcAD597Value+1,f,c
  2188  0008CC  0E02               	movlw	2
  2189  0008CE  2622               	addwf	??_GetAdcAD597Value,f,c
  2190  0008D0  0E00               	movlw	0
  2191  0008D2  2223               	addwfc	??_GetAdcAD597Value+1,f,c
  2192  0008D4  0E80               	movlw	low _adcAD597Value
  2193  0008D6  2422               	addwf	??_GetAdcAD597Value,w,c
  2194  0008D8  6ED9               	movwf	fsr2l,c
  2195  0008DA  0E00               	movlw	high _adcAD597Value
  2196  0008DC  2023               	addwfc	??_GetAdcAD597Value+1,w,c
  2197  0008DE  6EDA               	movwf	fsr2h,c
  2198  0008E0  5027               	movf	GetAdcAD597Value@i,w,c
  2199  0008E2  0D02               	mullw	2
  2200  0008E4  0E80               	movlw	low _adcAD597Value
  2201  0008E6  24F3               	addwf	prodl,w,c
  2202  0008E8  6EE1               	movwf	fsr1l,c
  2203  0008EA  0E00               	movlw	high _adcAD597Value
  2204  0008EC  20F4               	addwfc	prodh,w,c
  2205  0008EE  6EE2               	movwf	fsr1h,c
  2206  0008F0  CFDE FFE6          	movff	postinc2,postinc1
  2207  0008F4  CFDD FFE5          	movff	postdec2,postdec1
  2208  0008F8  2A27               	incf	GetAdcAD597Value@i,f,c
  2209  0008FA  D7DE               	goto	l2346
  2210  0008FC                     l2356:
  2211                           
  2212                           ;system.c: 518: }
  2213                           ;system.c: 520: adcAD597Value[10-1] = AD_Converter( channelNumber ) ;
  2214  0008FC  5024               	movf	GetAdcAD597Value@channelNumber,w,c
  2215  0008FE  EC62  F005         	call	_AD_Converter
  2216  000902  C019  F092         	movff	?_AD_Converter,_adcAD597Value+18
  2217  000906  C01A  F093         	movff	?_AD_Converter+1,_adcAD597Value+19
  2218                           
  2219                           ;system.c: 522: for ( i=0 ;i<10 ;i++)
  2220  00090A  0E00               	movlw	0
  2221  00090C  6E27               	movwf	GetAdcAD597Value@i,c
  2222  00090E                     l2360:
  2223  00090E  0E09               	movlw	9
  2224  000910  6427               	cpfsgt	GetAdcAD597Value@i,c
  2225  000912  D001               	goto	l2364
  2226  000914  D00E               	goto	l2370
  2227  000916                     l2364:
  2228                           
  2229                           ;system.c: 523: {
  2230                           ;system.c: 524: temp += adcAD597Value[i] ;
  2231  000916  5027               	movf	GetAdcAD597Value@i,w,c
  2232  000918  0D02               	mullw	2
  2233  00091A  0E80               	movlw	low _adcAD597Value
  2234  00091C  24F3               	addwf	prodl,w,c
  2235  00091E  6ED9               	movwf	fsr2l,c
  2236  000920  0E00               	movlw	high _adcAD597Value
  2237  000922  20F4               	addwfc	prodh,w,c
  2238  000924  6EDA               	movwf	fsr2h,c
  2239  000926  50DE               	movf	postinc2,w,c
  2240  000928  2625               	addwf	GetAdcAD597Value@temp,f,c
  2241  00092A  50DD               	movf	postdec2,w,c
  2242  00092C  2226               	addwfc	GetAdcAD597Value@temp+1,f,c
  2243  00092E  2A27               	incf	GetAdcAD597Value@i,f,c
  2244  000930  D7EE               	goto	l2360
  2245  000932                     l2370:
  2246                           
  2247                           ;system.c: 525: }
  2248                           ;system.c: 527: return ( temp/10 );
  2249  000932  C025  F017         	movff	GetAdcAD597Value@temp,___lwdiv@dividend
  2250  000936  C026  F018         	movff	GetAdcAD597Value@temp+1,___lwdiv@dividend+1
  2251  00093A  0E00               	movlw	0
  2252  00093C  6E1A               	movwf	___lwdiv@divisor+1,c
  2253  00093E  0E0A               	movlw	10
  2254  000940  6E19               	movwf	___lwdiv@divisor,c
  2255  000942  ECF3  F004         	call	___lwdiv	;wreg free
  2256  000946  C017  F020         	movff	?___lwdiv,?_GetAdcAD597Value
  2257  00094A  C018  F021         	movff	?___lwdiv+1,?_GetAdcAD597Value+1
  2258  00094E  0012               	return	
  2259  000950                     __end_of_GetAdcAD597Value:
  2260                           	opt stack 0
  2261                           tblptru	equ	0xFF8
  2262                           prodh	equ	0xFF4
  2263                           prodl	equ	0xFF3
  2264                           intcon	equ	0xFF2
  2265                           postinc0	equ	0xFEE
  2266                           wreg	equ	0xFE8
  2267                           postinc1	equ	0xFE6
  2268                           postdec1	equ	0xFE5
  2269                           fsr1h	equ	0xFE2
  2270                           fsr1l	equ	0xFE1
  2271                           postinc2	equ	0xFDE
  2272                           postdec2	equ	0xFDD
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function _ProcessButton *****************
  2278 ;; Defined at:
  2279 ;;		line 42 in file "WAFR-01-C001 HD-debug.X/keyboard/keyboard.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  buttonPushPe    4   26[COMRAM] unsigned long 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      unsigned char 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2293 ;;      Params:         0       0       0       0
  2294 ;;      Locals:         4       0       0       0
  2295 ;;      Temps:          4       0       0       0
  2296 ;;      Totals:         8       0       0       0
  2297 ;;Total ram usage:        8 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    3
  2300 ;; This function calls:
  2301 ;;		_LevelTmpSetShow
  2302 ;; This function is called by:
  2303 ;;		_main
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text8
  2308  00068A                     __ptext8:
  2309                           	opt stack 0
  2310  00068A                     _ProcessButton:
  2311                           	opt stack 27
  2312                           
  2313                           ;keyboard.c: 44: uint32 buttonPushPeriod = 0 ;
  2314                           
  2315                           ;incstack = 0
  2316  00068A  0E00               	movlw	0
  2317  00068C  6E1B               	movwf	ProcessButton@buttonPushPeriod,c
  2318  00068E  0E00               	movlw	0
  2319  000690  6E1C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2320  000692  0E00               	movlw	0
  2321  000694  6E1D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2322  000696  0E00               	movlw	0
  2323  000698  6E1E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2324                           
  2325                           ;keyboard.c: 46: if ( flagS2KeyPushed )
  2326  00069A  5061               	movf	_flagS2KeyPushed,w,c
  2327  00069C  B4D8               	btfsc	status,2,c
  2328  00069E  D051               	goto	l2468
  2329                           
  2330                           ;keyboard.c: 47: {
  2331                           ;keyboard.c: 48: flagS2KeyPushed = 0 ;
  2332  0006A0  0E00               	movlw	0
  2333  0006A2  6E61               	movwf	_flagS2KeyPushed,c
  2334                           
  2335                           ;keyboard.c: 52: buttonPushPeriod = buttonPushTimeStop-buttonPushTimeStart ;
  2336  0006A4  C04D  F017         	movff	_buttonPushTimeStart,??_ProcessButton
  2337  0006A8  C04E  F018         	movff	_buttonPushTimeStart+1,??_ProcessButton+1
  2338  0006AC  C04F  F019         	movff	_buttonPushTimeStart+2,??_ProcessButton+2
  2339  0006B0  C050  F01A         	movff	_buttonPushTimeStart+3,??_ProcessButton+3
  2340  0006B4  1E17               	comf	??_ProcessButton,f,c
  2341  0006B6  1E18               	comf	??_ProcessButton+1,f,c
  2342  0006B8  1E19               	comf	??_ProcessButton+2,f,c
  2343  0006BA  1E1A               	comf	??_ProcessButton+3,f,c
  2344  0006BC  2A17               	incf	??_ProcessButton,f,c
  2345  0006BE  0E00               	movlw	0
  2346  0006C0  2218               	addwfc	??_ProcessButton+1,f,c
  2347  0006C2  2219               	addwfc	??_ProcessButton+2,f,c
  2348  0006C4  221A               	addwfc	??_ProcessButton+3,f,c
  2349  0006C6  5051               	movf	_buttonPushTimeStop,w,c
  2350  0006C8  2417               	addwf	??_ProcessButton,w,c
  2351  0006CA  6E1B               	movwf	ProcessButton@buttonPushPeriod,c
  2352  0006CC  5052               	movf	_buttonPushTimeStop+1,w,c
  2353  0006CE  2018               	addwfc	??_ProcessButton+1,w,c
  2354  0006D0  6E1C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2355  0006D2  5053               	movf	_buttonPushTimeStop+2,w,c
  2356  0006D4  2019               	addwfc	??_ProcessButton+2,w,c
  2357  0006D6  6E1D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2358  0006D8  5054               	movf	_buttonPushTimeStop+3,w,c
  2359  0006DA  201A               	addwfc	??_ProcessButton+3,w,c
  2360  0006DC  6E1E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2361                           
  2362                           ;keyboard.c: 57: if ( S2KeyPushTime < 12 )
  2363  0006DE  0E0C               	movlw	12
  2364  0006E0  605F               	cpfslt	_S2KeyPushTime,c
  2365  0006E2  D00B               	goto	l2438
  2366                           
  2367                           ;keyboard.c: 58: {
  2368                           ;keyboard.c: 60: levelTmpSetting ++ ;
  2369  0006E4  2A62               	incf	_levelTmpSetting,f,c
  2370                           
  2371                           ;keyboard.c: 61: if ( levelTmpSetting > 3 )
  2372  0006E6  0E03               	movlw	3
  2373  0006E8  6462               	cpfsgt	_levelTmpSetting,c
  2374  0006EA  D002               	goto	l474
  2375                           
  2376                           ;keyboard.c: 62: {
  2377                           ;keyboard.c: 63: levelTmpSetting = 1 ;
  2378  0006EC  0E01               	movlw	1
  2379  0006EE  6E62               	movwf	_levelTmpSetting,c
  2380  0006F0                     l474:
  2381                           
  2382                           ;keyboard.c: 64: }
  2383                           ;keyboard.c: 66: timerHalfSecond = 0 ;
  2384  0006F0  0E00               	movlw	0
  2385  0006F2  6E5E               	movwf	_timerHalfSecond+1,c
  2386  0006F4  0E00               	movlw	0
  2387  0006F6  6E5D               	movwf	_timerHalfSecond,c
  2388                           
  2389                           ;keyboard.c: 70: }
  2390  0006F8  D002               	goto	l2442
  2391  0006FA                     l2438:
  2392                           
  2393                           ;keyboard.c: 71: else
  2394                           ;keyboard.c: 72: {
  2395                           ;keyboard.c: 74: return ( 3 ) ;
  2396  0006FA  0E03               	movlw	3
  2397  0006FC  0012               	return	
  2398  0006FE                     l2442:
  2399                           
  2400                           ;keyboard.c: 75: }
  2401                           ;keyboard.c: 81: if( buttonPushPeriod < 50 )
  2402  0006FE  501E               	movf	ProcessButton@buttonPushPeriod+3,w,c
  2403  000700  101D               	iorwf	ProcessButton@buttonPushPeriod+2,w,c
  2404  000702  101C               	iorwf	ProcessButton@buttonPushPeriod+1,w,c
  2405  000704  E114               	bnz	l477
  2406  000706  0E32               	movlw	50
  2407  000708  5C1B               	subwf	ProcessButton@buttonPushPeriod,w,c
  2408  00070A  B0D8               	btfsc	status,0,c
  2409  00070C  D010               	goto	l477
  2410                           
  2411                           ;keyboard.c: 82: {
  2412                           ;keyboard.c: 86: levelTmpSetting -- ;
  2413  00070E  0662               	decf	_levelTmpSetting,f,c
  2414                           
  2415                           ;keyboard.c: 87: if (levelTmpSetting < 1 )
  2416  000710  5062               	movf	_levelTmpSetting,w,c
  2417  000712  A4D8               	btfss	status,2,c
  2418  000714  D002               	goto	l2450
  2419                           
  2420                           ;keyboard.c: 88: {
  2421                           ;keyboard.c: 89: levelTmpSetting = 3 ;
  2422  000716  0E03               	movlw	3
  2423  000718  6E62               	movwf	_levelTmpSetting,c
  2424  00071A                     l2450:
  2425                           
  2426                           ;keyboard.c: 90: }
  2427                           ;keyboard.c: 97: levelTmpSetting -- ;
  2428  00071A  0662               	decf	_levelTmpSetting,f,c
  2429                           
  2430                           ;keyboard.c: 98: if (levelTmpSetting < 1 )
  2431  00071C  5062               	movf	_levelTmpSetting,w,c
  2432  00071E  A4D8               	btfss	status,2,c
  2433  000720  D002               	goto	l2456
  2434                           
  2435                           ;keyboard.c: 99: {
  2436                           ;keyboard.c: 100: levelTmpSetting = 3 ;
  2437  000722  0E03               	movlw	3
  2438  000724  6E62               	movwf	_levelTmpSetting,c
  2439  000726                     l2456:
  2440                           
  2441                           ;keyboard.c: 101: }
  2442                           ;keyboard.c: 103: LevelTmpSetShow ();
  2443  000726  EC3F  F005         	call	_LevelTmpSetShow	;wreg free
  2444                           
  2445                           ;keyboard.c: 104: return ( 2 );
  2446  00072A  0E02               	movlw	2
  2447  00072C  0012               	return	
  2448  00072E                     l477:
  2449                           
  2450                           ;keyboard.c: 106: {
  2451                           ;keyboard.c: 107: buttonPushTimeStart = buttonPushTimeStop ;
  2452  00072E  C051  F04D         	movff	_buttonPushTimeStop,_buttonPushTimeStart
  2453  000732  C052  F04E         	movff	_buttonPushTimeStop+1,_buttonPushTimeStart+1
  2454  000736  C053  F04F         	movff	_buttonPushTimeStop+2,_buttonPushTimeStart+2
  2455  00073A  C054  F050         	movff	_buttonPushTimeStop+3,_buttonPushTimeStart+3
  2456                           
  2457                           ;keyboard.c: 113: return ( 1) ;
  2458  00073E  0E01               	movlw	1
  2459  000740  0012               	return	
  2460  000742                     l2468:
  2461                           
  2462                           ;keyboard.c: 114: }
  2463                           ;keyboard.c: 116: }
  2464                           ;keyboard.c: 118: return ( 0 );
  2465  000742  0E00               	movlw	0
  2466  000744  0012               	return	
  2467  000746                     __end_of_ProcessButton:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           prodh	equ	0xFF4
  2471                           prodl	equ	0xFF3
  2472                           intcon	equ	0xFF2
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postinc1	equ	0xFE6
  2476                           postdec1	equ	0xFE5
  2477                           fsr1h	equ	0xFE2
  2478                           fsr1l	equ	0xFE1
  2479                           postinc2	equ	0xFDE
  2480                           postdec2	equ	0xFDD
  2481                           fsr2h	equ	0xFDA
  2482                           fsr2l	equ	0xFD9
  2483                           status	equ	0xFD8
  2484                           
  2485 ;; *************** function _LevelTmpSetShow *****************
  2486 ;; Defined at:
  2487 ;;		line 32 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;		None               void
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2501 ;;      Params:         0       0       0       0
  2502 ;;      Locals:         0       0       0       0
  2503 ;;      Temps:          0       0       0       0
  2504 ;;      Totals:         0       0       0       0
  2505 ;;Total ram usage:        0 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    2
  2508 ;; This function calls:
  2509 ;;		_turnOffAllLed
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;;		_ProcessButton
  2513 ;;		_InitializeHardware
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text9
  2518  000A7E                     __ptext9:
  2519                           	opt stack 0
  2520  000A7E                     _LevelTmpSetShow:
  2521                           	opt stack 27
  2522                           
  2523                           ;RGBLedDisplay.c: 35: turnOffAllLed();
  2524                           
  2525                           ;incstack = 0
  2526  000A7E  EC0F  F006         	call	_turnOffAllLed	;wreg free
  2527                           
  2528                           ;RGBLedDisplay.c: 36: switch ( levelTmpSetting )
  2529  000A82  D015               	goto	l2288
  2530  000A84                     l415:
  2531                           
  2532                           ;RGBLedDisplay.c: 39: PORTCbits.RC0 = 1 ;
  2533  000A84  8082               	bsf	3970,0,c	;volatile
  2534                           
  2535                           ;RGBLedDisplay.c: 40: PORTCbits.RC1 = 1 ;
  2536  000A86  8282               	bsf	3970,1,c	;volatile
  2537                           
  2538                           ;RGBLedDisplay.c: 41: PORTCbits.RC2 = 1 ;
  2539  000A88  8482               	bsf	3970,2,c	;volatile
  2540                           
  2541                           ;RGBLedDisplay.c: 42: break;
  2542  000A8A  0012               	return	
  2543  000A8C                     l417:
  2544                           
  2545                           ;RGBLedDisplay.c: 44: PORTCbits.RC0 = 1 ;
  2546  000A8C  8082               	bsf	3970,0,c	;volatile
  2547                           
  2548                           ;RGBLedDisplay.c: 45: PORTCbits.RC1 = 1 ;
  2549  000A8E  8282               	bsf	3970,1,c	;volatile
  2550                           
  2551                           ;RGBLedDisplay.c: 46: PORTCbits.RC2 = 1 ;
  2552  000A90  8482               	bsf	3970,2,c	;volatile
  2553                           
  2554                           ;RGBLedDisplay.c: 47: PORTCbits.RC3 = 1 ;
  2555  000A92  8682               	bsf	3970,3,c	;volatile
  2556                           
  2557                           ;RGBLedDisplay.c: 48: PORTCbits.RC4 = 1 ;
  2558  000A94  8882               	bsf	3970,4,c	;volatile
  2559                           
  2560                           ;RGBLedDisplay.c: 49: PORTCbits.RC5 = 1 ;
  2561  000A96  8A82               	bsf	3970,5,c	;volatile
  2562                           
  2563                           ;RGBLedDisplay.c: 50: break;
  2564  000A98  0012               	return	
  2565  000A9A                     l418:
  2566                           
  2567                           ;RGBLedDisplay.c: 52: PORTCbits.RC0 = 1 ;
  2568  000A9A  8082               	bsf	3970,0,c	;volatile
  2569                           
  2570                           ;RGBLedDisplay.c: 53: PORTCbits.RC1 = 1 ;
  2571  000A9C  8282               	bsf	3970,1,c	;volatile
  2572                           
  2573                           ;RGBLedDisplay.c: 54: PORTCbits.RC2 = 1 ;
  2574  000A9E  8482               	bsf	3970,2,c	;volatile
  2575                           
  2576                           ;RGBLedDisplay.c: 55: PORTCbits.RC3 = 1 ;
  2577  000AA0  8682               	bsf	3970,3,c	;volatile
  2578                           
  2579                           ;RGBLedDisplay.c: 56: PORTCbits.RC4 = 1 ;
  2580  000AA2  8882               	bsf	3970,4,c	;volatile
  2581                           
  2582                           ;RGBLedDisplay.c: 57: PORTCbits.RC5 = 1 ;
  2583  000AA4  8A82               	bsf	3970,5,c	;volatile
  2584                           
  2585                           ;RGBLedDisplay.c: 58: PORTCbits.RC6 = 1 ;
  2586  000AA6  8C82               	bsf	3970,6,c	;volatile
  2587                           
  2588                           ;RGBLedDisplay.c: 59: PORTCbits.RC7 = 1 ;
  2589  000AA8  8E82               	bsf	3970,7,c	;volatile
  2590                           
  2591                           ;RGBLedDisplay.c: 60: PORTBbits.RB3 = 1 ;
  2592  000AAA  8681               	bsf	3969,3,c	;volatile
  2593                           
  2594                           ;RGBLedDisplay.c: 64: }
  2595                           
  2596                           ;RGBLedDisplay.c: 63: break;
  2597                           
  2598                           ;RGBLedDisplay.c: 62: default:
  2599                           
  2600                           ;RGBLedDisplay.c: 61: break;
  2601  000AAC  0012               	return	
  2602  000AAE                     l2288:
  2603  000AAE  5062               	movf	_levelTmpSetting,w,c
  2604                           
  2605                           ; Switch size 1, requested type "space"
  2606                           ; Number of cases is 3, Range of values is 1 to 3
  2607                           ; switch strategies available:
  2608                           ; Name         Instructions Cycles
  2609                           ; simple_byte           10     6 (average)
  2610                           ;	Chosen strategy is simple_byte
  2611  000AB0  0A01               	xorlw	1	; case 1
  2612  000AB2  B4D8               	btfsc	status,2,c
  2613  000AB4  D7E7               	goto	l415
  2614  000AB6  0A03               	xorlw	3	; case 2
  2615  000AB8  B4D8               	btfsc	status,2,c
  2616  000ABA  D7E8               	goto	l417
  2617  000ABC  0A01               	xorlw	1	; case 3
  2618  000ABE  A4D8               	btfss	status,2,c
  2619  000AC0  0012               	return	
  2620  000AC2  D7EB               	goto	l418
  2621  000AC4                     __end_of_LevelTmpSetShow:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           postinc1	equ	0xFE6
  2630                           postdec1	equ	0xFE5
  2631                           fsr1h	equ	0xFE2
  2632                           fsr1l	equ	0xFE1
  2633                           postinc2	equ	0xFDE
  2634                           postdec2	equ	0xFDD
  2635                           fsr2h	equ	0xFDA
  2636                           fsr2l	equ	0xFD9
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _turnOffAllLed *****************
  2640 ;; Defined at:
  2641 ;;		line 74 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;		None               void
  2648 ;; Registers used:
  2649 ;;		wreg, status,2
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2655 ;;      Params:         0       0       0       0
  2656 ;;      Locals:         0       0       0       0
  2657 ;;      Temps:          0       0       0       0
  2658 ;;      Totals:         0       0       0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_main
  2666 ;;		_ShutDownSystem
  2667 ;;		_ProcessHeat
  2668 ;;		_LevelTmpSetShow
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text10
  2673  000C1E                     __ptext10:
  2674                           	opt stack 0
  2675  000C1E                     _turnOffAllLed:
  2676                           	opt stack 29
  2677                           
  2678                           ;RGBLedDisplay.c: 77: PORTC = 0;
  2679                           
  2680                           ;incstack = 0
  2681  000C1E  0E00               	movlw	0
  2682  000C20  6E82               	movwf	3970,c	;volatile
  2683                           
  2684                           ;RGBLedDisplay.c: 78: PORTBbits.RB3 = 0;
  2685  000C22  9681               	bcf	3969,3,c	;volatile
  2686  000C24  0012               	return		;funcret
  2687  000C26                     __end_of_turnOffAllLed:
  2688                           	opt stack 0
  2689                           tblptru	equ	0xFF8
  2690                           prodh	equ	0xFF4
  2691                           prodl	equ	0xFF3
  2692                           intcon	equ	0xFF2
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           postinc1	equ	0xFE6
  2696                           postdec1	equ	0xFE5
  2697                           fsr1h	equ	0xFE2
  2698                           fsr1l	equ	0xFE1
  2699                           postinc2	equ	0xFDE
  2700                           postdec2	equ	0xFDD
  2701                           fsr2h	equ	0xFDA
  2702                           fsr2l	equ	0xFD9
  2703                           status	equ	0xFD8
  2704                           
  2705 ;; *************** function _InitializeTimer0 *****************
  2706 ;; Defined at:
  2707 ;;		line 113 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;		None               void
  2714 ;; Registers used:
  2715 ;;		wreg, status,2
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2721 ;;      Params:         0       0       0       0
  2722 ;;      Locals:         0       0       0       0
  2723 ;;      Temps:          0       0       0       0
  2724 ;;      Totals:         0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_main
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text11
  2736  000BF0                     __ptext11:
  2737                           	opt stack 0
  2738  000BF0                     _InitializeTimer0:
  2739                           	opt stack 29
  2740                           
  2741                           ;system.c: 115: T0CONbits.T08BIT = 0 ;
  2742                           
  2743                           ;incstack = 0
  2744  000BF0  9CD5               	bcf	4053,6,c	;volatile
  2745                           
  2746                           ;system.c: 116: T0CONbits.T0CS = 0 ;
  2747  000BF2  9AD5               	bcf	4053,5,c	;volatile
  2748                           
  2749                           ;system.c: 117: T0CONbits.PSA = 1 ;
  2750  000BF4  86D5               	bsf	4053,3,c	;volatile
  2751                           
  2752                           ;system.c: 119: TMR0H = (65536-40000)/256;
  2753  000BF6  0E63               	movlw	99
  2754  000BF8  6ED7               	movwf	4055,c	;volatile
  2755                           
  2756                           ;system.c: 120: TMR0L = (65536-40000)%256 ;
  2757  000BFA  0EC0               	movlw	192
  2758  000BFC  6ED6               	movwf	4054,c	;volatile
  2759                           
  2760                           ;system.c: 122: T0CONbits.TMR0ON = 1 ;
  2761  000BFE  8ED5               	bsf	4053,7,c	;volatile
  2762                           
  2763                           ;system.c: 125: INTCONbits.TMR0IF = 0 ;
  2764  000C00  94F2               	bcf	intcon,2,c	;volatile
  2765                           
  2766                           ;system.c: 126: INTCONbits.TMR0IE = 1;
  2767  000C02  8AF2               	bsf	intcon,5,c	;volatile
  2768                           
  2769                           ;system.c: 129: INTCONbits.PEIE = 1 ;
  2770  000C04  8CF2               	bsf	intcon,6,c	;volatile
  2771  000C06  0012               	return		;funcret
  2772  000C08                     __end_of_InitializeTimer0:
  2773                           	opt stack 0
  2774                           tblptru	equ	0xFF8
  2775                           prodh	equ	0xFF4
  2776                           prodl	equ	0xFF3
  2777                           intcon	equ	0xFF2
  2778                           postinc0	equ	0xFEE
  2779                           wreg	equ	0xFE8
  2780                           postinc1	equ	0xFE6
  2781                           postdec1	equ	0xFE5
  2782                           fsr1h	equ	0xFE2
  2783                           fsr1l	equ	0xFE1
  2784                           postinc2	equ	0xFDE
  2785                           postdec2	equ	0xFDD
  2786                           fsr2h	equ	0xFDA
  2787                           fsr2l	equ	0xFD9
  2788                           status	equ	0xFD8
  2789                           
  2790 ;; *************** function _InitializePinmux *****************
  2791 ;; Defined at:
  2792 ;;		line 67 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;		None               void
  2799 ;; Registers used:
  2800 ;;		None
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2806 ;;      Params:         0       0       0       0
  2807 ;;      Locals:         0       0       0       0
  2808 ;;      Temps:          0       0       0       0
  2809 ;;      Totals:         0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    1
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text12
  2821  000B68                     __ptext12:
  2822                           	opt stack 0
  2823  000B68                     _InitializePinmux:
  2824                           	opt stack 29
  2825                           
  2826                           ;system.c: 70: TRISCbits.TRISC0 = 0;
  2827                           
  2828                           ;incstack = 0
  2829  000B68  9094               	bcf	3988,0,c	;volatile
  2830                           
  2831                           ;system.c: 71: TRISCbits.TRISC1 = 0;
  2832  000B6A  9294               	bcf	3988,1,c	;volatile
  2833                           
  2834                           ;system.c: 72: TRISCbits.TRISC2 = 0;
  2835  000B6C  9494               	bcf	3988,2,c	;volatile
  2836                           
  2837                           ;system.c: 73: TRISCbits.TRISC3 = 0;
  2838  000B6E  9694               	bcf	3988,3,c	;volatile
  2839                           
  2840                           ;system.c: 74: TRISCbits.TRISC4 = 0;
  2841  000B70  9894               	bcf	3988,4,c	;volatile
  2842                           
  2843                           ;system.c: 75: TRISCbits.TRISC5 = 0;
  2844  000B72  9A94               	bcf	3988,5,c	;volatile
  2845                           
  2846                           ;system.c: 76: TRISCbits.TRISC6 = 0;
  2847  000B74  9C94               	bcf	3988,6,c	;volatile
  2848                           
  2849                           ;system.c: 77: TRISCbits.TRISC7 = 0;
  2850  000B76  9E94               	bcf	3988,7,c	;volatile
  2851                           
  2852                           ;system.c: 79: TRISBbits.TRISB3 = 0;
  2853  000B78  9693               	bcf	3987,3,c	;volatile
  2854                           
  2855                           ;system.c: 82: TRISAbits.TRISA0 = 1 ;
  2856  000B7A  8092               	bsf	3986,0,c	;volatile
  2857                           
  2858                           ;system.c: 85: TRISAbits.TRISA1 = 1;
  2859  000B7C  8292               	bsf	3986,1,c	;volatile
  2860                           
  2861                           ;system.c: 87: TRISAbits.TRISA2 = 1 ;
  2862  000B7E  8492               	bsf	3986,2,c	;volatile
  2863                           
  2864                           ;system.c: 88: TRISAbits.TRISA3 = 1 ;
  2865  000B80  8692               	bsf	3986,3,c	;volatile
  2866                           
  2867                           ;system.c: 91: TRISAbits.TRISA4 = 1;
  2868  000B82  8892               	bsf	3986,4,c	;volatile
  2869                           
  2870                           ;system.c: 94: TRISAbits.TRISA5 = 1;
  2871  000B84  8A92               	bsf	3986,5,c	;volatile
  2872                           
  2873                           ;system.c: 97: TRISBbits.TRISB0 = 1;
  2874  000B86  8093               	bsf	3987,0,c	;volatile
  2875                           
  2876                           ;system.c: 100: TRISBbits.TRISB1 = 0;
  2877  000B88  9293               	bcf	3987,1,c	;volatile
  2878                           
  2879                           ;system.c: 103: TRISBbits.TRISB2 = 0;
  2880  000B8A  9493               	bcf	3987,2,c	;volatile
  2881                           
  2882                           ;system.c: 106: TRISBbits.TRISB4 = 1;
  2883  000B8C  8893               	bsf	3987,4,c	;volatile
  2884  000B8E  0012               	return		;funcret
  2885  000B90                     __end_of_InitializePinmux:
  2886                           	opt stack 0
  2887                           tblptru	equ	0xFF8
  2888                           prodh	equ	0xFF4
  2889                           prodl	equ	0xFF3
  2890                           intcon	equ	0xFF2
  2891                           postinc0	equ	0xFEE
  2892                           wreg	equ	0xFE8
  2893                           postinc1	equ	0xFE6
  2894                           postdec1	equ	0xFE5
  2895                           fsr1h	equ	0xFE2
  2896                           fsr1l	equ	0xFE1
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _InitializeOscillator *****************
  2904 ;; Defined at:
  2905 ;;		line 28 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;		None               void
  2912 ;; Registers used:
  2913 ;;		None
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2919 ;;      Params:         0       0       0       0
  2920 ;;      Locals:         0       0       0       0
  2921 ;;      Temps:          0       0       0       0
  2922 ;;      Totals:         0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    1
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text13
  2934  000C36                     __ptext13:
  2935                           	opt stack 0
  2936  000C36                     _InitializeOscillator:
  2937                           	opt stack 29
  2938                           
  2939                           ;incstack = 0
  2940  000C36  0012               	return		;funcret
  2941  000C38                     __end_of_InitializeOscillator:
  2942                           	opt stack 0
  2943                           tblptru	equ	0xFF8
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           intcon	equ	0xFF2
  2947                           postinc0	equ	0xFEE
  2948                           wreg	equ	0xFE8
  2949                           postinc1	equ	0xFE6
  2950                           postdec1	equ	0xFE5
  2951                           fsr1h	equ	0xFE2
  2952                           fsr1l	equ	0xFE1
  2953                           postinc2	equ	0xFDE
  2954                           postdec2	equ	0xFDD
  2955                           fsr2h	equ	0xFDA
  2956                           fsr2l	equ	0xFD9
  2957                           status	equ	0xFD8
  2958                           
  2959 ;; *************** function _InitializeInterrupts *****************
  2960 ;; Defined at:
  2961 ;;		line 52 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;		None               void
  2968 ;; Registers used:
  2969 ;;		None
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2975 ;;      Params:         0       0       0       0
  2976 ;;      Locals:         0       0       0       0
  2977 ;;      Temps:          0       0       0       0
  2978 ;;      Totals:         0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_main
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text14
  2990  000C26                     __ptext14:
  2991                           	opt stack 0
  2992  000C26                     _InitializeInterrupts:
  2993                           	opt stack 29
  2994                           
  2995                           ;system.c: 55: INTCONbits.INT0IE = 1;
  2996                           
  2997                           ;incstack = 0
  2998  000C26  88F2               	bsf	intcon,4,c	;volatile
  2999                           
  3000                           ;system.c: 58: INTCONbits.TMR0IE = 1;
  3001  000C28  8AF2               	bsf	intcon,5,c	;volatile
  3002                           
  3003                           ;system.c: 61: INTCONbits.GIE = 1;
  3004  000C2A  8EF2               	bsf	intcon,7,c	;volatile
  3005  000C2C  0012               	return		;funcret
  3006  000C2E                     __end_of_InitializeInterrupts:
  3007                           	opt stack 0
  3008                           tblptru	equ	0xFF8
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           intcon	equ	0xFF2
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           postinc1	equ	0xFE6
  3015                           postdec1	equ	0xFE5
  3016                           fsr1h	equ	0xFE2
  3017                           fsr1l	equ	0xFE1
  3018                           postinc2	equ	0xFDE
  3019                           postdec2	equ	0xFDD
  3020                           fsr2h	equ	0xFDA
  3021                           fsr2l	equ	0xFD9
  3022                           status	equ	0xFD8
  3023                           
  3024 ;; *************** function _InitializeINT0 *****************
  3025 ;; Defined at:
  3026 ;;		line 169 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;		None               void
  3033 ;; Registers used:
  3034 ;;		None
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3040 ;;      Params:         0       0       0       0
  3041 ;;      Locals:         0       0       0       0
  3042 ;;      Temps:          0       0       0       0
  3043 ;;      Totals:         0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text15
  3055  000C2E                     __ptext15:
  3056                           	opt stack 0
  3057  000C2E                     _InitializeINT0:
  3058                           	opt stack 29
  3059                           
  3060                           ;system.c: 171: INTCON2bits.INTEDG0 = 0 ;
  3061                           
  3062                           ;incstack = 0
  3063  000C2E  9CF1               	bcf	intcon2,6,c	;volatile
  3064                           
  3065                           ;system.c: 172: INTCONbits.INT0IF = 0 ;
  3066  000C30  92F2               	bcf	intcon,1,c	;volatile
  3067                           
  3068                           ;system.c: 174: INTCONbits.INT0IE = 1 ;
  3069  000C32  88F2               	bsf	intcon,4,c	;volatile
  3070  000C34  0012               	return		;funcret
  3071  000C36                     __end_of_InitializeINT0:
  3072                           	opt stack 0
  3073                           tblptru	equ	0xFF8
  3074                           prodh	equ	0xFF4
  3075                           prodl	equ	0xFF3
  3076                           intcon	equ	0xFF2
  3077                           intcon2	equ	0xFF1
  3078                           postinc0	equ	0xFEE
  3079                           wreg	equ	0xFE8
  3080                           postinc1	equ	0xFE6
  3081                           postdec1	equ	0xFE5
  3082                           fsr1h	equ	0xFE2
  3083                           fsr1l	equ	0xFE1
  3084                           postinc2	equ	0xFDE
  3085                           postdec2	equ	0xFDD
  3086                           fsr2h	equ	0xFDA
  3087                           fsr2l	equ	0xFD9
  3088                           status	equ	0xFD8
  3089                           
  3090 ;; *************** function _InitializeAD *****************
  3091 ;; Defined at:
  3092 ;;		line 210 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;		None               void
  3099 ;; Registers used:
  3100 ;;		None
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3106 ;;      Params:         0       0       0       0
  3107 ;;      Locals:         0       0       0       0
  3108 ;;      Temps:          0       0       0       0
  3109 ;;      Totals:         0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text16
  3121  000BB6                     __ptext16:
  3122                           	opt stack 0
  3123  000BB6                     _InitializeAD:
  3124                           	opt stack 29
  3125                           
  3126                           ;system.c: 221: ADCON1bits.PCFG3 = 1;
  3127                           
  3128                           ;incstack = 0
  3129  000BB6  86C1               	bsf	4033,3,c	;volatile
  3130                           
  3131                           ;system.c: 222: ADCON1bits.PCFG2 = 0;
  3132  000BB8  94C1               	bcf	4033,2,c	;volatile
  3133                           
  3134                           ;system.c: 223: ADCON1bits.PCFG1 = 0;
  3135  000BBA  92C1               	bcf	4033,1,c	;volatile
  3136                           
  3137                           ;system.c: 224: ADCON1bits.PCFG0 = 1;
  3138  000BBC  80C1               	bsf	4033,0,c	;volatile
  3139                           
  3140                           ;system.c: 226: ADCON1bits.VCFG1 = 1 ;
  3141  000BBE  8AC1               	bsf	4033,5,c	;volatile
  3142                           
  3143                           ;system.c: 227: ADCON1bits.VCFG0 = 1 ;
  3144  000BC0  88C1               	bsf	4033,4,c	;volatile
  3145                           
  3146                           ;system.c: 238: ADCON2bits.ADCS2 = 0 ;
  3147  000BC2  94C0               	bcf	4032,2,c	;volatile
  3148                           
  3149                           ;system.c: 239: ADCON2bits.ADCS1 = 1 ;
  3150  000BC4  82C0               	bsf	4032,1,c	;volatile
  3151                           
  3152                           ;system.c: 240: ADCON2bits.ADCS0 = 0 ;
  3153  000BC6  90C0               	bcf	4032,0,c	;volatile
  3154                           
  3155                           ;system.c: 242: ADCON2bits.ADFM = 1 ;
  3156  000BC8  8EC0               	bsf	4032,7,c	;volatile
  3157                           
  3158                           ;system.c: 244: ADCON2bits.ACQT2 = 1;
  3159  000BCA  8AC0               	bsf	4032,5,c	;volatile
  3160                           
  3161                           ;system.c: 245: ADCON2bits.ACQT1 = 1;
  3162  000BCC  88C0               	bsf	4032,4,c	;volatile
  3163                           
  3164                           ;system.c: 246: ADCON2bits.ACQT0 = 0;
  3165  000BCE  96C0               	bcf	4032,3,c	;volatile
  3166                           
  3167                           ;system.c: 257: ADCON0bits.ADON = 1 ;
  3168  000BD0  80C2               	bsf	4034,0,c	;volatile
  3169  000BD2  0012               	return		;funcret
  3170  000BD4                     __end_of_InitializeAD:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           prodh	equ	0xFF4
  3174                           prodl	equ	0xFF3
  3175                           intcon	equ	0xFF2
  3176                           intcon2	equ	0xFF1
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           postinc1	equ	0xFE6
  3180                           postdec1	equ	0xFE5
  3181                           fsr1h	equ	0xFE2
  3182                           fsr1l	equ	0xFE1
  3183                           postinc2	equ	0xFDE
  3184                           postdec2	equ	0xFDD
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _GetAdcChargBatValue *****************
  3190 ;; Defined at:
  3191 ;;		line 542 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  channelNumbe    1    wreg     unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  3196 ;;  temp            2   36[COMRAM] unsigned short 
  3197 ;;  i               1   38[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  2   31[COMRAM] unsigned short 
  3200 ;; Registers used:
  3201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3207 ;;      Params:         2       0       0       0
  3208 ;;      Locals:         4       0       0       0
  3209 ;;      Temps:          2       0       0       0
  3210 ;;      Totals:         8       0       0       0
  3211 ;;Total ram usage:        8 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		_AD_Converter
  3216 ;;		___lwdiv
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text17
  3223  000746                     __ptext17:
  3224                           	opt stack 0
  3225  000746                     _GetAdcChargBatValue:
  3226                           	opt stack 27
  3227                           
  3228                           ;incstack = 0
  3229                           ;GetAdcChargBatValue@channelNumber stored from wreg
  3230  000746  6E24               	movwf	GetAdcChargBatValue@channelNumber,c
  3231                           
  3232                           ;system.c: 544: uint8 i;
  3233                           ;system.c: 545: uint16 temp = 0 ;
  3234  000748  0E00               	movlw	0
  3235  00074A  6E26               	movwf	GetAdcChargBatValue@temp+1,c
  3236  00074C  0E00               	movlw	0
  3237  00074E  6E25               	movwf	GetAdcChargBatValue@temp,c
  3238                           
  3239                           ;system.c: 546: for ( i=0; i< ( 10-1) ;i++)
  3240  000750  0E00               	movlw	0
  3241  000752  6E27               	movwf	GetAdcChargBatValue@i,c
  3242  000754                     l2566:
  3243  000754  0E08               	movlw	8
  3244  000756  6427               	cpfsgt	GetAdcChargBatValue@i,c
  3245  000758  D001               	goto	l2570
  3246  00075A  D01E               	goto	l2576
  3247  00075C                     l2570:
  3248                           
  3249                           ;system.c: 547: {
  3250                           ;system.c: 548: adcChargeStatValue[i] = adcChargeStatValue[i+1] ;
  3251  00075C  5027               	movf	GetAdcChargBatValue@i,w,c
  3252  00075E  6E22               	movwf	??_GetAdcChargBatValue& (0+255),c
  3253  000760  6A23               	clrf	(??_GetAdcChargBatValue+1)& (0+255),c
  3254  000762  90D8               	bcf	status,0,c
  3255  000764  3622               	rlcf	??_GetAdcChargBatValue,f,c
  3256  000766  3623               	rlcf	??_GetAdcChargBatValue+1,f,c
  3257  000768  0E02               	movlw	2
  3258  00076A  2622               	addwf	??_GetAdcChargBatValue,f,c
  3259  00076C  0E00               	movlw	0
  3260  00076E  2223               	addwfc	??_GetAdcChargBatValue+1,f,c
  3261  000770  0E94               	movlw	low _adcChargeStatValue
  3262  000772  2422               	addwf	??_GetAdcChargBatValue,w,c
  3263  000774  6ED9               	movwf	fsr2l,c
  3264  000776  0E00               	movlw	high _adcChargeStatValue
  3265  000778  2023               	addwfc	??_GetAdcChargBatValue+1,w,c
  3266  00077A  6EDA               	movwf	fsr2h,c
  3267  00077C  5027               	movf	GetAdcChargBatValue@i,w,c
  3268  00077E  0D02               	mullw	2
  3269  000780  0E94               	movlw	low _adcChargeStatValue
  3270  000782  24F3               	addwf	prodl,w,c
  3271  000784  6EE1               	movwf	fsr1l,c
  3272  000786  0E00               	movlw	high _adcChargeStatValue
  3273  000788  20F4               	addwfc	prodh,w,c
  3274  00078A  6EE2               	movwf	fsr1h,c
  3275  00078C  CFDE FFE6          	movff	postinc2,postinc1
  3276  000790  CFDD FFE5          	movff	postdec2,postdec1
  3277  000794  2A27               	incf	GetAdcChargBatValue@i,f,c
  3278  000796  D7DE               	goto	l2566
  3279  000798                     l2576:
  3280                           
  3281                           ;system.c: 549: }
  3282                           ;system.c: 551: adcChargeStatValue[10-1] = AD_Converter( channelNumber ) ;
  3283  000798  5024               	movf	GetAdcChargBatValue@channelNumber,w,c
  3284  00079A  EC62  F005         	call	_AD_Converter
  3285  00079E  C019  F0A6         	movff	?_AD_Converter,_adcChargeStatValue+18
  3286  0007A2  C01A  F0A7         	movff	?_AD_Converter+1,_adcChargeStatValue+19
  3287                           
  3288                           ;system.c: 553: for ( i=0 ;i<10 ;i++)
  3289  0007A6  0E00               	movlw	0
  3290  0007A8  6E27               	movwf	GetAdcChargBatValue@i,c
  3291  0007AA                     l2580:
  3292  0007AA  0E09               	movlw	9
  3293  0007AC  6427               	cpfsgt	GetAdcChargBatValue@i,c
  3294  0007AE  D001               	goto	l2584
  3295  0007B0  D014               	goto	l2590
  3296  0007B2                     l2584:
  3297                           
  3298                           ;system.c: 554: {
  3299                           ;system.c: 555: temp = temp + adcChargeStatValue[i] ;
  3300  0007B2  5027               	movf	GetAdcChargBatValue@i,w,c
  3301  0007B4  0D02               	mullw	2
  3302  0007B6  0E94               	movlw	low _adcChargeStatValue
  3303  0007B8  24F3               	addwf	prodl,w,c
  3304  0007BA  6ED9               	movwf	fsr2l,c
  3305  0007BC  0E00               	movlw	high _adcChargeStatValue
  3306  0007BE  20F4               	addwfc	prodh,w,c
  3307  0007C0  6EDA               	movwf	fsr2h,c
  3308  0007C2  CFDE F022          	movff	postinc2,??_GetAdcChargBatValue
  3309  0007C6  CFDD F023          	movff	postdec2,??_GetAdcChargBatValue+1
  3310  0007CA  5025               	movf	GetAdcChargBatValue@temp,w,c
  3311  0007CC  2422               	addwf	??_GetAdcChargBatValue,w,c
  3312  0007CE  6E25               	movwf	GetAdcChargBatValue@temp,c
  3313  0007D0  5026               	movf	GetAdcChargBatValue@temp+1,w,c
  3314  0007D2  2023               	addwfc	??_GetAdcChargBatValue+1,w,c
  3315  0007D4  6E26               	movwf	GetAdcChargBatValue@temp+1,c
  3316  0007D6  2A27               	incf	GetAdcChargBatValue@i,f,c
  3317  0007D8  D7E8               	goto	l2580
  3318  0007DA                     l2590:
  3319                           
  3320                           ;system.c: 556: }
  3321                           ;system.c: 558: return ( temp/10 );
  3322  0007DA  C025  F017         	movff	GetAdcChargBatValue@temp,___lwdiv@dividend
  3323  0007DE  C026  F018         	movff	GetAdcChargBatValue@temp+1,___lwdiv@dividend+1
  3324  0007E2  0E00               	movlw	0
  3325  0007E4  6E1A               	movwf	___lwdiv@divisor+1,c
  3326  0007E6  0E0A               	movlw	10
  3327  0007E8  6E19               	movwf	___lwdiv@divisor,c
  3328  0007EA  ECF3  F004         	call	___lwdiv	;wreg free
  3329  0007EE  C017  F020         	movff	?___lwdiv,?_GetAdcChargBatValue
  3330  0007F2  C018  F021         	movff	?___lwdiv+1,?_GetAdcChargBatValue+1
  3331  0007F6  0012               	return	
  3332  0007F8                     __end_of_GetAdcChargBatValue:
  3333                           	opt stack 0
  3334                           tblptru	equ	0xFF8
  3335                           prodh	equ	0xFF4
  3336                           prodl	equ	0xFF3
  3337                           intcon	equ	0xFF2
  3338                           intcon2	equ	0xFF1
  3339                           postinc0	equ	0xFEE
  3340                           wreg	equ	0xFE8
  3341                           postinc1	equ	0xFE6
  3342                           postdec1	equ	0xFE5
  3343                           fsr1h	equ	0xFE2
  3344                           fsr1l	equ	0xFE1
  3345                           postinc2	equ	0xFDE
  3346                           postdec2	equ	0xFDD
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _GetAdcBatValue *****************
  3352 ;; Defined at:
  3353 ;;		line 477 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  channelNumbe    1    wreg     unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  3358 ;;  temp            2   36[COMRAM] unsigned short 
  3359 ;;  i               1   38[COMRAM] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2   31[COMRAM] unsigned short 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3369 ;;      Params:         2       0       0       0
  3370 ;;      Locals:         4       0       0       0
  3371 ;;      Temps:          2       0       0       0
  3372 ;;      Totals:         8       0       0       0
  3373 ;;Total ram usage:        8 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    3
  3376 ;; This function calls:
  3377 ;;		_AD_Converter
  3378 ;;		___lwdiv
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text18
  3385  0007F8                     __ptext18:
  3386                           	opt stack 0
  3387  0007F8                     _GetAdcBatValue:
  3388                           	opt stack 27
  3389                           
  3390                           ;incstack = 0
  3391                           ;GetAdcBatValue@channelNumber stored from wreg
  3392  0007F8  6E24               	movwf	GetAdcBatValue@channelNumber,c
  3393                           
  3394                           ;system.c: 479: uint8 i;
  3395                           ;system.c: 480: uint16 temp = 0 ;
  3396  0007FA  0E00               	movlw	0
  3397  0007FC  6E26               	movwf	GetAdcBatValue@temp+1,c
  3398  0007FE  0E00               	movlw	0
  3399  000800  6E25               	movwf	GetAdcBatValue@temp,c
  3400                           
  3401                           ;system.c: 481: for ( i=0; i< ( 10-1) ;i++)
  3402  000802  0E00               	movlw	0
  3403  000804  6E27               	movwf	GetAdcBatValue@i,c
  3404  000806                     l2396:
  3405  000806  0E08               	movlw	8
  3406  000808  6427               	cpfsgt	GetAdcBatValue@i,c
  3407  00080A  D001               	goto	l2400
  3408  00080C  D01E               	goto	l2406
  3409  00080E                     l2400:
  3410                           
  3411                           ;system.c: 482: {
  3412                           ;system.c: 483: adcBatValue[i] = adcBatValue[i+1] ;
  3413  00080E  5027               	movf	GetAdcBatValue@i,w,c
  3414  000810  6E22               	movwf	??_GetAdcBatValue& (0+255),c
  3415  000812  6A23               	clrf	(??_GetAdcBatValue+1)& (0+255),c
  3416  000814  90D8               	bcf	status,0,c
  3417  000816  3622               	rlcf	??_GetAdcBatValue,f,c
  3418  000818  3623               	rlcf	??_GetAdcBatValue+1,f,c
  3419  00081A  0E02               	movlw	2
  3420  00081C  2622               	addwf	??_GetAdcBatValue,f,c
  3421  00081E  0E00               	movlw	0
  3422  000820  2223               	addwfc	??_GetAdcBatValue+1,f,c
  3423  000822  0E39               	movlw	low _adcBatValue
  3424  000824  2422               	addwf	??_GetAdcBatValue,w,c
  3425  000826  6ED9               	movwf	fsr2l,c
  3426  000828  0E00               	movlw	high _adcBatValue
  3427  00082A  2023               	addwfc	??_GetAdcBatValue+1,w,c
  3428  00082C  6EDA               	movwf	fsr2h,c
  3429  00082E  5027               	movf	GetAdcBatValue@i,w,c
  3430  000830  0D02               	mullw	2
  3431  000832  0E39               	movlw	low _adcBatValue
  3432  000834  24F3               	addwf	prodl,w,c
  3433  000836  6EE1               	movwf	fsr1l,c
  3434  000838  0E00               	movlw	high _adcBatValue
  3435  00083A  20F4               	addwfc	prodh,w,c
  3436  00083C  6EE2               	movwf	fsr1h,c
  3437  00083E  CFDE FFE6          	movff	postinc2,postinc1
  3438  000842  CFDD FFE5          	movff	postdec2,postdec1
  3439  000846  2A27               	incf	GetAdcBatValue@i,f,c
  3440  000848  D7DE               	goto	l2396
  3441  00084A                     l2406:
  3442                           
  3443                           ;system.c: 484: }
  3444                           ;system.c: 486: adcBatValue[10-1] = AD_Converter( channelNumber ) ;
  3445  00084A  5024               	movf	GetAdcBatValue@channelNumber,w,c
  3446  00084C  EC62  F005         	call	_AD_Converter
  3447  000850  C019  F04B         	movff	?_AD_Converter,_adcBatValue+18
  3448  000854  C01A  F04C         	movff	?_AD_Converter+1,_adcBatValue+19
  3449                           
  3450                           ;system.c: 488: for ( i=0 ;i<10 ;i++)
  3451  000858  0E00               	movlw	0
  3452  00085A  6E27               	movwf	GetAdcBatValue@i,c
  3453  00085C                     l2410:
  3454  00085C  0E09               	movlw	9
  3455  00085E  6427               	cpfsgt	GetAdcBatValue@i,c
  3456  000860  D001               	goto	l2414
  3457  000862  D014               	goto	l2420
  3458  000864                     l2414:
  3459                           
  3460                           ;system.c: 489: {
  3461                           ;system.c: 490: temp = temp + adcBatValue[i] ;
  3462  000864  5027               	movf	GetAdcBatValue@i,w,c
  3463  000866  0D02               	mullw	2
  3464  000868  0E39               	movlw	low _adcBatValue
  3465  00086A  24F3               	addwf	prodl,w,c
  3466  00086C  6ED9               	movwf	fsr2l,c
  3467  00086E  0E00               	movlw	high _adcBatValue
  3468  000870  20F4               	addwfc	prodh,w,c
  3469  000872  6EDA               	movwf	fsr2h,c
  3470  000874  CFDE F022          	movff	postinc2,??_GetAdcBatValue
  3471  000878  CFDD F023          	movff	postdec2,??_GetAdcBatValue+1
  3472  00087C  5025               	movf	GetAdcBatValue@temp,w,c
  3473  00087E  2422               	addwf	??_GetAdcBatValue,w,c
  3474  000880  6E25               	movwf	GetAdcBatValue@temp,c
  3475  000882  5026               	movf	GetAdcBatValue@temp+1,w,c
  3476  000884  2023               	addwfc	??_GetAdcBatValue+1,w,c
  3477  000886  6E26               	movwf	GetAdcBatValue@temp+1,c
  3478  000888  2A27               	incf	GetAdcBatValue@i,f,c
  3479  00088A  D7E8               	goto	l2410
  3480  00088C                     l2420:
  3481                           
  3482                           ;system.c: 491: }
  3483                           ;system.c: 493: return ( temp/10 );
  3484  00088C  C025  F017         	movff	GetAdcBatValue@temp,___lwdiv@dividend
  3485  000890  C026  F018         	movff	GetAdcBatValue@temp+1,___lwdiv@dividend+1
  3486  000894  0E00               	movlw	0
  3487  000896  6E1A               	movwf	___lwdiv@divisor+1,c
  3488  000898  0E0A               	movlw	10
  3489  00089A  6E19               	movwf	___lwdiv@divisor,c
  3490  00089C  ECF3  F004         	call	___lwdiv	;wreg free
  3491  0008A0  C017  F020         	movff	?___lwdiv,?_GetAdcBatValue
  3492  0008A4  C018  F021         	movff	?___lwdiv+1,?_GetAdcBatValue+1
  3493  0008A8  0012               	return	
  3494  0008AA                     __end_of_GetAdcBatValue:
  3495                           	opt stack 0
  3496                           tblptru	equ	0xFF8
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           intcon2	equ	0xFF1
  3501                           postinc0	equ	0xFEE
  3502                           wreg	equ	0xFE8
  3503                           postinc1	equ	0xFE6
  3504                           postdec1	equ	0xFE5
  3505                           fsr1h	equ	0xFE2
  3506                           fsr1l	equ	0xFE1
  3507                           postinc2	equ	0xFDE
  3508                           postdec2	equ	0xFDD
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function ___lwdiv *****************
  3514 ;; Defined at:
  3515 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  dividend        2   22[COMRAM] unsigned int 
  3518 ;;  divisor         2   24[COMRAM] unsigned int 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  quotient        2   27[COMRAM] unsigned int 
  3521 ;;  counter         1   26[COMRAM] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2   22[COMRAM] unsigned int 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3531 ;;      Params:         4       0       0       0
  3532 ;;      Locals:         3       0       0       0
  3533 ;;      Temps:          0       0       0       0
  3534 ;;      Totals:         7       0       0       0
  3535 ;;Total ram usage:        7 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    1
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_GetAdcBatValue
  3542 ;;		_GetAdcAD597Value
  3543 ;;		_GetAdcChargBatValue
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text19
  3548  0009E6                     __ptext19:
  3549                           	opt stack 0
  3550  0009E6                     ___lwdiv:
  3551                           	opt stack 27
  3552                           
  3553                           ;incstack = 0
  3554  0009E6  0E00               	movlw	0
  3555  0009E8  6E1D               	movwf	___lwdiv@quotient+1,c
  3556  0009EA  0E00               	movlw	0
  3557  0009EC  6E1C               	movwf	___lwdiv@quotient,c
  3558  0009EE  5019               	movf	___lwdiv@divisor,w,c
  3559  0009F0  101A               	iorwf	___lwdiv@divisor+1,w,c
  3560  0009F2  B4D8               	btfsc	status,2,c
  3561  0009F4  D01C               	goto	l883
  3562  0009F6  0E01               	movlw	1
  3563  0009F8  6E1B               	movwf	___lwdiv@counter,c
  3564  0009FA  D004               	goto	l2246
  3565  0009FC                     l2244:
  3566  0009FC  90D8               	bcf	status,0,c
  3567  0009FE  3619               	rlcf	___lwdiv@divisor,f,c
  3568  000A00  361A               	rlcf	___lwdiv@divisor+1,f,c
  3569  000A02  2A1B               	incf	___lwdiv@counter,f,c
  3570  000A04                     l2246:
  3571  000A04  AE1A               	btfss	___lwdiv@divisor+1,7,c
  3572  000A06  D7FA               	goto	l2244
  3573  000A08                     l2248:
  3574  000A08  90D8               	bcf	status,0,c
  3575  000A0A  361C               	rlcf	___lwdiv@quotient,f,c
  3576  000A0C  361D               	rlcf	___lwdiv@quotient+1,f,c
  3577  000A0E  5019               	movf	___lwdiv@divisor,w,c
  3578  000A10  5C17               	subwf	___lwdiv@dividend,w,c
  3579  000A12  501A               	movf	___lwdiv@divisor+1,w,c
  3580  000A14  5818               	subwfb	___lwdiv@dividend+1,w,c
  3581  000A16  A0D8               	btfss	status,0,c
  3582  000A18  D005               	goto	l2256
  3583  000A1A  5019               	movf	___lwdiv@divisor,w,c
  3584  000A1C  5E17               	subwf	___lwdiv@dividend,f,c
  3585  000A1E  501A               	movf	___lwdiv@divisor+1,w,c
  3586  000A20  5A18               	subwfb	___lwdiv@dividend+1,f,c
  3587  000A22  801C               	bsf	___lwdiv@quotient,0,c
  3588  000A24                     l2256:
  3589  000A24  90D8               	bcf	status,0,c
  3590  000A26  321A               	rrcf	___lwdiv@divisor+1,f,c
  3591  000A28  3219               	rrcf	___lwdiv@divisor,f,c
  3592  000A2A  2E1B               	decfsz	___lwdiv@counter,f,c
  3593  000A2C  D7ED               	goto	l2248
  3594  000A2E                     l883:
  3595  000A2E  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
  3596  000A32  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3597  000A36  0012               	return		;funcret
  3598  000A38                     __end_of___lwdiv:
  3599                           	opt stack 0
  3600                           tblptru	equ	0xFF8
  3601                           prodh	equ	0xFF4
  3602                           prodl	equ	0xFF3
  3603                           intcon	equ	0xFF2
  3604                           intcon2	equ	0xFF1
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           postinc1	equ	0xFE6
  3608                           postdec1	equ	0xFE5
  3609                           fsr1h	equ	0xFE2
  3610                           fsr1l	equ	0xFE1
  3611                           postinc2	equ	0xFDE
  3612                           postdec2	equ	0xFDD
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function _AD_Converter *****************
  3618 ;; Defined at:
  3619 ;;		line 268 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  channelNumbe    1    wreg     char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  channelNumbe    1   28[COMRAM] char 
  3624 ;;  AD_Result       2   29[COMRAM] unsigned short 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  2   24[COMRAM] unsigned short 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3634 ;;      Params:         2       0       0       0
  3635 ;;      Locals:         3       0       0       0
  3636 ;;      Temps:          2       0       0       0
  3637 ;;      Totals:         7       0       0       0
  3638 ;;Total ram usage:        7 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    2
  3641 ;; This function calls:
  3642 ;;		_delay_10us
  3643 ;; This function is called by:
  3644 ;;		_GetAdcBatValue
  3645 ;;		_GetAdcAD597Value
  3646 ;;		_GetAdcChargBatValue
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text20
  3651  000AC4                     __ptext20:
  3652                           	opt stack 0
  3653  000AC4                     _AD_Converter:
  3654                           	opt stack 26
  3655                           
  3656                           ;incstack = 0
  3657                           ;AD_Converter@channelNumber stored from wreg
  3658  000AC4  6E1D               	movwf	AD_Converter@channelNumber,c
  3659                           
  3660                           ;system.c: 270: uint16 AD_Result ;
  3661                           ;system.c: 280: ADCON0 = ((channelNumber & 0x07) << 2) | 0x01;
  3662  000AC6  C01D  F01B         	movff	AD_Converter@channelNumber,??_AD_Converter
  3663  000ACA  0E07               	movlw	7
  3664  000ACC  161B               	andwf	??_AD_Converter,f,c
  3665  000ACE  90D8               	bcf	status,0,c
  3666  000AD0  361B               	rlcf	??_AD_Converter,f,c
  3667  000AD2  90D8               	bcf	status,0,c
  3668  000AD4  341B               	rlcf	??_AD_Converter,w,c
  3669  000AD6  0901               	iorlw	1
  3670  000AD8  6EC2               	movwf	4034,c	;volatile
  3671                           
  3672                           ;system.c: 285: delay_10us() ;
  3673  000ADA  ECEA  F005         	call	_delay_10us	;wreg free
  3674                           
  3675                           ;system.c: 286: delay_10us() ;
  3676  000ADE  ECEA  F005         	call	_delay_10us	;wreg free
  3677                           
  3678                           ;system.c: 288: ADCON0bits.GO = 1;
  3679  000AE2  82C2               	bsf	4034,1,c	;volatile
  3680  000AE4                     l232:
  3681  000AE4  B2C2               	btfsc	4034,1,c	;volatile
  3682  000AE6  D7FE               	goto	l232
  3683                           
  3684                           ;system.c: 292: PIR1bits.ADIF = 0 ;
  3685  000AE8  9C9E               	bcf	3998,6,c	;volatile
  3686                           
  3687                           ;system.c: 294: AD_Result =( ADRESH << 8 ) | ADRESL ;
  3688  000AEA  50C3               	movf	4035,w,c	;volatile
  3689  000AEC  CFC4 F01B          	movff	4036,??_AD_Converter	;volatile
  3690  000AF0  6A1C               	clrf	(??_AD_Converter+1)& (0+255),c
  3691  000AF2  C01B  F01C         	movff	??_AD_Converter,??_AD_Converter+1
  3692  000AF6  6A1B               	clrf	??_AD_Converter,c
  3693  000AF8  101B               	iorwf	??_AD_Converter,w,c
  3694  000AFA  6E1E               	movwf	AD_Converter@AD_Result,c
  3695  000AFC  501C               	movf	??_AD_Converter+1,w,c
  3696  000AFE  6E1F               	movwf	AD_Converter@AD_Result+1,c
  3697                           
  3698                           ;system.c: 296: return (AD_Result);
  3699  000B00  C01E  F019         	movff	AD_Converter@AD_Result,?_AD_Converter
  3700  000B04  C01F  F01A         	movff	AD_Converter@AD_Result+1,?_AD_Converter+1
  3701  000B08  0012               	return	
  3702  000B0A                     __end_of_AD_Converter:
  3703                           	opt stack 0
  3704                           tblptru	equ	0xFF8
  3705                           prodh	equ	0xFF4
  3706                           prodl	equ	0xFF3
  3707                           intcon	equ	0xFF2
  3708                           intcon2	equ	0xFF1
  3709                           postinc0	equ	0xFEE
  3710                           wreg	equ	0xFE8
  3711                           postinc1	equ	0xFE6
  3712                           postdec1	equ	0xFE5
  3713                           fsr1h	equ	0xFE2
  3714                           fsr1l	equ	0xFE1
  3715                           postinc2	equ	0xFDE
  3716                           postdec2	equ	0xFDD
  3717                           fsr2h	equ	0xFDA
  3718                           fsr2l	equ	0xFD9
  3719                           status	equ	0xFD8
  3720                           
  3721 ;; *************** function _delay_10us *****************
  3722 ;; Defined at:
  3723 ;;		line 54 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  i               2   22[COMRAM] unsigned int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;		None               void
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3737 ;;      Params:         0       0       0       0
  3738 ;;      Locals:         2       0       0       0
  3739 ;;      Temps:          0       0       0       0
  3740 ;;      Totals:         2       0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    1
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_AD_Converter
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text21
  3752  000BD4                     __ptext21:
  3753                           	opt stack 0
  3754  000BD4                     _delay_10us:
  3755                           	opt stack 26
  3756                           
  3757                           ;user.c: 56: unsigned int i;
  3758                           ;user.c: 57: for (i=0; i<4; i++);
  3759                           
  3760                           ;incstack = 0
  3761  000BD4  0E00               	movlw	0
  3762  000BD6  6E18               	movwf	delay_10us@i+1,c
  3763  000BD8  0E00               	movlw	0
  3764  000BDA  6E17               	movwf	delay_10us@i,c
  3765  000BDC                     l2212:
  3766  000BDC  5018               	movf	delay_10us@i+1,w,c
  3767  000BDE  E107               	bnz	l135
  3768  000BE0  0E04               	movlw	4
  3769  000BE2  5C17               	subwf	delay_10us@i,w,c
  3770  000BE4  B0D8               	btfsc	status,0,c
  3771  000BE6  0012               	return	
  3772  000BE8  4A17               	infsnz	delay_10us@i,f,c
  3773  000BEA  2A18               	incf	delay_10us@i+1,f,c
  3774  000BEC  D7F7               	goto	l2212
  3775  000BEE                     l135:
  3776  000BEE  0012               	return		;funcret
  3777  000BF0                     __end_of_delay_10us:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           intcon2	equ	0xFF1
  3784                           postinc0	equ	0xFEE
  3785                           wreg	equ	0xFE8
  3786                           postinc1	equ	0xFE6
  3787                           postdec1	equ	0xFE5
  3788                           fsr1h	equ	0xFE2
  3789                           fsr1l	equ	0xFE1
  3790                           postinc2	equ	0xFDE
  3791                           postdec2	equ	0xFDD
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8
  3795                           
  3796 ;; *************** function _ISR *****************
  3797 ;; Defined at:
  3798 ;;		line 22 in file "WAFR-01-C001 HD-debug.X/interrupts/interrupts.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;		None               void
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3812 ;;      Params:         0       0       0       0
  3813 ;;      Locals:         0       0       0       0
  3814 ;;      Temps:         22       0       0       0
  3815 ;;      Totals:        22       0       0       0
  3816 ;;Total ram usage:       22 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		Interrupt level 2
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	intcode
  3826  000008                     __pintcode:
  3827                           	opt stack 0
  3828  000008                     _ISR:
  3829                           	opt stack 26
  3830                           
  3831                           ;incstack = 0
  3832  000008  8265               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3833  00000A  CFFA F009          	movff	pclath,??_ISR+8
  3834  00000E  CFFB F00A          	movff	pclatu,??_ISR+9
  3835  000012  EDB1  F002         	call	int_func,f	;refresh shadow registers
  3836                           pclatu	equ	0xFFB
  3837                           pclath	equ	0xFFA
  3838                           tblptru	equ	0xFF8
  3839                           prodh	equ	0xFF4
  3840                           prodl	equ	0xFF3
  3841                           intcon	equ	0xFF2
  3842                           intcon2	equ	0xFF1
  3843                           postinc0	equ	0xFEE
  3844                           wreg	equ	0xFE8
  3845                           postinc1	equ	0xFE6
  3846                           postdec1	equ	0xFE5
  3847                           fsr1h	equ	0xFE2
  3848                           fsr1l	equ	0xFE1
  3849                           postinc2	equ	0xFDE
  3850                           postdec2	equ	0xFDD
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855                           	psect	intcode_body
  3856  000562                     __pintcode_body:
  3857                           	opt stack 26
  3858  000562                     int_func:
  3859                           	opt stack 26
  3860  000562  0006               	pop		; remove dummy address from shadow register refresh
  3861  000564  CFE9 F00B          	movff	fsr0l,??_ISR+10
  3862  000568  CFEA F00C          	movff	fsr0h,??_ISR+11
  3863  00056C  CFE1 F00D          	movff	fsr1l,??_ISR+12
  3864  000570  CFE2 F00E          	movff	fsr1h,??_ISR+13
  3865  000574  CFD9 F00F          	movff	fsr2l,??_ISR+14
  3866  000578  CFDA F010          	movff	fsr2h,??_ISR+15
  3867  00057C  CFF3 F011          	movff	prodl,??_ISR+16
  3868  000580  CFF4 F012          	movff	prodh,??_ISR+17
  3869  000584  CFF6 F013          	movff	tblptrl,??_ISR+18
  3870  000588  CFF7 F014          	movff	tblptrh,??_ISR+19
  3871  00058C  CFF8 F015          	movff	tblptru,??_ISR+20
  3872  000590  CFF5 F016          	movff	tablat,??_ISR+21
  3873                           
  3874                           ;interrupts.c: 26: if ( INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  3875  000594  BAF2               	btfsc	intcon,5,c	;volatile
  3876  000596  A4F2               	btfss	intcon,2,c	;volatile
  3877  000598  D014               	goto	i2l1644
  3878                           
  3879                           ;interrupts.c: 27: {
  3880                           ;interrupts.c: 28: INTCONbits.TMR0IF = 0;
  3881  00059A  94F2               	bcf	intcon,2,c	;volatile
  3882                           
  3883                           ;interrupts.c: 29: timer0Count++ ;
  3884  00059C  2A63               	incf	_timer0Count,f,c
  3885                           
  3886                           ;interrupts.c: 30: timeSystemRun++ ;
  3887  00059E  0E01               	movlw	1
  3888  0005A0  2659               	addwf	_timeSystemRun,f,c
  3889  0005A2  0E00               	movlw	0
  3890  0005A4  225A               	addwfc	_timeSystemRun+1,f,c
  3891  0005A6  225B               	addwfc	_timeSystemRun+2,f,c
  3892  0005A8  225C               	addwfc	_timeSystemRun+3,f,c
  3893                           
  3894                           ;interrupts.c: 32: if (timer0Count == 50)
  3895  0005AA  0E32               	movlw	50
  3896  0005AC  1863               	xorwf	_timer0Count,w,c
  3897  0005AE  A4D8               	btfss	status,2,c
  3898  0005B0  D004               	goto	i2l1640
  3899                           
  3900                           ;interrupts.c: 33: {
  3901                           ;interrupts.c: 34: timer0Count = 0 ;
  3902  0005B2  0E00               	movlw	0
  3903  0005B4  6E63               	movwf	_timer0Count,c
  3904                           
  3905                           ;interrupts.c: 35: timerHalfSecond ++ ;
  3906  0005B6  4A5D               	infsnz	_timerHalfSecond,f,c
  3907  0005B8  2A5E               	incf	_timerHalfSecond+1,f,c
  3908  0005BA                     i2l1640:
  3909                           
  3910                           ;interrupts.c: 36: }
  3911                           ;interrupts.c: 38: TMR0H = (65536-40000)/256;
  3912  0005BA  0E63               	movlw	99
  3913  0005BC  6ED7               	movwf	4055,c	;volatile
  3914                           
  3915                           ;interrupts.c: 39: TMR0L = (65536-40000)%256 ;
  3916  0005BE  0EC0               	movlw	192
  3917  0005C0  6ED6               	movwf	4054,c	;volatile
  3918  0005C2                     i2l1644:
  3919                           
  3920                           ;interrupts.c: 40: }
  3921                           ;interrupts.c: 44: if ( INTCONbits.INT0IF && INTCONbits.INT0IE )
  3922  0005C2  B2F2               	btfsc	intcon,1,c	;volatile
  3923  0005C4  A8F2               	btfss	intcon,4,c	;volatile
  3924  0005C6  D043               	goto	i2l333
  3925                           
  3926                           ;interrupts.c: 45: {
  3927                           ;interrupts.c: 46: INTCONbits.INT0IF = 0 ;
  3928  0005C8  92F2               	bcf	intcon,1,c	;volatile
  3929                           
  3930                           ;interrupts.c: 49: if ( (timeSystemRun - pushButtonJitterTime) < 2 ){
  3931  0005CA  C055  F001         	movff	_pushButtonJitterTime,??_ISR
  3932  0005CE  C056  F002         	movff	_pushButtonJitterTime+1,??_ISR+1
  3933  0005D2  C057  F003         	movff	_pushButtonJitterTime+2,??_ISR+2
  3934  0005D6  C058  F004         	movff	_pushButtonJitterTime+3,??_ISR+3
  3935  0005DA  1E01               	comf	??_ISR,f,c
  3936  0005DC  1E02               	comf	??_ISR+1,f,c
  3937  0005DE  1E03               	comf	??_ISR+2,f,c
  3938  0005E0  1E04               	comf	??_ISR+3,f,c
  3939  0005E2  2A01               	incf	??_ISR,f,c
  3940  0005E4  0E00               	movlw	0
  3941  0005E6  2202               	addwfc	??_ISR+1,f,c
  3942  0005E8  2203               	addwfc	??_ISR+2,f,c
  3943  0005EA  2204               	addwfc	??_ISR+3,f,c
  3944  0005EC  5059               	movf	_timeSystemRun,w,c
  3945  0005EE  2401               	addwf	??_ISR,w,c
  3946  0005F0  6E05               	movwf	(??_ISR+4)& (0+255),c
  3947  0005F2  505A               	movf	_timeSystemRun+1,w,c
  3948  0005F4  2002               	addwfc	??_ISR+1,w,c
  3949  0005F6  6E06               	movwf	(??_ISR+5)& (0+255),c
  3950  0005F8  505B               	movf	_timeSystemRun+2,w,c
  3951  0005FA  2003               	addwfc	??_ISR+2,w,c
  3952  0005FC  6E07               	movwf	(??_ISR+6)& (0+255),c
  3953  0005FE  505C               	movf	_timeSystemRun+3,w,c
  3954  000600  2004               	addwfc	??_ISR+3,w,c
  3955  000602  6E08               	movwf	(??_ISR+7)& (0+255),c
  3956  000604  5008               	movf	??_ISR+7,w,c
  3957  000606  1007               	iorwf	??_ISR+6,w,c
  3958  000608  1006               	iorwf	??_ISR+5,w,c
  3959  00060A  E104               	bnz	i2l329
  3960  00060C  0E02               	movlw	2
  3961  00060E  5C05               	subwf	??_ISR+4,w,c
  3962  000610  A0D8               	btfss	status,0,c
  3963  000612  D01D               	goto	i2l333
  3964  000614                     i2l329:
  3965                           
  3966                           ;interrupts.c: 52: if ( !PORTBbits.RB0 )
  3967  000614  B081               	btfsc	3969,0,c	;volatile
  3968  000616  D006               	goto	i2l331
  3969                           
  3970                           ;interrupts.c: 53: {
  3971                           ;interrupts.c: 54: INTCON2bits.INTEDG0 = 1 ;
  3972  000618  8CF1               	bsf	intcon2,6,c	;volatile
  3973                           
  3974                           ;interrupts.c: 56: timerHalfSecond = 0 ;
  3975  00061A  0E00               	movlw	0
  3976  00061C  6E5E               	movwf	_timerHalfSecond+1,c
  3977  00061E  0E00               	movlw	0
  3978  000620  6E5D               	movwf	_timerHalfSecond,c
  3979                           
  3980                           ;interrupts.c: 57: }else
  3981  000622  D00D               	goto	i2l1662
  3982  000624                     i2l331:
  3983                           
  3984                           ;interrupts.c: 58: {
  3985                           ;interrupts.c: 59: INTCON2bits.INTEDG0 = 0 ;
  3986  000624  9CF1               	bcf	intcon2,6,c	;volatile
  3987                           
  3988                           ;interrupts.c: 61: S2KeyPushTime = timerHalfSecond;
  3989  000626  C05D  F05F         	movff	_timerHalfSecond,_S2KeyPushTime
  3990                           
  3991                           ;interrupts.c: 62: flagS2KeyPushed = 1 ;
  3992  00062A  0E01               	movlw	1
  3993  00062C  6E61               	movwf	_flagS2KeyPushed,c
  3994                           
  3995                           ;interrupts.c: 64: buttonPushTimeStop = timeSystemRun ;
  3996  00062E  C059  F051         	movff	_timeSystemRun,_buttonPushTimeStop
  3997  000632  C05A  F052         	movff	_timeSystemRun+1,_buttonPushTimeStop+1
  3998  000636  C05B  F053         	movff	_timeSystemRun+2,_buttonPushTimeStop+2
  3999  00063A  C05C  F054         	movff	_timeSystemRun+3,_buttonPushTimeStop+3
  4000  00063E                     i2l1662:
  4001                           
  4002                           ;interrupts.c: 66: }
  4003                           ;interrupts.c: 67: pushButtonJitterTime = timeSystemRun ;
  4004  00063E  C059  F055         	movff	_timeSystemRun,_pushButtonJitterTime
  4005  000642  C05A  F056         	movff	_timeSystemRun+1,_pushButtonJitterTime+1
  4006  000646  C05B  F057         	movff	_timeSystemRun+2,_pushButtonJitterTime+2
  4007  00064A  C05C  F058         	movff	_timeSystemRun+3,_pushButtonJitterTime+3
  4008  00064E                     i2l333:
  4009  00064E  C016  FFF5         	movff	??_ISR+21,tablat
  4010  000652  C015  FFF8         	movff	??_ISR+20,tblptru
  4011  000656  C014  FFF7         	movff	??_ISR+19,tblptrh
  4012  00065A  C013  FFF6         	movff	??_ISR+18,tblptrl
  4013  00065E  C012  FFF4         	movff	??_ISR+17,prodh
  4014  000662  C011  FFF3         	movff	??_ISR+16,prodl
  4015  000666  C010  FFDA         	movff	??_ISR+15,fsr2h
  4016  00066A  C00F  FFD9         	movff	??_ISR+14,fsr2l
  4017  00066E  C00E  FFE2         	movff	??_ISR+13,fsr1h
  4018  000672  C00D  FFE1         	movff	??_ISR+12,fsr1l
  4019  000676  C00C  FFEA         	movff	??_ISR+11,fsr0h
  4020  00067A  C00B  FFE9         	movff	??_ISR+10,fsr0l
  4021  00067E  C00A  FFFB         	movff	??_ISR+9,pclatu
  4022  000682  C009  FFFA         	movff	??_ISR+8,pclath
  4023  000686  9265               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4024  000688  0011               	retfie		f
  4025  00068A                     __end_of_ISR:
  4026                           	opt stack 0
  4027  0000                     pclatu	equ	0xFFB
  4028                           pclath	equ	0xFFA
  4029                           tblptru	equ	0xFF8
  4030                           tblptrh	equ	0xFF7
  4031                           tblptrl	equ	0xFF6
  4032                           tablat	equ	0xFF5
  4033                           prodh	equ	0xFF4
  4034                           prodl	equ	0xFF3
  4035                           intcon	equ	0xFF2
  4036                           intcon2	equ	0xFF1
  4037                           postinc0	equ	0xFEE
  4038                           fsr0h	equ	0xFEA
  4039                           fsr0l	equ	0xFE9
  4040                           wreg	equ	0xFE8
  4041                           postinc1	equ	0xFE6
  4042                           postdec1	equ	0xFE5
  4043                           fsr1h	equ	0xFE2
  4044                           fsr1l	equ	0xFE1
  4045                           postinc2	equ	0xFDE
  4046                           postdec2	equ	0xFDD
  4047                           fsr2h	equ	0xFDA
  4048                           fsr2l	equ	0xFD9
  4049                           status	equ	0xFD8
  4050                           pclatu	equ	0xFFB
  4051                           pclath	equ	0xFFA
  4052                           tblptru	equ	0xFF8
  4053                           tblptrh	equ	0xFF7
  4054                           tblptrl	equ	0xFF6
  4055                           tablat	equ	0xFF5
  4056                           prodh	equ	0xFF4
  4057                           prodl	equ	0xFF3
  4058                           intcon	equ	0xFF2
  4059                           intcon2	equ	0xFF1
  4060                           postinc0	equ	0xFEE
  4061                           fsr0h	equ	0xFEA
  4062                           fsr0l	equ	0xFE9
  4063                           wreg	equ	0xFE8
  4064                           postinc1	equ	0xFE6
  4065                           postdec1	equ	0xFE5
  4066                           fsr1h	equ	0xFE2
  4067                           fsr1l	equ	0xFE1
  4068                           postinc2	equ	0xFDE
  4069                           postdec2	equ	0xFDD
  4070                           fsr2h	equ	0xFDA
  4071                           fsr2l	equ	0xFD9
  4072                           status	equ	0xFD8
  4073                           
  4074                           	psect	rparam
  4075  0000                     pclatu	equ	0xFFB
  4076                           pclath	equ	0xFFA
  4077                           tblptru	equ	0xFF8
  4078                           tblptrh	equ	0xFF7
  4079                           tblptrl	equ	0xFF6
  4080                           tablat	equ	0xFF5
  4081                           prodh	equ	0xFF4
  4082                           prodl	equ	0xFF3
  4083                           intcon	equ	0xFF2
  4084                           intcon2	equ	0xFF1
  4085                           postinc0	equ	0xFEE
  4086                           fsr0h	equ	0xFEA
  4087                           fsr0l	equ	0xFE9
  4088                           wreg	equ	0xFE8
  4089                           postinc1	equ	0xFE6
  4090                           postdec1	equ	0xFE5
  4091                           fsr1h	equ	0xFE2
  4092                           fsr1l	equ	0xFE1
  4093                           postinc2	equ	0xFDE
  4094                           postdec2	equ	0xFDD
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099                           	psect	temp
  4100  000065                     btemp:
  4101                           	opt stack 0
  4102  000065                     	ds	1
  4103  0000                     int$flags	set	btemp
  4104                           pclatu	equ	0xFFB
  4105                           pclath	equ	0xFFA
  4106                           tblptru	equ	0xFF8
  4107                           tblptrh	equ	0xFF7
  4108                           tblptrl	equ	0xFF6
  4109                           tablat	equ	0xFF5
  4110                           prodh	equ	0xFF4
  4111                           prodl	equ	0xFF3
  4112                           intcon	equ	0xFF2
  4113                           intcon2	equ	0xFF1
  4114                           postinc0	equ	0xFEE
  4115                           fsr0h	equ	0xFEA
  4116                           fsr0l	equ	0xFE9
  4117                           wreg	equ	0xFE8
  4118                           postinc1	equ	0xFE6
  4119                           postdec1	equ	0xFE5
  4120                           fsr1h	equ	0xFE2
  4121                           fsr1l	equ	0xFE1
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56     100
    BANK0           128     10      50
    BANK1           256      0       0
    BANK2           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ProcessHeat
    _ShutDownSystem->_delay_ms
    _ProcessHeat->_GetAdcAD597Value
    _GetAdcAD597Value->_AD_Converter
    _GetAdcChargBatValue->_AD_Converter
    _GetAdcBatValue->_AD_Converter
    _AD_Converter->_delay_10us

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    11      5    5788
                                             50 COMRAM     6     1      5
                                              0 BANK0     10    10      0
                     _GetAdcBatValue
                _GetAdcChargBatValue
                       _InitializeAD
                     _InitializeINT0
               _InitializeInterrupts
               _InitializeOscillator
                   _InitializePinmux
                   _InitializeTimer0
                    _LevelTmpSetShow
                      _ProcessButton
                        _ProcessHeat
                         _ReadEEprom
                     _ShutDownSystem
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _ShutDownSystem                                       1     1      0     838
                                             28 COMRAM     1     1      0
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2     838
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ProcessHeat                                         11    11      0    1525
                                             39 COMRAM    11    11      0
                   _GetAdcAD597Value
                 _HeatProcessLedShow
                         _ReadEEprom
                        _WriteEEprom
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (2) _WriteEEprom                                          2     1      1     116
                                             22 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ReadEEprom                                           1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HeatProcessLedShow                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetAdcAD597Value                                     8     6      2     995
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _ProcessButton                                        8     8      0      37
                                             22 COMRAM     8     8      0
                    _LevelTmpSetShow
 ---------------------------------------------------------------------------------
 (2) _LevelTmpSetShow                                      0     0      0       0
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _turnOffAllLed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializePinmux                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeOscillator                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeINT0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeAD                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetAdcChargBatValue                                  8     6      2    1026
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _GetAdcBatValue                                       8     6      2    1026
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     565
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _AD_Converter                                         7     5      2     133
                                             24 COMRAM     7     5      2
                         _delay_10us
 ---------------------------------------------------------------------------------
 (4) _delay_10us                                           2     2      0      68
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 22    22      0       0
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetAdcBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _GetAdcChargBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _InitializeAD
   _InitializeINT0
   _InitializeInterrupts
   _InitializeOscillator
   _InitializePinmux
   _InitializeTimer0
   _LevelTmpSetShow
     _turnOffAllLed
   _ProcessButton
     _LevelTmpSetShow
       _turnOffAllLed
   _ProcessHeat
     _GetAdcAD597Value
       _AD_Converter
         _delay_10us
       ___lwdiv
     _HeatProcessLedShow
     _ReadEEprom
     _WriteEEprom
     _turnOffAllLed
   _ReadEEprom
   _ShutDownSystem
     _delay_ms
     _turnOffAllLed
   _delay_ms
   _turnOffAllLed

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2EE      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            EF      0       0       8        0.0%
BANK2               EF      0       0       9        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      A      32       4       39.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      64       1       79.4%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96       5        0.0%
DATA                 0      0      96      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Oct 14 17:07:22 2015

              _buttonPushTimeStop 0051                       __CFG_CP0$ON 000000  
                     __CFG_CP1$ON 000000              __size_of_WriteEEprom 0028  
             _buttonPushTimeStart 004D                                l71 01B8  
                              l81 01F4                                l74 0198  
                              l97 033C                       __CFG_CPB$ON 000000  
                     __CFG_CPD$ON 000000                       __CFG_BORV$3 000000  
                     __CFG_OSC$HS 000000                               l135 0BEE  
                             l232 0AE4                               l270 0514  
                             l415 0A84                               l263 049E  
                             l255 042A                               l417 0A8C  
                             l249 055E                               l418 0A9A  
                             l362 0B42                               l369 0C0A  
                             l474 06F0                               l477 072E  
                             l883 0A2E                               _ISR 0008  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                              ?_ISR 0001  
                    __CFG_WDT$OFF 000000                              l2212 0BDC  
                            l2310 0952                              l2400 080E  
                            l2320 0978                              l2410 085C  
                            l2330 09A2                              l2314 095E  
                            l2244 09FC                              l2420 088C  
                            l2324 0986                              l2308 0B60  
                            l2500 040C                              l2246 0A04  
                            l2414 0864                              l2406 084A  
                            l2350 08C0                              l2334 09B2  
                            l2318 096E                              l2342 09D0  
                            l2262 0B14                              l2256 0A24  
                            l2248 0A08                              l2360 090E  
                            l2328 0998                              l2272 0B2E  
                            l2264 0B1C                              l2450 071A  
                            l2442 06FE                              l2370 0932  
                            l2346 08B8                              l2338 09C6  
                            l2282 0C16                              l2506 042C  
                            l2274 0B32                              l2610 0054  
                            l2364 0916                              l2356 08FC  
                            l2524 04A0                              l2508 045A  
                            l2438 06FA                              l2526 04CE  
                            l2518 0480                              l2550 0558  
                            l2630 0126                              l2614 0090  
                            l2288 0AAE                              l2456 0726  
                            l2544 0516                              l2712 02C4  
                            l2570 075C                              l2538 04F6  
                            l2642 017C                              l2618 00B0  
                            l2396 0806                              l2580 07AA  
                            l2468 0742                              l2492 03E8  
                            l2548 0544                              l2484 03A2  
                            l2556 0A3C                              l2628 0104  
                            l2590 07DA                              l2566 0754  
                            l2726 0304                              l2742 035E  
                            l2670 020E                              l2638 015C  
                            l2584 07B2                              l2576 0798  
                            l2488 03D4                              l2680 0234  
                            l2664 01F0                              l2656 01CA  
                            l2690 026A                              l2674 0214  
                            l2658 01DC                              l2668 0208  
                            l2676 022A                              u2000 0A48  
                            u2020 0A62                              u2100 0074  
                            u2018 0A4A                              u2038 0A64  
                            u2118 0076                              u2080 005E  
                            u2098 0060                              u1900 03F4  
                            u1910 0426                              u1930 0466  
                            u1940 049A                              u1960 04DA  
                            u1970 0510                      __CFG_PWRT$ON 000000  
                    __CFG_WRT0$ON 000000                      __CFG_WRT1$ON 000000  
                   __CFG_EBTR0$ON 000000                     __CFG_EBTR1$ON 000000  
                    __CFG_WRTB$ON 000000                      __CFG_WRTC$ON 000000  
                    __CFG_WRTD$ON 000000                     __CFG_EBTRB$ON 000000  
                            _main 001A                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0065  
                            pclat 000FFA                      main@adcValue 00B0  
                            prodh 000FF4                              prodl 000FF3  
                            start 0016                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
   __size_of_InitializeInterrupts 0008                             ??_ISR 0001  
                           ?_main 0033                             _EEADR 000FA9  
                 __end_of___lwdiv 0A38                             i2l331 0624  
                           i2l333 064E                             i2l329 0614  
                    main@keyValue 00AD                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _PORTC 000F82  
                  __CFG_FCMEN$OFF 000000     GetAdcAD597Value@channelNumber 0024  
   __size_of_InitializeOscillator 0002              __end_of_AD_Converter 0B0A  
                           main@i 00AE       __end_of_GetAdcChargBatValue 07F8  
                  __CFG_BOREN$OFF 000000                             tablat 000FF5  
                   ?_InitializeAD 0001                             status 000FD8  
                      _ReadEEprom 0C08                   __initialization 0B90  
         __size_of_InitializeINT0 0008                      __end_of_main 0366  
        ProcessHeat@countHeatTime 002D         __size_of_InitializePinmux 0028  
       __size_of_InitializeTimer0 0018                            ??_main 0038  
                   __activetblptr 000002               ProcessHeat@adcValue 0031  
        __size_of_LevelTmpSetShow 0046                            _ADCON0 000FC2  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                  ??_InitializeAD 0017                            i2l1640 05BA  
                          i2l1644 05C2                            i2l1662 063E  
                 WriteEEprom@addr 0018                   WriteEEprom@data 0017  
             ProcessHeat@flagStop 002C            __size_of_turnOffAllLed 0008  
              GetAdcBatValue@temp 0025                  __end_of_delay_ms 0B40  
                  __CFG_XINST$OFF 000000       __size_of_HeatProcessLedShow 0096  
                  __CFG_STVREN$ON 000000                            _cyData 0060  
                ??_GetAdcBatValue 0022                         ??___lwdiv 001B  
                          clear_0 0B96                            clear_1 0BA2  
       AD_Converter@channelNumber 001D                     _S2KeyPushTime 005F  
        __end_of_GetAdcAD597Value 0950                            tblptrh 000FF7  
                          tblptrl 000FF6                     ??_ProcessHeat 0028  
                          tblptru 000FF8                   _levelTmpSetting 0062  
                      __accesstop 0080           __end_of__initialization 0BA8  
                 __CFG_PBADEN$OFF 000000                       ?_ReadEEprom 0001  
         __size_of_ShutDownSystem 0046                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001       GetAdcBatValue@channelNumber 0024  
           __end_of_ProcessButton 0746                   _timerHalfSecond 005D  
                   _turnOffAllLed 0C1E             __size_of_AD_Converter 0046  
               GetAdcAD597Value@i 0027                        __pbssBANK0 0080  
             __end_of_ProcessHeat 0562                        _delay_10us 0BD4  
               ??_LevelTmpSetShow 0017                     ??_WriteEEprom 0018  
                  _InitializeINT0 0C2E                      _AD_Converter 0AC4  
            __end_of_InitializeAD 0BD4                  _InitializePinmux 0B68  
                _InitializeTimer0 0BF0                    ?_turnOffAllLed 0001  
                 _flagS2KeyPushed 0061              GetAdcChargBatValue@i 0027  
             __size_of_ReadEEprom 0016                         ?_delay_ms 0017  
    __end_of_InitializeInterrupts 0C2E            __end_of_InitializeINT0 0C36  
               main@flagChargeBat 00AC                           __Hparam 0000  
            GetAdcAD597Value@temp 0025                           __Lparam 0000  
                 GetAdcBatValue@i 0027      __end_of_InitializeOscillator 0C38  
                         ___lwdiv 09E6                           __pcinit 0B90  
                         __ramtop 0300               __end_of_WriteEEprom 0B68  
                         __ptext0 001A                           __ptext1 0A38  
                         __ptext2 0B0A                           __ptext3 0366  
                         __ptext4 0B40                           __ptext5 0C08  
                         __ptext6 0950                           __ptext7 08AA  
                         __ptext8 068A                           __ptext9 0A7E  
                       _T0CONbits 000FD5                      __size_of_ISR 0682  
                      ??_delay_ms 0019                       _ProcessHeat 0366  
            _pushButtonJitterTime 0055                    __pintcode_body 0562  
            end_of_initialization 0BA8                       ?_delay_10us 0001  
                   __Lmediumconst 0000                           int_func 0562  
                  _ShutDownSystem 0A38                   ?_InitializeINT0 0001  
    __size_of_GetAdcChargBatValue 00B2                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                     _adcBatValue 0039                   ??_turnOffAllLed 0017  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82                         _TRISAbits 000F92  
               ?_GetAdcAD597Value 0020                         _TRISBbits 000F93  
                       _TRISCbits 000F94                ??_GetAdcAD597Value 0022  
          __end_of_ShutDownSystem 0A7E                      ??_ReadEEprom 0017  
                  ReadEEprom@addr 0017        __end_of_HeatProcessLedShow 09E6  
           __size_of_InitializeAD 001E                       _WriteEEprom 0B40  
            _InitializeInterrupts 0C26             AD_Converter@AD_Result 001E  
             __size_of_delay_10us 001C               start_initialization 0B90  
                 _LevelTmpSetShow 0A7E                       __end_of_ISR 068A  
              __end_of_ReadEEprom 0C1E              _InitializeOscillator 0C36  
                 ?_ShutDownSystem 0001          __end_of_InitializePinmux 0B90  
        __end_of_InitializeTimer0 0C08                      _InitializeAD 0BB6  
                   _adcAD597Value 0080             ?_InitializeInterrupts 0001  
                __CFG_LPT1OSC$OFF 000000                       __pbssCOMRAM 0039  
                   __pcstackBANK0 00A8           __size_of_GetAdcBatValue 00B2  
           ?_InitializeOscillator 0001                 __size_of_delay_ms 0036  
          __size_of_ProcessButton 00BC                  ___lwdiv@dividend 0017  
               __CFG_CCP2MX$PORTC 000000                         __pintcode 0008  
                        ?___lwdiv 0017           __end_of_LevelTmpSetShow 0AC4  
             _GetAdcChargBatValue 0746                      ?_ProcessHeat 0001  
                ___lwdiv@quotient 001C                  ??_InitializeINT0 0017  
                    ??_delay_10us 0017                         delay_ms@i 001B  
                       delay_ms@j 0019                         delay_ms@x 0017  
          ??_InitializeInterrupts 0017              ?_GetAdcChargBatValue 0020  
                        _PIR1bits 000F9E                  __CFG_WDTPS$32768 000000  
                   _ProcessButton 068A                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
              __end_of_delay_10us 0BF0            ??_InitializeOscillator 0017  
                     _INTCON2bits 000FF1                        _EECON1bits 000FA6  
           ??_GetAdcChargBatValue 0022         __size_of_GetAdcAD597Value 00A6  
                        __Hrparam 0000                          __Lrparam 0000  
                    ?_WriteEEprom 0017                    ?_ProcessButton 0001  
                __size_of___lwdiv 0052                  ?_LevelTmpSetShow 0001  
           __end_of_turnOffAllLed 0C26                     _timeSystemRun 0059  
              _HeatProcessLedShow 0950                 main@countHeatTime 00A8  
                  _GetAdcBatValue 07F8                          _delay_ms 0B0A  
                ??_ShutDownSystem 001D                   ___lwdiv@divisor 0019  
                 ___lwdiv@counter 001B               ?_HeatProcessLedShow 0001  
                        __ptext10 0C1E                          __ptext11 0BF0  
                        __ptext20 0AC4                          __ptext12 0B68  
                        __ptext21 0BD4                          __ptext13 0C36  
                        __ptext14 0C26                          __ptext15 0C2E  
                        __ptext16 0BB6                          __ptext17 0746  
                        __ptext18 07F8                          __ptext19 09E6  
                     delay_10us@i 0017                 ?_InitializePinmux 0001  
               ?_InitializeTimer0 0001                     __size_of_main 034C  
GetAdcChargBatValue@channelNumber 0024                ??_InitializePinmux 0017  
              ??_InitializeTimer0 0017           GetAdcChargBatValue@temp 0025  
   ProcessButton@buttonPushPeriod 001B              ??_HeatProcessLedShow 0017  
                   ?_AD_Converter 0019                          int$flags 0065  
                        main@argc 0033                          main@argv 0035  
              _adcChargeStatValue 0094            __end_of_GetAdcBatValue 08AA  
                      _INTCONbits 000FF2              __size_of_ProcessHeat 01FC  
                        intlevel2 0000                   ??_ProcessButton 0017  
                  ??_AD_Converter 001B                       _timer0Count 0063  
                     _timer1Count 0064                   ?_GetAdcBatValue 0020  
                _GetAdcAD597Value 08AA  



Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Oct 15 16:03:35 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     _PORTAbits	set	3968
    38  0000                     _PORTBbits	set	3969
    39  0000                     _PORTC	set	3970
    40  0000                     _PORTCbits	set	3970
    41  0000                     _TRISAbits	set	3986
    42  0000                     _TRISBbits	set	3987
    43  0000                     _TRISCbits	set	3988
    44  0000                     _ADCON0	set	4034
    45  0000                     _ADCON0bits	set	4034
    46  0000                     _ADCON1bits	set	4033
    47  0000                     _ADCON2bits	set	4032
    48  0000                     _ADRESH	set	4036
    49  0000                     _ADRESL	set	4035
    50  0000                     _EEADR	set	4009
    51  0000                     _EECON1bits	set	4006
    52  0000                     _EECON2	set	4007
    53  0000                     _EEDATA	set	4008
    54  0000                     _PIR1bits	set	3998
    55  0000                     _T0CONbits	set	4053
    56  0000                     _TMR0H	set	4055
    57  0000                     _TMR0L	set	4054
    58  0000                     _INTCON2bits	set	4081
    59  0000                     _INTCONbits	set	4082
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  000CF6                     __pcinit:
    65                           	opt stack 0
    66  000CF6                     start_initialization:
    67                           	opt stack 0
    68  000CF6                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to BANK0 (40 bytes)
    72  000CF6  EE00  F080         	lfsr	0,__pbssBANK0
    73  000CFA  0E28               	movlw	40
    74  000CFC                     clear_0:
    75  000CFC  6AEE               	clrf	postinc0,c
    76  000CFE  06E8               	decf	wreg,f,c
    77  000D00  E1FD               	bnz	clear_0
    78                           
    79                           ; Clear objects allocated to COMRAM (44 bytes)
    80  000D02  EE00  F039         	lfsr	0,__pbssCOMRAM
    81  000D06  0E2C               	movlw	44
    82  000D08                     clear_1:
    83  000D08  6AEE               	clrf	postinc0,c
    84  000D0A  06E8               	decf	wreg,f,c
    85  000D0C  E1FD               	bnz	clear_1
    86  000D0E                     end_of_initialization:
    87                           	opt stack 0
    88  000D0E                     __end_of__initialization:
    89                           	opt stack 0
    90  000D0E  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91  000D10  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92  000D12  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  000D14  6EF8               	movwf	tblptru,c
    94  000D16  0100               	movlb	0
    95  000D18  EF0D  F000         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000039                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000039                     _adcBatValue:
   104                           	opt stack 0
   105  000039                     	ds	20
   106  00004D                     _buttonPushTimeStart:
   107                           	opt stack 0
   108  00004D                     	ds	4
   109  000051                     _buttonPushTimeStop:
   110                           	opt stack 0
   111  000051                     	ds	4
   112  000055                     _pushButtonJitterTime:
   113                           	opt stack 0
   114  000055                     	ds	4
   115  000059                     _timeSystemRun:
   116                           	opt stack 0
   117  000059                     	ds	4
   118  00005D                     _timerHalfSecond:
   119                           	opt stack 0
   120  00005D                     	ds	2
   121  00005F                     _S2KeyPushTime:
   122                           	opt stack 0
   123  00005F                     	ds	1
   124  000060                     _cyData:
   125                           	opt stack 0
   126  000060                     	ds	1
   127  000061                     _flagS2KeyPushed:
   128                           	opt stack 0
   129  000061                     	ds	1
   130  000062                     _levelTmpSetting:
   131                           	opt stack 0
   132  000062                     	ds	1
   133  000063                     _timer0Count:
   134                           	opt stack 0
   135  000063                     	ds	1
   136  000064                     _timer1Count:
   137                           	opt stack 0
   138  000064                     	ds	1
   139                           tblptru	equ	0xFF8
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssBANK0
   144  000080                     __pbssBANK0:
   145                           	opt stack 0
   146  000080                     _adcAD597Value:
   147                           	opt stack 0
   148  000080                     	ds	20
   149  000094                     _adcChargeStatValue:
   150                           	opt stack 0
   151  000094                     	ds	20
   152                           tblptru	equ	0xFF8
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           
   156                           	psect	cstackBANK0
   157  0000A8                     __pcstackBANK0:
   158                           	opt stack 0
   159  0000A8                     main@countHeatTime:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x0
   163  0000A8                     	ds	4
   164  0000AC                     main@flagChargeBat:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0x4
   168  0000AC                     	ds	1
   169  0000AD                     main@i:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x5
   173  0000AD                     	ds	2
   174  0000AF                     main@keyValue:
   175                           	opt stack 0
   176                           
   177                           ; 1 bytes @ 0x7
   178  0000AF                     	ds	1
   179  0000B0                     main@adcValue:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x8
   183  0000B0                     	ds	2
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	cstackCOMRAM
   189  000001                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000001                     ??_ISR:
   192  000001                     
   193                           ; 1 bytes @ 0x0
   194  000001                     	ds	22
   195  000017                     ??_ProcessButton:
   196  000017                     ?___lwdiv:
   197                           	opt stack 0
   198  000017                     WriteEEprom@data:
   199                           	opt stack 0
   200  000017                     ReadEEprom@addr:
   201                           	opt stack 0
   202  000017                     delay_ms@x:
   203                           	opt stack 0
   204  000017                     delay_10us@i:
   205                           	opt stack 0
   206  000017                     ___lwdiv@dividend:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x16
   210  000017                     	ds	1
   211  000018                     WriteEEprom@addr:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x17
   215  000018                     	ds	1
   216  000019                     ?_AD_Converter:
   217                           	opt stack 0
   218  000019                     delay_ms@j:
   219                           	opt stack 0
   220  000019                     ___lwdiv@divisor:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x18
   224  000019                     	ds	2
   225  00001B                     ??_AD_Converter:
   226  00001B                     ___lwdiv@counter:
   227                           	opt stack 0
   228  00001B                     delay_ms@i:
   229                           	opt stack 0
   230  00001B                     ProcessButton@buttonPushPeriod:
   231                           	opt stack 0
   232                           
   233                           ; 4 bytes @ 0x1A
   234  00001B                     	ds	1
   235  00001C                     ___lwdiv@quotient:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x1B
   239  00001C                     	ds	1
   240  00001D                     ??_ShutDownSystem:
   241  00001D                     AD_Converter@channelNumber:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x1C
   245  00001D                     	ds	1
   246  00001E                     AD_Converter@AD_Result:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x1D
   250  00001E                     	ds	2
   251  000020                     ?_GetAdcBatValue:
   252                           	opt stack 0
   253  000020                     ?_GetAdcAD597Value:
   254                           	opt stack 0
   255  000020                     ?_GetAdcChargBatValue:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x1F
   259  000020                     	ds	2
   260  000022                     ??_GetAdcBatValue:
   261  000022                     ??_GetAdcAD597Value:
   262  000022                     ??_GetAdcChargBatValue:
   263                           
   264                           ; 0 bytes @ 0x21
   265  000022                     	ds	2
   266  000024                     GetAdcBatValue@channelNumber:
   267                           	opt stack 0
   268  000024                     GetAdcAD597Value@channelNumber:
   269                           	opt stack 0
   270  000024                     GetAdcChargBatValue@channelNumber:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x23
   274  000024                     	ds	1
   275  000025                     GetAdcBatValue@temp:
   276                           	opt stack 0
   277  000025                     GetAdcAD597Value@temp:
   278                           	opt stack 0
   279  000025                     GetAdcChargBatValue@temp:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x24
   283  000025                     	ds	2
   284  000027                     GetAdcBatValue@i:
   285                           	opt stack 0
   286  000027                     GetAdcAD597Value@i:
   287                           	opt stack 0
   288  000027                     GetAdcChargBatValue@i:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x26
   292  000027                     	ds	1
   293  000028                     ??_ProcessHeat:
   294                           
   295                           ; 0 bytes @ 0x27
   296  000028                     	ds	4
   297  00002C                     ProcessHeat@flagStop:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x2B
   301  00002C                     	ds	1
   302  00002D                     ProcessHeat@countHeatTime:
   303                           	opt stack 0
   304                           
   305                           ; 4 bytes @ 0x2C
   306  00002D                     	ds	4
   307  000031                     ProcessHeat@adcValue:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x30
   311  000031                     	ds	2
   312  000033                     
   313                           ; 2 bytes @ 0x32
   314  000033                     	ds	2
   315  000035                     
   316                           ; 3 bytes @ 0x34
   317  000035                     	ds	3
   318  000038                     ??_main:
   319                           
   320                           ; 0 bytes @ 0x37
   321  000038                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 41 in file "WAFR-01-C001 HD-debug.X/WAFR-01-C001-HD-debug main/WAFR-01-C001-HD-debug-main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  argc            2   50[COMRAM] int 
   334 ;;  argv            3   52[COMRAM] PTR PTR unsigned char 
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  countHeatTim    4    0[BANK0 ] unsigned long 
   337 ;;  adcValue        2    8[BANK0 ] short 
   338 ;;  i               2    5[BANK0 ] unsigned int 
   339 ;;  keyValue        1    7[BANK0 ] char 
   340 ;;  flagChargeBa    1    4[BANK0 ] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2   50[COMRAM] int 
   343 ;; Registers used:
   344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   350 ;;      Params:         5       0       0       0
   351 ;;      Locals:         0      10       0       0
   352 ;;      Temps:          1       0       0       0
   353 ;;      Totals:         6      10       0       0
   354 ;;Total ram usage:       16 bytes
   355 ;; Hardware stack levels required when called:    5
   356 ;; This function calls:
   357 ;;		_GetAdcAD597Value
   358 ;;		_GetAdcBatValue
   359 ;;		_GetAdcChargBatValue
   360 ;;		_InitializeAD
   361 ;;		_InitializeINT0
   362 ;;		_InitializeInterrupts
   363 ;;		_InitializeOscillator
   364 ;;		_InitializePinmux
   365 ;;		_InitializeTimer0
   366 ;;		_LevelTmpSetShow
   367 ;;		_ProcessButton
   368 ;;		_ProcessHeat
   369 ;;		_ReadEEprom
   370 ;;		_ShutDownSystem
   371 ;;		_delay_ms
   372 ;;		_turnOffAllLed
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text0
   379  00001A                     __ptext0:
   380                           	opt stack 0
   381  00001A                     _main:
   382                           	opt stack 26
   383                           
   384                           ;WAFR-01-C001-HD-debug-main.c: 43: unsigned int i;
   385                           ;WAFR-01-C001-HD-debug-main.c: 44: int8 keyValue;
   386                           ;WAFR-01-C001-HD-debug-main.c: 48: int16 adcValue;
   387                           ;WAFR-01-C001-HD-debug-main.c: 50: uint32 countHeatTime = 0 ;
   388                           
   389                           ;incstack = 0
   390  00001A  0E00               	movlw	0
   391  00001C  0100               	movlb	0	; () banked
   392  00001E  6FA8               	movwf	main@countHeatTime& (0+255),b
   393  000020  0E00               	movlw	0
   394  000022  6FA9               	movwf	(main@countHeatTime+1)& (0+255),b
   395  000024  0E00               	movlw	0
   396  000026  6FAA               	movwf	(main@countHeatTime+2)& (0+255),b
   397  000028  0E00               	movlw	0
   398  00002A  6FAB               	movwf	(main@countHeatTime+3)& (0+255),b
   399                           
   400                           ;WAFR-01-C001-HD-debug-main.c: 51: uint8 flagChargeBat = 0 ;
   401  00002C  0E00               	movlw	0
   402  00002E  0100               	movlb	0	; () banked
   403  000030  6FAC               	movwf	main@flagChargeBat& (0+255),b
   404                           
   405                           ; BSR set to: 0
   406                           ;WAFR-01-C001-HD-debug-main.c: 54: InitializeOscillator();
   407  000032  ECCE  F006         	call	_InitializeOscillator	;wreg free
   408                           
   409                           ;WAFR-01-C001-HD-debug-main.c: 56: InitializePinmux();
   410  000036  EC67  F006         	call	_InitializePinmux	;wreg free
   411                           
   412                           ;WAFR-01-C001-HD-debug-main.c: 58: PORTBbits.RB2 = 1;
   413  00003A  8481               	bsf	3969,2,c	;volatile
   414                           
   415                           ;WAFR-01-C001-HD-debug-main.c: 67: InitializeInterrupts();
   416  00003C  ECC6  F006         	call	_InitializeInterrupts	;wreg free
   417                           
   418                           ;WAFR-01-C001-HD-debug-main.c: 69: InitializeTimer0();
   419  000040  ECAB  F006         	call	_InitializeTimer0	;wreg free
   420                           
   421                           ;WAFR-01-C001-HD-debug-main.c: 71: InitializeINT0();
   422  000044  ECCA  F006         	call	_InitializeINT0	;wreg free
   423                           
   424                           ;WAFR-01-C001-HD-debug-main.c: 75: InitializeAD();
   425  000048  EC8E  F006         	call	_InitializeAD	;wreg free
   426                           
   427                           ;WAFR-01-C001-HD-debug-main.c: 77: turnOffAllLed();
   428  00004C  ECC2  F006         	call	_turnOffAllLed	;wreg free
   429                           
   430                           ;WAFR-01-C001-HD-debug-main.c: 80: PORTBbits.RB1 = 0 ;
   431  000050  9281               	bcf	3969,1,c	;volatile
   432                           
   433                           ;WAFR-01-C001-HD-debug-main.c: 86: while ( !PORTBbits.RB0 )
   434  000052  D01E               	goto	l2734
   435  000054                     l2730:
   436                           
   437                           ;WAFR-01-C001-HD-debug-main.c: 87: {
   438                           ;WAFR-01-C001-HD-debug-main.c: 88: PORTCbits.RC0 = ! PORTCbits.RC0 ;
   439  000054  B082               	btfsc	3970,0,c	;volatile
   440  000056  D003               	goto	u2320
   441  000058  6A38               	clrf	??_main& (0+255),c
   442  00005A  2A38               	incf	??_main& (0+255),f,c
   443  00005C  D001               	goto	u2338
   444  00005E                     u2320:
   445  00005E  6A38               	clrf	??_main& (0+255),c
   446  000060                     u2338:
   447  000060  5082               	movf	3970,w,c	;volatile
   448  000062  1838               	xorwf	??_main,w,c
   449  000064  0BFE               	andlw	-2
   450  000066  1838               	xorwf	??_main,w,c
   451  000068  6E82               	movwf	3970,c	;volatile
   452                           
   453                           ;WAFR-01-C001-HD-debug-main.c: 89: PORTCbits.RC2 = ! PORTCbits.RC2;
   454  00006A  B482               	btfsc	3970,2,c	;volatile
   455  00006C  D003               	goto	u2340
   456  00006E  6A38               	clrf	??_main& (0+255),c
   457  000070  2A38               	incf	??_main& (0+255),f,c
   458  000072  D001               	goto	u2358
   459  000074                     u2340:
   460  000074  6A38               	clrf	??_main& (0+255),c
   461  000076                     u2358:
   462  000076  4638               	rlncf	??_main,f,c
   463  000078  4638               	rlncf	??_main,f,c
   464  00007A  5082               	movf	3970,w,c	;volatile
   465  00007C  1838               	xorwf	??_main,w,c
   466  00007E  0BFB               	andlw	-5
   467  000080  1838               	xorwf	??_main,w,c
   468  000082  6E82               	movwf	3970,c	;volatile
   469                           
   470                           ;WAFR-01-C001-HD-debug-main.c: 90: delay_ms(80);
   471  000084  0E00               	movlw	0
   472  000086  6E18               	movwf	delay_ms@x+1,c
   473  000088  0E50               	movlw	80
   474  00008A  6E17               	movwf	delay_ms@x,c
   475  00008C  EC38  F006         	call	_delay_ms	;wreg free
   476  000090                     l2734:
   477  000090  A081               	btfss	3969,0,c	;volatile
   478  000092  D7E0               	goto	l2730
   479                           
   480                           ;WAFR-01-C001-HD-debug-main.c: 91: }
   481                           ;WAFR-01-C001-HD-debug-main.c: 92: PORTCbits.RC0 = 0 ;
   482  000094  9082               	bcf	3970,0,c	;volatile
   483                           
   484                           ;WAFR-01-C001-HD-debug-main.c: 95: timeSystemRun = 0 ;
   485  000096  0E00               	movlw	0
   486  000098  6E59               	movwf	_timeSystemRun,c
   487  00009A  0E00               	movlw	0
   488  00009C  6E5A               	movwf	_timeSystemRun+1,c
   489  00009E  0E00               	movlw	0
   490  0000A0  6E5B               	movwf	_timeSystemRun+2,c
   491  0000A2  0E00               	movlw	0
   492  0000A4  6E5C               	movwf	_timeSystemRun+3,c
   493                           
   494                           ;WAFR-01-C001-HD-debug-main.c: 101: for ( i = 0 ; i < 10 ; i++)
   495  0000A6  0E00               	movlw	0
   496  0000A8  0100               	movlb	0	; () banked
   497  0000AA  6FAE               	movwf	(main@i+1)& (0+255),b
   498  0000AC  0E00               	movlw	0
   499  0000AE  6FAD               	movwf	main@i& (0+255),b
   500  0000B0                     l2738:
   501                           
   502                           ; BSR set to: 0
   503  0000B0  0100               	movlb	0	; () banked
   504  0000B2  51AE               	movf	(main@i+1)& (0+255),w,b
   505  0000B4  E127               	bnz	l2748
   506  0000B6  0E0A               	movlw	10
   507  0000B8  0100               	movlb	0	; () banked
   508  0000BA  5DAD               	subwf	main@i& (0+255),w,b
   509  0000BC  B0D8               	btfsc	status,0,c
   510  0000BE  D022               	goto	l2748
   511                           
   512                           ; BSR set to: 0
   513                           ;WAFR-01-C001-HD-debug-main.c: 102: {
   514                           ;WAFR-01-C001-HD-debug-main.c: 103: adcBatValue[i] = 816 ;
   515                           
   516                           ; BSR set to: 0
   517                           
   518                           ; BSR set to: 0
   519  0000C0  90D8               	bcf	status,0,c
   520  0000C2  0100               	movlb	0	; () banked
   521  0000C4  35AD               	rlcf	main@i& (0+255),w,b
   522  0000C6  6ED9               	movwf	fsr2l,c
   523  0000C8  0100               	movlb	0	; () banked
   524  0000CA  35AE               	rlcf	(main@i+1)& (0+255),w,b
   525  0000CC  6EDA               	movwf	fsr2h,c
   526  0000CE  0E39               	movlw	low _adcBatValue
   527  0000D0  26D9               	addwf	fsr2l,f,c
   528  0000D2  0E00               	movlw	high _adcBatValue
   529  0000D4  22DA               	addwfc	fsr2h,f,c
   530  0000D6  0E30               	movlw	48
   531  0000D8  6EDE               	movwf	postinc2,c
   532  0000DA  0E03               	movlw	3
   533  0000DC  6EDD               	movwf	postdec2,c
   534                           
   535                           ;WAFR-01-C001-HD-debug-main.c: 104: adcAD597Value[i] = 0 ;
   536  0000DE  90D8               	bcf	status,0,c
   537  0000E0  0100               	movlb	0	; () banked
   538  0000E2  35AD               	rlcf	main@i& (0+255),w,b
   539  0000E4  6ED9               	movwf	fsr2l,c
   540  0000E6  0100               	movlb	0	; () banked
   541  0000E8  35AE               	rlcf	(main@i+1)& (0+255),w,b
   542  0000EA  6EDA               	movwf	fsr2h,c
   543  0000EC  0E80               	movlw	low _adcAD597Value
   544  0000EE  26D9               	addwf	fsr2l,f,c
   545  0000F0  0E00               	movlw	high _adcAD597Value
   546  0000F2  22DA               	addwfc	fsr2h,f,c
   547  0000F4  0E00               	movlw	0
   548  0000F6  6EDE               	movwf	postinc2,c
   549  0000F8  0E00               	movlw	0
   550  0000FA  6EDD               	movwf	postdec2,c
   551                           
   552                           ; BSR set to: 0
   553  0000FC  0100               	movlb	0	; () banked
   554  0000FE  4BAD               	infsnz	main@i& (0+255),f,b
   555  000100  2BAE               	incf	(main@i+1)& (0+255),f,b
   556  000102  D7D6               	goto	l2738
   557  000104                     l2748:
   558                           
   559                           ; BSR set to: 0
   560                           ;WAFR-01-C001-HD-debug-main.c: 105: }
   561                           ;WAFR-01-C001-HD-debug-main.c: 108: buttonPushTimeStart = 0 ;
   562  000104  0E00               	movlw	0
   563  000106  6E4D               	movwf	_buttonPushTimeStart,c
   564  000108  0E00               	movlw	0
   565  00010A  6E4E               	movwf	_buttonPushTimeStart+1,c
   566  00010C  0E00               	movlw	0
   567  00010E  6E4F               	movwf	_buttonPushTimeStart+2,c
   568  000110  0E00               	movlw	0
   569  000112  6E50               	movwf	_buttonPushTimeStart+3,c
   570                           
   571                           ;WAFR-01-C001-HD-debug-main.c: 109: buttonPushTimeStop = 0 ;
   572  000114  0E00               	movlw	0
   573  000116  6E51               	movwf	_buttonPushTimeStop,c
   574  000118  0E00               	movlw	0
   575  00011A  6E52               	movwf	_buttonPushTimeStop+1,c
   576  00011C  0E00               	movlw	0
   577  00011E  6E53               	movwf	_buttonPushTimeStop+2,c
   578  000120  0E00               	movlw	0
   579  000122  6E54               	movwf	_buttonPushTimeStop+3,c
   580                           
   581                           ;WAFR-01-C001-HD-debug-main.c: 114: while(timeSystemRun < 10 * 100)
   582  000124  D052               	goto	l2776
   583  000126                     l2750:
   584                           
   585                           ; BSR set to: 0
   586                           ;WAFR-01-C001-HD-debug-main.c: 115: {
   587                           ;WAFR-01-C001-HD-debug-main.c: 116: adcValue = GetAdcBatValue( 4 );
   588  000126  0E04               	movlw	4
   589  000128  ECAF  F004         	call	_GetAdcBatValue
   590  00012C  C020  F0B0         	movff	?_GetAdcBatValue,main@adcValue
   591  000130  C021  F0B1         	movff	?_GetAdcBatValue+1,main@adcValue+1
   592                           
   593                           ;WAFR-01-C001-HD-debug-main.c: 118: turnOffAllLed();
   594  000134  ECC2  F006         	call	_turnOffAllLed	;wreg free
   595                           
   596                           ;WAFR-01-C001-HD-debug-main.c: 119: if ( adcValue > 996)
   597  000138  0100               	movlb	0	; () banked
   598  00013A  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   599  00013C  D00F               	goto	l2758
   600  00013E  0EE5               	movlw	229
   601  000140  0100               	movlb	0	; () banked
   602  000142  5DB0               	subwf	main@adcValue& (0+255),w,b
   603  000144  0E03               	movlw	3
   604  000146  0100               	movlb	0	; () banked
   605  000148  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   606  00014A  A0D8               	btfss	status,0,c
   607  00014C  D007               	goto	l2758
   608                           
   609                           ; BSR set to: 0
   610                           ;WAFR-01-C001-HD-debug-main.c: 120: {
   611                           ;WAFR-01-C001-HD-debug-main.c: 122: PORTCbits.RC0 = 1;
   612  00014E  8082               	bsf	3970,0,c	;volatile
   613                           
   614                           ;WAFR-01-C001-HD-debug-main.c: 123: PORTCbits.RC1 = 1;
   615  000150  8282               	bsf	3970,1,c	;volatile
   616                           
   617                           ;WAFR-01-C001-HD-debug-main.c: 124: PORTCbits.RC3 = 1;
   618  000152  8682               	bsf	3970,3,c	;volatile
   619                           
   620                           ;WAFR-01-C001-HD-debug-main.c: 125: PORTCbits.RC4 = 1;
   621  000154  8882               	bsf	3970,4,c	;volatile
   622                           
   623                           ;WAFR-01-C001-HD-debug-main.c: 126: PORTCbits.RC6 = 1;
   624  000156  8C82               	bsf	3970,6,c	;volatile
   625                           
   626                           ;WAFR-01-C001-HD-debug-main.c: 127: PORTCbits.RC7 = 1;
   627  000158  8E82               	bsf	3970,7,c	;volatile
   628                           
   629                           ;WAFR-01-C001-HD-debug-main.c: 128: }else if ( adcValue > 891 )
   630  00015A  D02E               	goto	l73
   631  00015C                     l2758:
   632                           
   633                           ; BSR set to: 0
   634  00015C  0100               	movlb	0	; () banked
   635  00015E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   636  000160  D00D               	goto	l2762
   637  000162  0E7C               	movlw	124
   638  000164  0100               	movlb	0	; () banked
   639  000166  5DB0               	subwf	main@adcValue& (0+255),w,b
   640  000168  0E03               	movlw	3
   641  00016A  0100               	movlb	0	; () banked
   642  00016C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   643  00016E  A0D8               	btfss	status,0,c
   644  000170  D005               	goto	l2762
   645                           
   646                           ; BSR set to: 0
   647                           ;WAFR-01-C001-HD-debug-main.c: 129: {
   648                           ;WAFR-01-C001-HD-debug-main.c: 130: PORTCbits.RC0 = 1;
   649  000172  8082               	bsf	3970,0,c	;volatile
   650                           
   651                           ;WAFR-01-C001-HD-debug-main.c: 131: PORTCbits.RC1 = 1;
   652  000174  8282               	bsf	3970,1,c	;volatile
   653                           
   654                           ;WAFR-01-C001-HD-debug-main.c: 132: PORTCbits.RC3 = 1;
   655  000176  8682               	bsf	3970,3,c	;volatile
   656                           
   657                           ;WAFR-01-C001-HD-debug-main.c: 133: PORTCbits.RC4 = 1;
   658  000178  8882               	bsf	3970,4,c	;volatile
   659                           
   660                           ;WAFR-01-C001-HD-debug-main.c: 134: }else if ( adcValue > 816)
   661  00017A  D01E               	goto	l73
   662  00017C                     l2762:
   663                           
   664                           ; BSR set to: 0
   665  00017C  0100               	movlb	0	; () banked
   666  00017E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   667  000180  D00B               	goto	l76
   668  000182  0E31               	movlw	49
   669  000184  0100               	movlb	0	; () banked
   670  000186  5DB0               	subwf	main@adcValue& (0+255),w,b
   671  000188  0E03               	movlw	3
   672  00018A  0100               	movlb	0	; () banked
   673  00018C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   674  00018E  A0D8               	btfss	status,0,c
   675  000190  D003               	goto	l76
   676                           
   677                           ; BSR set to: 0
   678                           ;WAFR-01-C001-HD-debug-main.c: 135: {
   679                           ;WAFR-01-C001-HD-debug-main.c: 136: PORTCbits.RC0 = 1;
   680  000192  8082               	bsf	3970,0,c	;volatile
   681                           
   682                           ;WAFR-01-C001-HD-debug-main.c: 137: PORTCbits.RC1 = 1;
   683  000194  8282               	bsf	3970,1,c	;volatile
   684                           
   685                           ;WAFR-01-C001-HD-debug-main.c: 138: } else
   686  000196  D010               	goto	l73
   687  000198                     l76:
   688                           
   689                           ; BSR set to: 0
   690                           ;WAFR-01-C001-HD-debug-main.c: 139: {
   691                           ;WAFR-01-C001-HD-debug-main.c: 140: PORTCbits.RC0 = 1;
   692  000198  8082               	bsf	3970,0,c	;volatile
   693                           
   694                           ;WAFR-01-C001-HD-debug-main.c: 141: PORTCbits.RC1 = 1;
   695  00019A  8282               	bsf	3970,1,c	;volatile
   696                           
   697                           ; BSR set to: 0
   698                           ;WAFR-01-C001-HD-debug-main.c: 142: delay_ms(100);
   699  00019C  0E00               	movlw	0
   700  00019E  6E18               	movwf	delay_ms@x+1,c
   701  0001A0  0E64               	movlw	100
   702  0001A2  6E17               	movwf	delay_ms@x,c
   703  0001A4  EC38  F006         	call	_delay_ms	;wreg free
   704                           
   705                           ;WAFR-01-C001-HD-debug-main.c: 143: PORTCbits.RC0 = 0;
   706  0001A8  9082               	bcf	3970,0,c	;volatile
   707                           
   708                           ;WAFR-01-C001-HD-debug-main.c: 144: PORTCbits.RC1 = 0;
   709  0001AA  9282               	bcf	3970,1,c	;volatile
   710                           
   711                           ;WAFR-01-C001-HD-debug-main.c: 145: delay_ms(100);
   712  0001AC  0E00               	movlw	0
   713  0001AE  6E18               	movwf	delay_ms@x+1,c
   714  0001B0  0E64               	movlw	100
   715  0001B2  6E17               	movwf	delay_ms@x,c
   716  0001B4  EC38  F006         	call	_delay_ms	;wreg free
   717  0001B8                     l73:
   718                           
   719                           ;WAFR-01-C001-HD-debug-main.c: 146: }
   720                           ;WAFR-01-C001-HD-debug-main.c: 148: keyValue = ProcessButton();
   721  0001B8  ECF8  F003         	call	_ProcessButton	;wreg free
   722  0001BC  0100               	movlb	0	; () banked
   723  0001BE  6FAF               	movwf	main@keyValue& (0+255),b
   724                           
   725                           ; BSR set to: 0
   726                           ;WAFR-01-C001-HD-debug-main.c: 149: if ( keyValue != 0 )
   727  0001C0  0100               	movlb	0	; () banked
   728  0001C2  51AF               	movf	main@keyValue& (0+255),w,b
   729  0001C4  0100               	movlb	0	; () banked
   730  0001C6  A4D8               	btfss	status,2,c
   731  0001C8  D009               	goto	l2778
   732  0001CA                     l2776:
   733                           
   734                           ; BSR set to: 0
   735  0001CA  505C               	movf	_timeSystemRun+3,w,c
   736  0001CC  105B               	iorwf	_timeSystemRun+2,w,c
   737  0001CE  E106               	bnz	l2778
   738  0001D0  0EE8               	movlw	232
   739  0001D2  5C59               	subwf	_timeSystemRun,w,c
   740  0001D4  0E03               	movlw	3
   741  0001D6  585A               	subwfb	_timeSystemRun+1,w,c
   742  0001D8  A0D8               	btfss	status,0,c
   743  0001DA  D7A5               	goto	l2750
   744  0001DC                     l2778:
   745                           
   746                           ; BSR set to: 0
   747                           ;WAFR-01-C001-HD-debug-main.c: 152: }
   748                           ;WAFR-01-C001-HD-debug-main.c: 153: }
   749                           ;WAFR-01-C001-HD-debug-main.c: 159: levelTmpSetting = ReadEEprom( 0 );
   750  0001DC  0E00               	movlw	0
   751  0001DE  ECB7  F006         	call	_ReadEEprom
   752  0001E2  6E62               	movwf	_levelTmpSetting,c
   753                           
   754                           ;WAFR-01-C001-HD-debug-main.c: 160: if ( (levelTmpSetting > 3) | (levelTmpSetting == 0 )
      +                           )
   755  0001E4  0E04               	movlw	4
   756  0001E6  6062               	cpfslt	_levelTmpSetting,c
   757  0001E8  D003               	goto	l2784
   758  0001EA  5062               	movf	_levelTmpSetting,w,c
   759  0001EC  A4D8               	btfss	status,2,c
   760  0001EE  D002               	goto	l2786
   761  0001F0                     l2784:
   762                           
   763                           ;WAFR-01-C001-HD-debug-main.c: 161: {
   764                           ;WAFR-01-C001-HD-debug-main.c: 162: levelTmpSetting = 1 ;
   765  0001F0  0E01               	movlw	1
   766  0001F2  6E62               	movwf	_levelTmpSetting,c
   767  0001F4                     l2786:
   768                           
   769                           ;WAFR-01-C001-HD-debug-main.c: 194: {
   770                           ;WAFR-01-C001-HD-debug-main.c: 206: adcValue = GetAdcAD597Value( 0 );
   771  0001F4  0E00               	movlw	0
   772  0001F6  EC08  F005         	call	_GetAdcAD597Value
   773  0001FA  C020  F0B0         	movff	?_GetAdcAD597Value,main@adcValue
   774  0001FE  C021  F0B1         	movff	?_GetAdcAD597Value+1,main@adcValue+1
   775                           
   776                           ;WAFR-01-C001-HD-debug-main.c: 208: turnOffAllLed();
   777  000202  ECC2  F006         	call	_turnOffAllLed	;wreg free
   778                           
   779                           ;WAFR-01-C001-HD-debug-main.c: 209: if ( adcValue > 376 )
   780  000206  0100               	movlb	0	; () banked
   781  000208  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   782  00020A  D012               	goto	l2794
   783  00020C  0E79               	movlw	121
   784  00020E  0100               	movlb	0	; () banked
   785  000210  5DB0               	subwf	main@adcValue& (0+255),w,b
   786  000212  0E01               	movlw	1
   787  000214  0100               	movlb	0	; () banked
   788  000216  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   789  000218  A0D8               	btfss	status,0,c
   790  00021A  D00A               	goto	l2794
   791                           
   792                           ; BSR set to: 0
   793                           ;WAFR-01-C001-HD-debug-main.c: 210: {
   794                           ;WAFR-01-C001-HD-debug-main.c: 211: PORTCbits.RC0 = 0 ;
   795  00021C  9082               	bcf	3970,0,c	;volatile
   796                           
   797                           ;WAFR-01-C001-HD-debug-main.c: 212: PORTCbits.RC1 = 0 ;
   798  00021E  9282               	bcf	3970,1,c	;volatile
   799                           
   800                           ;WAFR-01-C001-HD-debug-main.c: 213: PORTCbits.RC1 = 0 ;
   801  000220  9282               	bcf	3970,1,c	;volatile
   802                           
   803                           ;WAFR-01-C001-HD-debug-main.c: 214: PORTCbits.RC3 = 0 ;
   804  000222  9682               	bcf	3970,3,c	;volatile
   805                           
   806                           ;WAFR-01-C001-HD-debug-main.c: 215: PORTCbits.RC4 = 0 ;
   807  000224  9882               	bcf	3970,4,c	;volatile
   808                           
   809                           ;WAFR-01-C001-HD-debug-main.c: 216: PORTCbits.RC5 = 0 ;
   810  000226  9A82               	bcf	3970,5,c	;volatile
   811                           
   812                           ;WAFR-01-C001-HD-debug-main.c: 218: PORTCbits.RC6 = 0 ;
   813  000228  9C82               	bcf	3970,6,c	;volatile
   814                           
   815                           ;WAFR-01-C001-HD-debug-main.c: 219: PORTCbits.RC7 = 0 ;
   816  00022A  9E82               	bcf	3970,7,c	;volatile
   817                           
   818                           ;WAFR-01-C001-HD-debug-main.c: 220: PORTBbits.RB3 = 1 ;
   819  00022C  8681               	bsf	3969,3,c	;volatile
   820                           
   821                           ;WAFR-01-C001-HD-debug-main.c: 221: }else if (adcValue >335)
   822  00022E  D075               	goto	l2822
   823  000230                     l2794:
   824                           
   825                           ; BSR set to: 0
   826  000230  0100               	movlb	0	; () banked
   827  000232  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   828  000234  D011               	goto	l2798
   829  000236  0E50               	movlw	80
   830  000238  0100               	movlb	0	; () banked
   831  00023A  5DB0               	subwf	main@adcValue& (0+255),w,b
   832  00023C  0E01               	movlw	1
   833  00023E  0100               	movlb	0	; () banked
   834  000240  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   835  000242  A0D8               	btfss	status,0,c
   836  000244  D009               	goto	l2798
   837                           
   838                           ; BSR set to: 0
   839                           ;WAFR-01-C001-HD-debug-main.c: 222: {
   840                           ;WAFR-01-C001-HD-debug-main.c: 223: PORTCbits.RC0 = 0 ;
   841  000246  9082               	bcf	3970,0,c	;volatile
   842                           
   843                           ;WAFR-01-C001-HD-debug-main.c: 224: PORTCbits.RC1 = 0 ;
   844  000248  9282               	bcf	3970,1,c	;volatile
   845                           
   846                           ;WAFR-01-C001-HD-debug-main.c: 225: PORTCbits.RC1 = 0 ;
   847  00024A  9282               	bcf	3970,1,c	;volatile
   848                           
   849                           ;WAFR-01-C001-HD-debug-main.c: 226: PORTCbits.RC3 = 0 ;
   850  00024C  9682               	bcf	3970,3,c	;volatile
   851                           
   852                           ;WAFR-01-C001-HD-debug-main.c: 227: PORTCbits.RC4 = 0 ;
   853  00024E  9882               	bcf	3970,4,c	;volatile
   854                           
   855                           ;WAFR-01-C001-HD-debug-main.c: 228: PORTCbits.RC5 = 0 ;
   856  000250  9A82               	bcf	3970,5,c	;volatile
   857                           
   858                           ;WAFR-01-C001-HD-debug-main.c: 230: PORTCbits.RC6 = 0 ;
   859  000252  9C82               	bcf	3970,6,c	;volatile
   860                           
   861                           ;WAFR-01-C001-HD-debug-main.c: 231: PORTCbits.RC7 = 1 ;
   862  000254  8E82               	bsf	3970,7,c	;volatile
   863                           
   864                           ;WAFR-01-C001-HD-debug-main.c: 232: } else if ( adcValue > 310 )
   865  000256  D061               	goto	l2822
   866  000258                     l2798:
   867                           
   868                           ; BSR set to: 0
   869  000258  0100               	movlb	0	; () banked
   870  00025A  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   871  00025C  D010               	goto	l2802
   872  00025E  0E37               	movlw	55
   873  000260  0100               	movlb	0	; () banked
   874  000262  5DB0               	subwf	main@adcValue& (0+255),w,b
   875  000264  0E01               	movlw	1
   876  000266  0100               	movlb	0	; () banked
   877  000268  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   878  00026A  A0D8               	btfss	status,0,c
   879  00026C  D008               	goto	l2802
   880                           
   881                           ; BSR set to: 0
   882                           ;WAFR-01-C001-HD-debug-main.c: 233: {
   883                           ;WAFR-01-C001-HD-debug-main.c: 234: PORTCbits.RC0 = 0 ;
   884  00026E  9082               	bcf	3970,0,c	;volatile
   885                           
   886                           ;WAFR-01-C001-HD-debug-main.c: 235: PORTCbits.RC1 = 0 ;
   887  000270  9282               	bcf	3970,1,c	;volatile
   888                           
   889                           ;WAFR-01-C001-HD-debug-main.c: 236: PORTCbits.RC2 = 0 ;
   890  000272  9482               	bcf	3970,2,c	;volatile
   891                           
   892                           ;WAFR-01-C001-HD-debug-main.c: 237: PORTCbits.RC3 = 0 ;
   893  000274  9682               	bcf	3970,3,c	;volatile
   894                           
   895                           ;WAFR-01-C001-HD-debug-main.c: 238: PORTCbits.RC4 = 0 ;
   896  000276  9882               	bcf	3970,4,c	;volatile
   897                           
   898                           ;WAFR-01-C001-HD-debug-main.c: 239: PORTCbits.RC5 = 0 ;
   899  000278  9A82               	bcf	3970,5,c	;volatile
   900                           
   901                           ;WAFR-01-C001-HD-debug-main.c: 241: PORTCbits.RC6 = 1 ;
   902  00027A  8C82               	bsf	3970,6,c	;volatile
   903                           
   904                           ;WAFR-01-C001-HD-debug-main.c: 242: } else if (adcValue >307 )
   905  00027C  D04E               	goto	l2822
   906  00027E                     l2802:
   907                           
   908                           ; BSR set to: 0
   909  00027E  0100               	movlb	0	; () banked
   910  000280  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   911  000282  D00F               	goto	l2806
   912  000284  0E34               	movlw	52
   913  000286  0100               	movlb	0	; () banked
   914  000288  5DB0               	subwf	main@adcValue& (0+255),w,b
   915  00028A  0E01               	movlw	1
   916  00028C  0100               	movlb	0	; () banked
   917  00028E  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   918  000290  A0D8               	btfss	status,0,c
   919  000292  D007               	goto	l2806
   920                           
   921                           ; BSR set to: 0
   922                           ;WAFR-01-C001-HD-debug-main.c: 243: {
   923                           ;WAFR-01-C001-HD-debug-main.c: 244: PORTCbits.RC0 = 0 ;
   924  000294  9082               	bcf	3970,0,c	;volatile
   925                           
   926                           ;WAFR-01-C001-HD-debug-main.c: 245: PORTCbits.RC1 = 0 ;
   927  000296  9282               	bcf	3970,1,c	;volatile
   928                           
   929                           ;WAFR-01-C001-HD-debug-main.c: 246: PORTCbits.RC2 = 0 ;
   930  000298  9482               	bcf	3970,2,c	;volatile
   931                           
   932                           ;WAFR-01-C001-HD-debug-main.c: 247: PORTCbits.RC3 = 0 ;
   933  00029A  9682               	bcf	3970,3,c	;volatile
   934                           
   935                           ;WAFR-01-C001-HD-debug-main.c: 248: PORTCbits.RC4 = 0 ;
   936  00029C  9882               	bcf	3970,4,c	;volatile
   937                           
   938                           ;WAFR-01-C001-HD-debug-main.c: 249: PORTCbits.RC5 = 1 ;
   939  00029E  8A82               	bsf	3970,5,c	;volatile
   940                           
   941                           ;WAFR-01-C001-HD-debug-main.c: 250: }else if( adcValue > 299 )
   942  0002A0  D03C               	goto	l2822
   943  0002A2                     l2806:
   944                           
   945                           ; BSR set to: 0
   946  0002A2  0100               	movlb	0	; () banked
   947  0002A4  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   948  0002A6  D00E               	goto	l2810
   949  0002A8  0E2C               	movlw	44
   950  0002AA  0100               	movlb	0	; () banked
   951  0002AC  5DB0               	subwf	main@adcValue& (0+255),w,b
   952  0002AE  0E01               	movlw	1
   953  0002B0  0100               	movlb	0	; () banked
   954  0002B2  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   955  0002B4  A0D8               	btfss	status,0,c
   956  0002B6  D006               	goto	l2810
   957                           
   958                           ; BSR set to: 0
   959                           ;WAFR-01-C001-HD-debug-main.c: 252: {
   960                           ;WAFR-01-C001-HD-debug-main.c: 253: PORTCbits.RC0 = 0 ;
   961  0002B8  9082               	bcf	3970,0,c	;volatile
   962                           
   963                           ;WAFR-01-C001-HD-debug-main.c: 254: PORTCbits.RC1 = 0 ;
   964  0002BA  9282               	bcf	3970,1,c	;volatile
   965                           
   966                           ;WAFR-01-C001-HD-debug-main.c: 255: PORTCbits.RC2 = 0 ;
   967  0002BC  9482               	bcf	3970,2,c	;volatile
   968                           
   969                           ;WAFR-01-C001-HD-debug-main.c: 256: PORTCbits.RC3 = 0 ;
   970  0002BE  9682               	bcf	3970,3,c	;volatile
   971                           
   972                           ;WAFR-01-C001-HD-debug-main.c: 257: PORTCbits.RC4 = 1 ;
   973  0002C0  8882               	bsf	3970,4,c	;volatile
   974                           
   975                           ;WAFR-01-C001-HD-debug-main.c: 258: }else if(adcValue > 272)
   976  0002C2  D02B               	goto	l2822
   977  0002C4                     l2810:
   978                           
   979                           ; BSR set to: 0
   980  0002C4  0100               	movlb	0	; () banked
   981  0002C6  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   982  0002C8  D00D               	goto	l2814
   983  0002CA  0E11               	movlw	17
   984  0002CC  0100               	movlb	0	; () banked
   985  0002CE  5DB0               	subwf	main@adcValue& (0+255),w,b
   986  0002D0  0E01               	movlw	1
   987  0002D2  0100               	movlb	0	; () banked
   988  0002D4  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   989  0002D6  A0D8               	btfss	status,0,c
   990  0002D8  D005               	goto	l2814
   991                           
   992                           ; BSR set to: 0
   993                           ;WAFR-01-C001-HD-debug-main.c: 259: {
   994                           ;WAFR-01-C001-HD-debug-main.c: 260: PORTCbits.RC0 = 0 ;
   995  0002DA  9082               	bcf	3970,0,c	;volatile
   996                           
   997                           ;WAFR-01-C001-HD-debug-main.c: 261: PORTCbits.RC1 = 0 ;
   998  0002DC  9282               	bcf	3970,1,c	;volatile
   999                           
  1000                           ;WAFR-01-C001-HD-debug-main.c: 262: PORTCbits.RC2 = 0 ;
  1001  0002DE  9482               	bcf	3970,2,c	;volatile
  1002                           
  1003                           ;WAFR-01-C001-HD-debug-main.c: 263: PORTCbits.RC3 = 1 ;
  1004  0002E0  8682               	bsf	3970,3,c	;volatile
  1005                           
  1006                           ;WAFR-01-C001-HD-debug-main.c: 264: }else if(adcValue> 255)
  1007  0002E2  D01B               	goto	l2822
  1008  0002E4                     l2814:
  1009                           
  1010                           ; BSR set to: 0
  1011  0002E4  0100               	movlb	0	; () banked
  1012  0002E6  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1013  0002E8  D008               	goto	l2818
  1014  0002EA  0100               	movlb	0	; () banked
  1015  0002EC  05B1               	decf	(main@adcValue+1)& (0+255),w,b
  1016  0002EE  A0D8               	btfss	status,0,c
  1017  0002F0  D004               	goto	l2818
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;WAFR-01-C001-HD-debug-main.c: 265: {
  1021                           ;WAFR-01-C001-HD-debug-main.c: 266: PORTCbits.RC0 = 0 ;
  1022  0002F2  9082               	bcf	3970,0,c	;volatile
  1023                           
  1024                           ;WAFR-01-C001-HD-debug-main.c: 267: PORTCbits.RC1 = 0 ;
  1025  0002F4  9282               	bcf	3970,1,c	;volatile
  1026                           
  1027                           ;WAFR-01-C001-HD-debug-main.c: 268: PORTCbits.RC2 = 1 ;
  1028  0002F6  8482               	bsf	3970,2,c	;volatile
  1029                           
  1030                           ;WAFR-01-C001-HD-debug-main.c: 269: }else if (adcValue> 240)
  1031  0002F8  D010               	goto	l2822
  1032  0002FA                     l2818:
  1033                           
  1034                           ; BSR set to: 0
  1035  0002FA  0100               	movlb	0	; () banked
  1036  0002FC  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1037  0002FE  D00C               	goto	l98
  1038  000300  0100               	movlb	0	; () banked
  1039  000302  51B1               	movf	(main@adcValue+1)& (0+255),w,b
  1040  000304  E105               	bnz	u2530
  1041  000306  0EF1               	movlw	241
  1042  000308  0100               	movlb	0	; () banked
  1043  00030A  5DB0               	subwf	main@adcValue& (0+255),w,b
  1044  00030C  A0D8               	btfss	status,0,c
  1045  00030E  D004               	goto	l98
  1046  000310                     u2530:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;WAFR-01-C001-HD-debug-main.c: 270: {
  1050                           ;WAFR-01-C001-HD-debug-main.c: 271: PORTCbits.RC0 = 0 ;
  1051  000310  9082               	bcf	3970,0,c	;volatile
  1052                           
  1053                           ;WAFR-01-C001-HD-debug-main.c: 272: PORTCbits.RC1 = 1 ;
  1054  000312  8282               	bsf	3970,1,c	;volatile
  1055                           
  1056                           ;WAFR-01-C001-HD-debug-main.c: 273: PORTCbits.RC2 = 0 ;
  1057  000314  9482               	bcf	3970,2,c	;volatile
  1058                           
  1059                           ;WAFR-01-C001-HD-debug-main.c: 274: }else
  1060  000316  D001               	goto	l2822
  1061  000318                     l98:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;WAFR-01-C001-HD-debug-main.c: 275: {
  1065                           ;WAFR-01-C001-HD-debug-main.c: 276: PORTCbits.RC0 = 1 ;
  1066  000318  8082               	bsf	3970,0,c	;volatile
  1067  00031A                     l2822:
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;WAFR-01-C001-HD-debug-main.c: 277: }
  1071                           ;WAFR-01-C001-HD-debug-main.c: 278: delay_ms(200);
  1072  00031A  0E00               	movlw	0
  1073  00031C  6E18               	movwf	delay_ms@x+1,c
  1074  00031E  0EC8               	movlw	200
  1075  000320  6E17               	movwf	delay_ms@x,c
  1076  000322  EC38  F006         	call	_delay_ms	;wreg free
  1077                           
  1078                           ;WAFR-01-C001-HD-debug-main.c: 280: keyValue = ProcessButton();
  1079  000326  ECF8  F003         	call	_ProcessButton	;wreg free
  1080  00032A  0100               	movlb	0	; () banked
  1081  00032C  6FAF               	movwf	main@keyValue& (0+255),b
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;WAFR-01-C001-HD-debug-main.c: 281: if( keyValue == 1 )
  1085  00032E  0100               	movlb	0	; () banked
  1086  000330  05AF               	decf	main@keyValue& (0+255),w,b
  1087  000332  A4D8               	btfss	status,2,c
  1088  000334  D00D               	goto	l2828
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;WAFR-01-C001-HD-debug-main.c: 282: {
  1092                           ;WAFR-01-C001-HD-debug-main.c: 283: PORTBbits.RB1 = ! PORTBbits.RB1 ;
  1093  000336  B281               	btfsc	3969,1,c	;volatile
  1094  000338  D003               	goto	u2550
  1095  00033A  6A38               	clrf	??_main& (0+255),c
  1096  00033C  2A38               	incf	??_main& (0+255),f,c
  1097  00033E  D001               	goto	u2568
  1098  000340                     u2550:
  1099  000340  6A38               	clrf	??_main& (0+255),c
  1100  000342                     u2568:
  1101  000342  4638               	rlncf	??_main,f,c
  1102  000344  5081               	movf	3969,w,c	;volatile
  1103  000346  1838               	xorwf	??_main,w,c
  1104  000348  0BFD               	andlw	-3
  1105  00034A  1838               	xorwf	??_main,w,c
  1106  00034C  6E81               	movwf	3969,c	;volatile
  1107                           
  1108                           ;WAFR-01-C001-HD-debug-main.c: 284: } else if ( keyValue == 2)
  1109  00034E  D752               	goto	l2786
  1110  000350                     l2828:
  1111  000350  0E02               	movlw	2
  1112  000352  0100               	movlb	0	; () banked
  1113  000354  19AF               	xorwf	main@keyValue& (0+255),w,b
  1114  000356  A4D8               	btfss	status,2,c
  1115  000358  D74D               	goto	l2786
  1116  00035A                     l2832:
  1117                           
  1118                           ;WAFR-01-C001-HD-debug-main.c: 294: {
  1119                           ;WAFR-01-C001-HD-debug-main.c: 295: if ( !flagChargeBat )
  1120  00035A  0100               	movlb	0	; () banked
  1121  00035C  51AC               	movf	main@flagChargeBat& (0+255),w,b
  1122  00035E  0100               	movlb	0	; () banked
  1123  000360  A4D8               	btfss	status,2,c
  1124  000362  D01B               	goto	l2848
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;WAFR-01-C001-HD-debug-main.c: 296: {
  1128                           ;WAFR-01-C001-HD-debug-main.c: 297: keyValue = ProcessButton();
  1129  000364  ECF8  F003         	call	_ProcessButton	;wreg free
  1130  000368  0100               	movlb	0	; () banked
  1131  00036A  6FAF               	movwf	main@keyValue& (0+255),b
  1132                           
  1133                           ;WAFR-01-C001-HD-debug-main.c: 298: switch ( keyValue)
  1134  00036C  D006               	goto	l2842
  1135  00036E                     l2836:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;WAFR-01-C001-HD-debug-main.c: 306: ProcessHeat();
  1139  00036E  EC66  F002         	call	_ProcessHeat	;wreg free
  1140                           
  1141                           ;WAFR-01-C001-HD-debug-main.c: 307: break;
  1142  000372  D00E               	goto	l2844
  1143  000374                     l2838:
  1144                           
  1145                           ;WAFR-01-C001-HD-debug-main.c: 309: ShutDownSystem();
  1146  000374  ECCF  F005         	call	_ShutDownSystem	;wreg free
  1147                           
  1148                           ;WAFR-01-C001-HD-debug-main.c: 312: }
  1149                           
  1150                           ;WAFR-01-C001-HD-debug-main.c: 311: default: break;
  1151                           
  1152                           ;WAFR-01-C001-HD-debug-main.c: 310: break;
  1153  000378  D00B               	goto	l2844
  1154  00037A                     l2842:
  1155  00037A  0100               	movlb	0	; () banked
  1156  00037C  51AF               	movf	main@keyValue& (0+255),w,b
  1157                           
  1158                           ; Switch size 1, requested type "space"
  1159                           ; Number of cases is 3, Range of values is 1 to 3
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte           10     6 (average)
  1163                           ;	Chosen strategy is simple_byte
  1164  00037E  0A01               	xorlw	1	; case 1
  1165  000380  B4D8               	btfsc	status,2,c
  1166  000382  D006               	goto	l2844
  1167  000384  0A03               	xorlw	3	; case 2
  1168  000386  B4D8               	btfsc	status,2,c
  1169  000388  D7F2               	goto	l2836
  1170  00038A  0A01               	xorlw	1	; case 3
  1171  00038C  B4D8               	btfsc	status,2,c
  1172  00038E  D7F2               	goto	l2838
  1173  000390                     l2844:
  1174                           
  1175                           ;WAFR-01-C001-HD-debug-main.c: 321: if ( timerHalfSecond >= 1 )
  1176  000390  505D               	movf	_timerHalfSecond,w,c
  1177  000392  105E               	iorwf	_timerHalfSecond+1,w,c
  1178  000394  A4D8               	btfss	status,2,c
  1179                           
  1180                           ;WAFR-01-C001-HD-debug-main.c: 322: {
  1181                           ;WAFR-01-C001-HD-debug-main.c: 323: LevelTmpSetShow();
  1182  000396  ECF2  F005         	call	_LevelTmpSetShow	;wreg free
  1183  00039A                     l2848:
  1184                           
  1185                           ;WAFR-01-C001-HD-debug-main.c: 324: }
  1186                           ;WAFR-01-C001-HD-debug-main.c: 325: }
  1187                           ;WAFR-01-C001-HD-debug-main.c: 329: if ( PORTAbits.RA4 )
  1188  00039A  A880               	btfss	3968,4,c	;volatile
  1189  00039C  D093               	goto	l2910
  1190                           
  1191                           ;WAFR-01-C001-HD-debug-main.c: 330: {
  1192                           ;WAFR-01-C001-HD-debug-main.c: 331: flagChargeBat = 1;
  1193  00039E  0E01               	movlw	1
  1194  0003A0  0100               	movlb	0	; () banked
  1195  0003A2  6FAC               	movwf	main@flagChargeBat& (0+255),b
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;WAFR-01-C001-HD-debug-main.c: 333: adcValue = GetAdcChargBatValue( 1 );
  1199  0003A4  0E01               	movlw	1
  1200  0003A6  EC56  F004         	call	_GetAdcChargBatValue
  1201  0003AA  C020  F0B0         	movff	?_GetAdcChargBatValue,main@adcValue
  1202  0003AE  C021  F0B1         	movff	?_GetAdcChargBatValue+1,main@adcValue+1
  1203                           
  1204                           ;WAFR-01-C001-HD-debug-main.c: 334: if ( adcValue > 800 )
  1205  0003B2  0100               	movlb	0	; () banked
  1206  0003B4  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1207  0003B6  D00C               	goto	l2858
  1208  0003B8  0E21               	movlw	33
  1209  0003BA  0100               	movlb	0	; () banked
  1210  0003BC  5DB0               	subwf	main@adcValue& (0+255),w,b
  1211  0003BE  0E03               	movlw	3
  1212  0003C0  0100               	movlb	0	; () banked
  1213  0003C2  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
  1214  0003C4  A0D8               	btfss	status,0,c
  1215  0003C6  D004               	goto	l2858
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;WAFR-01-C001-HD-debug-main.c: 335: {
  1219                           ;WAFR-01-C001-HD-debug-main.c: 337: PORTCbits.RC1 = 1;
  1220  0003C8  8282               	bsf	3970,1,c	;volatile
  1221                           
  1222                           ;WAFR-01-C001-HD-debug-main.c: 338: PORTCbits.RC4 = 1;
  1223  0003CA  8882               	bsf	3970,4,c	;volatile
  1224                           
  1225                           ;WAFR-01-C001-HD-debug-main.c: 339: PORTCbits.RC7 = 1;
  1226  0003CC  8E82               	bsf	3970,7,c	;volatile
  1227                           
  1228                           ;WAFR-01-C001-HD-debug-main.c: 341: }else
  1229  0003CE  D7C5               	goto	l2832
  1230  0003D0                     l2858:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;WAFR-01-C001-HD-debug-main.c: 342: {
  1234                           ;WAFR-01-C001-HD-debug-main.c: 343: adcValue = GetAdcBatValue( 4 );
  1235  0003D0  0E04               	movlw	4
  1236  0003D2  ECAF  F004         	call	_GetAdcBatValue
  1237  0003D6  C020  F0B0         	movff	?_GetAdcBatValue,main@adcValue
  1238  0003DA  C021  F0B1         	movff	?_GetAdcBatValue+1,main@adcValue+1
  1239                           
  1240                           ;WAFR-01-C001-HD-debug-main.c: 345: turnOffAllLed();
  1241  0003DE  ECC2  F006         	call	_turnOffAllLed	;wreg free
  1242                           
  1243                           ;WAFR-01-C001-HD-debug-main.c: 346: if ( adcValue > 996)
  1244  0003E2  0100               	movlb	0	; () banked
  1245  0003E4  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1246  0003E6  D021               	goto	l2880
  1247  0003E8  0EE5               	movlw	229
  1248  0003EA  0100               	movlb	0	; () banked
  1249  0003EC  5DB0               	subwf	main@adcValue& (0+255),w,b
  1250  0003EE  0E03               	movlw	3
  1251  0003F0  0100               	movlb	0	; () banked
  1252  0003F2  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
  1253  0003F4  A0D8               	btfss	status,0,c
  1254  0003F6  D019               	goto	l2880
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;WAFR-01-C001-HD-debug-main.c: 347: {
  1258                           ;WAFR-01-C001-HD-debug-main.c: 349: PORTCbits.RC0 = 1;
  1259  0003F8  8082               	bsf	3970,0,c	;volatile
  1260                           
  1261                           ;WAFR-01-C001-HD-debug-main.c: 350: PORTCbits.RC1 = 1;
  1262  0003FA  8282               	bsf	3970,1,c	;volatile
  1263                           
  1264                           ;WAFR-01-C001-HD-debug-main.c: 351: PORTCbits.RC3 = 1;
  1265  0003FC  8682               	bsf	3970,3,c	;volatile
  1266                           
  1267                           ;WAFR-01-C001-HD-debug-main.c: 352: PORTCbits.RC4 = 1;
  1268  0003FE  8882               	bsf	3970,4,c	;volatile
  1269                           
  1270                           ;WAFR-01-C001-HD-debug-main.c: 353: PORTCbits.RC6 = 1;
  1271  000400  8C82               	bsf	3970,6,c	;volatile
  1272                           
  1273                           ;WAFR-01-C001-HD-debug-main.c: 354: PORTCbits.RC7 = 1;
  1274  000402  8E82               	bsf	3970,7,c	;volatile
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;WAFR-01-C001-HD-debug-main.c: 355: delay_ms(200);
  1278  000404  0E00               	movlw	0
  1279  000406  6E18               	movwf	delay_ms@x+1,c
  1280  000408  0EC8               	movlw	200
  1281  00040A  6E17               	movwf	delay_ms@x,c
  1282  00040C  EC38  F006         	call	_delay_ms	;wreg free
  1283                           
  1284                           ;WAFR-01-C001-HD-debug-main.c: 356: PORTCbits.RC0 = 0;
  1285  000410  9082               	bcf	3970,0,c	;volatile
  1286                           
  1287                           ;WAFR-01-C001-HD-debug-main.c: 357: PORTCbits.RC1 = 0;
  1288  000412  9282               	bcf	3970,1,c	;volatile
  1289                           
  1290                           ;WAFR-01-C001-HD-debug-main.c: 358: PORTCbits.RC3 = 0;
  1291  000414  9682               	bcf	3970,3,c	;volatile
  1292                           
  1293                           ;WAFR-01-C001-HD-debug-main.c: 359: PORTCbits.RC4 = 0;
  1294  000416  9882               	bcf	3970,4,c	;volatile
  1295                           
  1296                           ;WAFR-01-C001-HD-debug-main.c: 360: PORTCbits.RC6 = 0;
  1297  000418  9C82               	bcf	3970,6,c	;volatile
  1298                           
  1299                           ;WAFR-01-C001-HD-debug-main.c: 361: PORTCbits.RC7 = 0;
  1300  00041A  9E82               	bcf	3970,7,c	;volatile
  1301                           
  1302                           ;WAFR-01-C001-HD-debug-main.c: 362: delay_ms(200);
  1303  00041C  0E00               	movlw	0
  1304  00041E  6E18               	movwf	delay_ms@x+1,c
  1305  000420  0EC8               	movlw	200
  1306  000422  6E17               	movwf	delay_ms@x,c
  1307  000424  EC38  F006         	call	_delay_ms	;wreg free
  1308                           
  1309                           ;WAFR-01-C001-HD-debug-main.c: 364: }else if ( adcValue > 891 )
  1310  000428  D798               	goto	l2832
  1311  00042A                     l2880:
  1312  00042A  0100               	movlb	0	; () banked
  1313  00042C  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1314  00042E  D01D               	goto	l2894
  1315  000430  0E7C               	movlw	124
  1316  000432  0100               	movlb	0	; () banked
  1317  000434  5DB0               	subwf	main@adcValue& (0+255),w,b
  1318  000436  0E03               	movlw	3
  1319  000438  0100               	movlb	0	; () banked
  1320  00043A  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
  1321  00043C  A0D8               	btfss	status,0,c
  1322  00043E  D015               	goto	l2894
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;WAFR-01-C001-HD-debug-main.c: 365: {
  1326                           ;WAFR-01-C001-HD-debug-main.c: 366: PORTCbits.RC0 = 1;
  1327  000440  8082               	bsf	3970,0,c	;volatile
  1328                           
  1329                           ;WAFR-01-C001-HD-debug-main.c: 367: PORTCbits.RC1 = 1;
  1330  000442  8282               	bsf	3970,1,c	;volatile
  1331                           
  1332                           ;WAFR-01-C001-HD-debug-main.c: 368: PORTCbits.RC3 = 1;
  1333  000444  8682               	bsf	3970,3,c	;volatile
  1334                           
  1335                           ;WAFR-01-C001-HD-debug-main.c: 369: PORTCbits.RC4 = 1;
  1336  000446  8882               	bsf	3970,4,c	;volatile
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;WAFR-01-C001-HD-debug-main.c: 370: delay_ms(200);
  1340  000448  0E00               	movlw	0
  1341  00044A  6E18               	movwf	delay_ms@x+1,c
  1342  00044C  0EC8               	movlw	200
  1343  00044E  6E17               	movwf	delay_ms@x,c
  1344  000450  EC38  F006         	call	_delay_ms	;wreg free
  1345                           
  1346                           ;WAFR-01-C001-HD-debug-main.c: 371: PORTCbits.RC0 = 0;
  1347  000454  9082               	bcf	3970,0,c	;volatile
  1348                           
  1349                           ;WAFR-01-C001-HD-debug-main.c: 372: PORTCbits.RC1 = 0;
  1350  000456  9282               	bcf	3970,1,c	;volatile
  1351                           
  1352                           ;WAFR-01-C001-HD-debug-main.c: 373: PORTCbits.RC3 = 0;
  1353  000458  9682               	bcf	3970,3,c	;volatile
  1354                           
  1355                           ;WAFR-01-C001-HD-debug-main.c: 374: PORTCbits.RC4 = 0;
  1356  00045A  9882               	bcf	3970,4,c	;volatile
  1357                           
  1358                           ;WAFR-01-C001-HD-debug-main.c: 375: delay_ms(200);
  1359  00045C  0E00               	movlw	0
  1360  00045E  6E18               	movwf	delay_ms@x+1,c
  1361  000460  0EC8               	movlw	200
  1362  000462  6E17               	movwf	delay_ms@x,c
  1363  000464  EC38  F006         	call	_delay_ms	;wreg free
  1364                           
  1365                           ;WAFR-01-C001-HD-debug-main.c: 376: }else if ( adcValue > 816)
  1366  000468  D778               	goto	l2832
  1367  00046A                     l2894:
  1368  00046A  0100               	movlb	0	; () banked
  1369  00046C  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1370  00046E  D019               	goto	l121
  1371  000470  0E31               	movlw	49
  1372  000472  0100               	movlb	0	; () banked
  1373  000474  5DB0               	subwf	main@adcValue& (0+255),w,b
  1374  000476  0E03               	movlw	3
  1375  000478  0100               	movlb	0	; () banked
  1376  00047A  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
  1377  00047C  A0D8               	btfss	status,0,c
  1378  00047E  D011               	goto	l121
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;WAFR-01-C001-HD-debug-main.c: 377: {
  1382                           ;WAFR-01-C001-HD-debug-main.c: 378: PORTCbits.RC0 = 1;
  1383  000480  8082               	bsf	3970,0,c	;volatile
  1384                           
  1385                           ;WAFR-01-C001-HD-debug-main.c: 379: PORTCbits.RC1 = 1;
  1386  000482  8282               	bsf	3970,1,c	;volatile
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;WAFR-01-C001-HD-debug-main.c: 380: delay_ms(200);
  1390  000484  0E00               	movlw	0
  1391  000486  6E18               	movwf	delay_ms@x+1,c
  1392  000488  0EC8               	movlw	200
  1393  00048A  6E17               	movwf	delay_ms@x,c
  1394  00048C  EC38  F006         	call	_delay_ms	;wreg free
  1395                           
  1396                           ;WAFR-01-C001-HD-debug-main.c: 381: PORTCbits.RC0 = 0;
  1397  000490  9082               	bcf	3970,0,c	;volatile
  1398                           
  1399                           ;WAFR-01-C001-HD-debug-main.c: 382: PORTCbits.RC1 = 0;
  1400  000492  9282               	bcf	3970,1,c	;volatile
  1401                           
  1402                           ;WAFR-01-C001-HD-debug-main.c: 383: delay_ms(200);
  1403  000494  0E00               	movlw	0
  1404  000496  6E18               	movwf	delay_ms@x+1,c
  1405  000498  0EC8               	movlw	200
  1406  00049A  6E17               	movwf	delay_ms@x,c
  1407  00049C  EC38  F006         	call	_delay_ms	;wreg free
  1408                           
  1409                           ;WAFR-01-C001-HD-debug-main.c: 384: } else
  1410  0004A0  D75C               	goto	l2832
  1411  0004A2                     l121:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;WAFR-01-C001-HD-debug-main.c: 385: {
  1415                           ;WAFR-01-C001-HD-debug-main.c: 386: PORTCbits.RC0 = 1;
  1416  0004A2  8082               	bsf	3970,0,c	;volatile
  1417                           
  1418                           ;WAFR-01-C001-HD-debug-main.c: 387: PORTCbits.RC1 = 1;
  1419  0004A4  8282               	bsf	3970,1,c	;volatile
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;WAFR-01-C001-HD-debug-main.c: 388: delay_ms(100);
  1423  0004A6  0E00               	movlw	0
  1424  0004A8  6E18               	movwf	delay_ms@x+1,c
  1425  0004AA  0E64               	movlw	100
  1426  0004AC  6E17               	movwf	delay_ms@x,c
  1427  0004AE  EC38  F006         	call	_delay_ms	;wreg free
  1428                           
  1429                           ;WAFR-01-C001-HD-debug-main.c: 389: PORTCbits.RC0 = 0;
  1430  0004B2  9082               	bcf	3970,0,c	;volatile
  1431                           
  1432                           ;WAFR-01-C001-HD-debug-main.c: 390: PORTCbits.RC1 = 0;
  1433  0004B4  9282               	bcf	3970,1,c	;volatile
  1434                           
  1435                           ;WAFR-01-C001-HD-debug-main.c: 391: delay_ms(100);
  1436  0004B6  0E00               	movlw	0
  1437  0004B8  6E18               	movwf	delay_ms@x+1,c
  1438  0004BA  0E64               	movlw	100
  1439  0004BC  6E17               	movwf	delay_ms@x,c
  1440  0004BE  EC38  F006         	call	_delay_ms	;wreg free
  1441                           
  1442                           ;WAFR-01-C001-HD-debug-main.c: 392: }
  1443                           ;WAFR-01-C001-HD-debug-main.c: 393: }
  1444                           ;WAFR-01-C001-HD-debug-main.c: 394: } else
  1445  0004C2  D74B               	goto	l2832
  1446  0004C4                     l2910:
  1447                           
  1448                           ;WAFR-01-C001-HD-debug-main.c: 395: {
  1449                           ;WAFR-01-C001-HD-debug-main.c: 396: flagChargeBat = 0 ;
  1450  0004C4  0E00               	movlw	0
  1451  0004C6  0100               	movlb	0	; () banked
  1452  0004C8  6FAC               	movwf	main@flagChargeBat& (0+255),b
  1453                           
  1454                           ; BSR set to: 0
  1455                           
  1456                           ; BSR set to: 0
  1457  0004CA  D747               	goto	l2832
  1458  0004CC                     __end_of_main:
  1459                           	opt stack 0
  1460                           tblptru	equ	0xFF8
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postinc2	equ	0xFDE
  1464                           postdec2	equ	0xFDD
  1465                           fsr2h	equ	0xFDA
  1466                           fsr2l	equ	0xFD9
  1467                           status	equ	0xFD8
  1468                           
  1469 ;; *************** function _ShutDownSystem *****************
  1470 ;; Defined at:
  1471 ;;		line 334 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;		None               void
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1485 ;;      Params:         0       0       0       0
  1486 ;;      Locals:         0       0       0       0
  1487 ;;      Temps:          1       0       0       0
  1488 ;;      Totals:         1       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    2
  1492 ;; This function calls:
  1493 ;;		_delay_ms
  1494 ;;		_turnOffAllLed
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text1
  1501  000B9E                     __ptext1:
  1502                           	opt stack 0
  1503  000B9E                     _ShutDownSystem:
  1504                           	opt stack 28
  1505                           
  1506                           ;system.c: 337: turnOffAllLed();
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;incstack = 0
  1510  000B9E  ECC2  F006         	call	_turnOffAllLed	;wreg free
  1511  000BA2                     l2676:
  1512                           
  1513                           ;system.c: 339: {
  1514                           ;system.c: 340: PORTBbits.RB2 = 0 ;
  1515  000BA2  9481               	bcf	3969,2,c	;volatile
  1516                           
  1517                           ;system.c: 341: PORTCbits.RC2 = ! PORTCbits.RC2 ;
  1518  000BA4  B482               	btfsc	3970,2,c	;volatile
  1519  000BA6  D003               	goto	u2240
  1520  000BA8  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1521  000BAA  2A1D               	incf	??_ShutDownSystem& (0+255),f,c
  1522  000BAC  D001               	goto	u2258
  1523  000BAE                     u2240:
  1524  000BAE  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1525  000BB0                     u2258:
  1526  000BB0  461D               	rlncf	??_ShutDownSystem,f,c
  1527  000BB2  461D               	rlncf	??_ShutDownSystem,f,c
  1528  000BB4  5082               	movf	3970,w,c	;volatile
  1529  000BB6  181D               	xorwf	??_ShutDownSystem,w,c
  1530  000BB8  0BFB               	andlw	-5
  1531  000BBA  181D               	xorwf	??_ShutDownSystem,w,c
  1532  000BBC  6E82               	movwf	3970,c	;volatile
  1533                           
  1534                           ;system.c: 343: PORTCbits.RC1 = ! PORTCbits.RC1 ;
  1535  000BBE  B282               	btfsc	3970,1,c	;volatile
  1536  000BC0  D003               	goto	u2260
  1537  000BC2  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1538  000BC4  2A1D               	incf	??_ShutDownSystem& (0+255),f,c
  1539  000BC6  D001               	goto	u2278
  1540  000BC8                     u2260:
  1541  000BC8  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1542  000BCA                     u2278:
  1543  000BCA  461D               	rlncf	??_ShutDownSystem,f,c
  1544  000BCC  5082               	movf	3970,w,c	;volatile
  1545  000BCE  181D               	xorwf	??_ShutDownSystem,w,c
  1546  000BD0  0BFD               	andlw	-3
  1547  000BD2  181D               	xorwf	??_ShutDownSystem,w,c
  1548  000BD4  6E82               	movwf	3970,c	;volatile
  1549                           
  1550                           ;system.c: 344: delay_ms(80);
  1551  000BD6  0E00               	movlw	0
  1552  000BD8  6E18               	movwf	delay_ms@x+1,c
  1553  000BDA  0E50               	movlw	80
  1554  000BDC  6E17               	movwf	delay_ms@x,c
  1555  000BDE  EC38  F006         	call	_delay_ms	;wreg free
  1556  000BE2  D7DF               	goto	l2676
  1557  000BE4                     __end_of_ShutDownSystem:
  1558                           	opt stack 0
  1559                           tblptru	equ	0xFF8
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           postinc2	equ	0xFDE
  1563                           postdec2	equ	0xFDD
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _delay_ms *****************
  1569 ;; Defined at:
  1570 ;;		line 27 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  x               2   22[COMRAM] unsigned int 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  i               2   26[COMRAM] unsigned int 
  1575 ;;  j               2   24[COMRAM] unsigned int 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;		None               void
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1585 ;;      Params:         2       0       0       0
  1586 ;;      Locals:         4       0       0       0
  1587 ;;      Temps:          0       0       0       0
  1588 ;;      Totals:         6       0       0       0
  1589 ;;Total ram usage:        6 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;;		_ShutDownSystem
  1597 ;;		_delay_s
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text2
  1602  000C70                     __ptext2:
  1603                           	opt stack 0
  1604  000C70                     _delay_ms:
  1605                           	opt stack 29
  1606                           
  1607                           ;user.c: 29: unsigned int i,j;
  1608                           ;user.c: 31: for ( j=0 ; j<x ;j++ )
  1609                           
  1610                           ;incstack = 0
  1611  000C70  0E00               	movlw	0
  1612  000C72  6E1A               	movwf	delay_ms@j+1,c
  1613  000C74  0E00               	movlw	0
  1614  000C76  6E19               	movwf	delay_ms@j,c
  1615  000C78  D00F               	goto	l2394
  1616  000C7A                     l2382:
  1617                           
  1618                           ;user.c: 32: {
  1619                           ;user.c: 33: for ( i=0; i<400; i++ );
  1620  000C7A  0E00               	movlw	0
  1621  000C7C  6E1C               	movwf	delay_ms@i+1,c
  1622  000C7E  0E00               	movlw	0
  1623  000C80  6E1B               	movwf	delay_ms@i,c
  1624  000C82                     l2384:
  1625  000C82  0E90               	movlw	144
  1626  000C84  5C1B               	subwf	delay_ms@i,w,c
  1627  000C86  0E01               	movlw	1
  1628  000C88  581C               	subwfb	delay_ms@i+1,w,c
  1629  000C8A  B0D8               	btfsc	status,0,c
  1630  000C8C  D003               	goto	l2392
  1631  000C8E  4A1B               	infsnz	delay_ms@i,f,c
  1632  000C90  2A1C               	incf	delay_ms@i+1,f,c
  1633  000C92  D7F7               	goto	l2384
  1634  000C94                     l2392:
  1635  000C94  4A19               	infsnz	delay_ms@j,f,c
  1636  000C96  2A1A               	incf	delay_ms@j+1,f,c
  1637  000C98                     l2394:
  1638  000C98  5017               	movf	delay_ms@x,w,c
  1639  000C9A  5C19               	subwf	delay_ms@j,w,c
  1640  000C9C  5018               	movf	delay_ms@x+1,w,c
  1641  000C9E  581A               	subwfb	delay_ms@j+1,w,c
  1642  000CA0  B0D8               	btfsc	status,0,c
  1643  000CA2  0012               	return	
  1644  000CA4  D7EA               	goto	l2382
  1645  000CA6                     __end_of_delay_ms:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           postinc2	equ	0xFDE
  1651                           postdec2	equ	0xFDD
  1652                           fsr2h	equ	0xFDA
  1653                           fsr2l	equ	0xFD9
  1654                           status	equ	0xFD8
  1655                           
  1656 ;; *************** function _ProcessHeat *****************
  1657 ;; Defined at:
  1658 ;;		line 355 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  countHeatTim    4   44[COMRAM] unsigned long 
  1663 ;;  adcValue        2   48[COMRAM] unsigned short 
  1664 ;;  flagStop        1   43[COMRAM] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;		None               void
  1667 ;; Registers used:
  1668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1674 ;;      Params:         0       0       0       0
  1675 ;;      Locals:         7       0       0       0
  1676 ;;      Temps:          4       0       0       0
  1677 ;;      Totals:        11       0       0       0
  1678 ;;Total ram usage:       11 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    4
  1681 ;; This function calls:
  1682 ;;		_GetAdcAD597Value
  1683 ;;		_HeatProcessLedShow
  1684 ;;		_ReadEEprom
  1685 ;;		_WriteEEprom
  1686 ;;		_turnOffAllLed
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text3
  1693  0004CC                     __ptext3:
  1694                           	opt stack 0
  1695  0004CC                     _ProcessHeat:
  1696                           	opt stack 26
  1697                           
  1698                           ;system.c: 357: uint16 adcValue;
  1699                           ;system.c: 358: uint8 flagStop=0 ;
  1700                           
  1701                           ;incstack = 0
  1702  0004CC  0E00               	movlw	0
  1703  0004CE  6E2C               	movwf	ProcessHeat@flagStop,c
  1704                           
  1705                           ;system.c: 359: uint32 countHeatTime = 0 ;
  1706  0004D0  0E00               	movlw	0
  1707  0004D2  6E2D               	movwf	ProcessHeat@countHeatTime,c
  1708  0004D4  0E00               	movlw	0
  1709  0004D6  6E2E               	movwf	ProcessHeat@countHeatTime+1,c
  1710  0004D8  0E00               	movlw	0
  1711  0004DA  6E2F               	movwf	ProcessHeat@countHeatTime+2,c
  1712  0004DC  0E00               	movlw	0
  1713  0004DE  6E30               	movwf	ProcessHeat@countHeatTime+3,c
  1714                           
  1715                           ;system.c: 363: WriteEEprom ( 0, levelTmpSetting );
  1716  0004E0  C062  F017         	movff	_levelTmpSetting,WriteEEprom@data
  1717  0004E4  0E00               	movlw	0
  1718  0004E6  EC53  F006         	call	_WriteEEprom
  1719                           
  1720                           ;system.c: 367: levelTmpSetting = ReadEEprom( 0 );
  1721  0004EA  0E00               	movlw	0
  1722  0004EC  ECB7  F006         	call	_ReadEEprom
  1723  0004F0  6E62               	movwf	_levelTmpSetting,c
  1724                           
  1725                           ;system.c: 369: PORTBbits.RB1 = 1 ;
  1726  0004F2  8281               	bsf	3969,1,c	;volatile
  1727                           
  1728                           ;system.c: 371: turnOffAllLed();
  1729  0004F4  ECC2  F006         	call	_turnOffAllLed	;wreg free
  1730                           
  1731                           ;system.c: 372: countHeatTime = timeSystemRun ;
  1732  0004F8  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1733  0004FC  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1734  000500  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1735  000504  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1736  000508                     l2604:
  1737                           
  1738                           ;system.c: 374: {
  1739                           ;system.c: 376: if ( (countHeatTime + 1500 ) < timeSystemRun )
  1740  000508  0EDC               	movlw	220
  1741  00050A  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1742  00050C  6E28               	movwf	??_ProcessHeat& (0+255),c
  1743  00050E  0E05               	movlw	5
  1744  000510  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1745  000512  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1746  000514  0E00               	movlw	0
  1747  000516  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1748  000518  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1749  00051A  0E00               	movlw	0
  1750  00051C  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1751  00051E  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1752  000520  5059               	movf	_timeSystemRun,w,c
  1753  000522  5C28               	subwf	??_ProcessHeat,w,c
  1754  000524  505A               	movf	_timeSystemRun+1,w,c
  1755  000526  5829               	subwfb	??_ProcessHeat+1,w,c
  1756  000528  505B               	movf	_timeSystemRun+2,w,c
  1757  00052A  582A               	subwfb	??_ProcessHeat+2,w,c
  1758  00052C  505C               	movf	_timeSystemRun+3,w,c
  1759  00052E  582B               	subwfb	??_ProcessHeat+3,w,c
  1760  000530  B0D8               	btfsc	status,0,c
  1761  000532  D003               	goto	l2608
  1762                           
  1763                           ;system.c: 377: {
  1764                           ;system.c: 378: flagStop = 1 ;
  1765  000534  0E01               	movlw	1
  1766  000536  6E2C               	movwf	ProcessHeat@flagStop,c
  1767                           
  1768                           ;system.c: 379: break;
  1769  000538  D0C5               	goto	l273
  1770  00053A                     l2608:
  1771                           
  1772                           ;system.c: 380: }
  1773                           ;system.c: 382: HeatProcessLedShow();
  1774  00053A  EC5B  F005         	call	_HeatProcessLedShow	;wreg free
  1775                           
  1776                           ;system.c: 384: adcValue = GetAdcAD597Value( 0 );
  1777  00053E  0E00               	movlw	0
  1778  000540  EC08  F005         	call	_GetAdcAD597Value
  1779  000544  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1780  000548  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1781                           
  1782                           ;system.c: 386: switch ( levelTmpSetting )
  1783  00054C  D0AE               	goto	l2668
  1784  00054E                     l2612:
  1785                           
  1786                           ;system.c: 389: if ( adcValue > 180 )
  1787  00054E  5032               	movf	ProcessHeat@adcValue+1,w,c
  1788  000550  E104               	bnz	u2140
  1789  000552  0EB5               	movlw	181
  1790  000554  5C31               	subwf	ProcessHeat@adcValue,w,c
  1791  000556  A0D8               	btfss	status,0,c
  1792  000558  D0B2               	goto	l2670
  1793  00055A                     u2140:
  1794                           
  1795                           ;system.c: 390: {
  1796                           ;system.c: 391: flagStop = 1 ;
  1797  00055A  0E01               	movlw	1
  1798  00055C  6E2C               	movwf	ProcessHeat@flagStop,c
  1799                           
  1800                           ;system.c: 392: PORTCbits.RC2 = 1 ;
  1801  00055E  8482               	bsf	3970,2,c	;volatile
  1802                           
  1803                           ;system.c: 394: countHeatTime = timeSystemRun ;
  1804  000560  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1805  000564  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1806  000568  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1807  00056C  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1808                           
  1809                           ;system.c: 395: while ( (countHeatTime + 1000) > timeSystemRun )
  1810  000570  D010               	goto	l2626
  1811  000572                     l2620:
  1812                           
  1813                           ;system.c: 396: {
  1814                           ;system.c: 397: adcValue = GetAdcAD597Value( 0 );
  1815  000572  0E00               	movlw	0
  1816  000574  EC08  F005         	call	_GetAdcAD597Value
  1817  000578  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1818  00057C  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1819                           
  1820                           ;system.c: 398: if ( adcValue > 180)
  1821  000580  5032               	movf	ProcessHeat@adcValue+1,w,c
  1822  000582  E104               	bnz	u2150
  1823  000584  0EB5               	movlw	181
  1824  000586  5C31               	subwf	ProcessHeat@adcValue,w,c
  1825  000588  A0D8               	btfss	status,0,c
  1826  00058A  D002               	goto	l279
  1827  00058C                     u2150:
  1828                           
  1829                           ;system.c: 399: {
  1830                           ;system.c: 400: PORTBbits.RB1 = 0 ;
  1831  00058C  9281               	bcf	3969,1,c	;volatile
  1832                           
  1833                           ;system.c: 401: }else
  1834  00058E  D001               	goto	l2626
  1835  000590                     l279:
  1836                           
  1837                           ;system.c: 402: {
  1838                           ;system.c: 403: PORTBbits.RB1 = 1 ;
  1839  000590  8281               	bsf	3969,1,c	;volatile
  1840  000592                     l2626:
  1841  000592  0EE8               	movlw	232
  1842  000594  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1843  000596  6E28               	movwf	??_ProcessHeat& (0+255),c
  1844  000598  0E03               	movlw	3
  1845  00059A  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1846  00059C  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1847  00059E  0E00               	movlw	0
  1848  0005A0  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1849  0005A2  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1850  0005A4  0E00               	movlw	0
  1851  0005A6  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1852  0005A8  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1853  0005AA  5028               	movf	??_ProcessHeat,w,c
  1854  0005AC  5C59               	subwf	_timeSystemRun,w,c
  1855  0005AE  5029               	movf	??_ProcessHeat+1,w,c
  1856  0005B0  585A               	subwfb	_timeSystemRun+1,w,c
  1857  0005B2  502A               	movf	??_ProcessHeat+2,w,c
  1858  0005B4  585B               	subwfb	_timeSystemRun+2,w,c
  1859  0005B6  502B               	movf	??_ProcessHeat+3,w,c
  1860  0005B8  585C               	subwfb	_timeSystemRun+3,w,c
  1861  0005BA  B0D8               	btfsc	status,0,c
  1862  0005BC  D080               	goto	l2670
  1863  0005BE  D7D9               	goto	l2620
  1864  0005C0                     l2628:
  1865                           
  1866                           ;system.c: 409: if ( adcValue > 200 )
  1867  0005C0  5032               	movf	ProcessHeat@adcValue+1,w,c
  1868  0005C2  E104               	bnz	u2170
  1869  0005C4  0EC9               	movlw	201
  1870  0005C6  5C31               	subwf	ProcessHeat@adcValue,w,c
  1871  0005C8  A0D8               	btfss	status,0,c
  1872  0005CA  D079               	goto	l2670
  1873  0005CC                     u2170:
  1874                           
  1875                           ;system.c: 410: {
  1876                           ;system.c: 411: flagStop = 1 ;
  1877  0005CC  0E01               	movlw	1
  1878  0005CE  6E2C               	movwf	ProcessHeat@flagStop,c
  1879                           
  1880                           ;system.c: 412: PORTCbits.RC1 = 1 ;
  1881  0005D0  8282               	bsf	3970,1,c	;volatile
  1882                           
  1883                           ;system.c: 413: PORTCbits.RC4 = 1 ;
  1884  0005D2  8882               	bsf	3970,4,c	;volatile
  1885                           
  1886                           ;system.c: 415: countHeatTime = timeSystemRun ;
  1887  0005D4  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1888  0005D8  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1889  0005DC  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1890  0005E0  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1891                           
  1892                           ;system.c: 416: while ( (countHeatTime + 1000) > timeSystemRun )
  1893  0005E4  D010               	goto	l2644
  1894  0005E6                     l2638:
  1895                           
  1896                           ;system.c: 417: {
  1897                           ;system.c: 418: adcValue = GetAdcAD597Value( 0 );
  1898  0005E6  0E00               	movlw	0
  1899  0005E8  EC08  F005         	call	_GetAdcAD597Value
  1900  0005EC  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1901  0005F0  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1902                           
  1903                           ;system.c: 419: if ( adcValue > 200)
  1904  0005F4  5032               	movf	ProcessHeat@adcValue+1,w,c
  1905  0005F6  E104               	bnz	u2180
  1906  0005F8  0EC9               	movlw	201
  1907  0005FA  5C31               	subwf	ProcessHeat@adcValue,w,c
  1908  0005FC  A0D8               	btfss	status,0,c
  1909  0005FE  D002               	goto	l287
  1910  000600                     u2180:
  1911                           
  1912                           ;system.c: 420: {
  1913                           ;system.c: 421: PORTBbits.RB1 = 0 ;
  1914  000600  9281               	bcf	3969,1,c	;volatile
  1915                           
  1916                           ;system.c: 422: }else
  1917  000602  D001               	goto	l2644
  1918  000604                     l287:
  1919                           
  1920                           ;system.c: 423: {
  1921                           ;system.c: 424: PORTBbits.RB1 = 1 ;
  1922  000604  8281               	bsf	3969,1,c	;volatile
  1923  000606                     l2644:
  1924  000606  0EE8               	movlw	232
  1925  000608  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1926  00060A  6E28               	movwf	??_ProcessHeat& (0+255),c
  1927  00060C  0E03               	movlw	3
  1928  00060E  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1929  000610  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1930  000612  0E00               	movlw	0
  1931  000614  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1932  000616  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1933  000618  0E00               	movlw	0
  1934  00061A  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1935  00061C  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1936  00061E  5028               	movf	??_ProcessHeat,w,c
  1937  000620  5C59               	subwf	_timeSystemRun,w,c
  1938  000622  5029               	movf	??_ProcessHeat+1,w,c
  1939  000624  585A               	subwfb	_timeSystemRun+1,w,c
  1940  000626  502A               	movf	??_ProcessHeat+2,w,c
  1941  000628  585B               	subwfb	_timeSystemRun+2,w,c
  1942  00062A  502B               	movf	??_ProcessHeat+3,w,c
  1943  00062C  585C               	subwfb	_timeSystemRun+3,w,c
  1944  00062E  B0D8               	btfsc	status,0,c
  1945  000630  D046               	goto	l2670
  1946  000632  D7D9               	goto	l2638
  1947  000634                     l2646:
  1948                           
  1949                           ;system.c: 430: if ( adcValue > 220 )
  1950  000634  5032               	movf	ProcessHeat@adcValue+1,w,c
  1951  000636  E104               	bnz	u2200
  1952  000638  0EDD               	movlw	221
  1953  00063A  5C31               	subwf	ProcessHeat@adcValue,w,c
  1954  00063C  A0D8               	btfss	status,0,c
  1955  00063E  D03F               	goto	l2670
  1956  000640                     u2200:
  1957                           
  1958                           ;system.c: 431: {
  1959                           ;system.c: 432: flagStop = 1 ;
  1960  000640  0E01               	movlw	1
  1961  000642  6E2C               	movwf	ProcessHeat@flagStop,c
  1962                           
  1963                           ;system.c: 433: PORTCbits.RC0 = 1 ;
  1964  000644  8082               	bsf	3970,0,c	;volatile
  1965                           
  1966                           ;system.c: 434: PORTCbits.RC3 = 1 ;
  1967  000646  8682               	bsf	3970,3,c	;volatile
  1968                           
  1969                           ;system.c: 435: PORTCbits.RC6 = 1 ;
  1970  000648  8C82               	bsf	3970,6,c	;volatile
  1971                           
  1972                           ;system.c: 437: countHeatTime = timeSystemRun ;
  1973  00064A  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1974  00064E  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1975  000652  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1976  000656  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1977                           
  1978                           ;system.c: 438: while ( (countHeatTime + 1000) > timeSystemRun )
  1979  00065A  D010               	goto	l2664
  1980  00065C                     l2658:
  1981                           
  1982                           ;system.c: 439: {
  1983                           ;system.c: 440: adcValue = GetAdcAD597Value( 0 );
  1984  00065C  0E00               	movlw	0
  1985  00065E  EC08  F005         	call	_GetAdcAD597Value
  1986  000662  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1987  000666  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1988                           
  1989                           ;system.c: 441: if ( adcValue > 220)
  1990  00066A  5032               	movf	ProcessHeat@adcValue+1,w,c
  1991  00066C  E104               	bnz	u2210
  1992  00066E  0EDD               	movlw	221
  1993  000670  5C31               	subwf	ProcessHeat@adcValue,w,c
  1994  000672  A0D8               	btfss	status,0,c
  1995  000674  D002               	goto	l294
  1996  000676                     u2210:
  1997                           
  1998                           ;system.c: 442: {
  1999                           ;system.c: 443: PORTBbits.RB1 = 0 ;
  2000  000676  9281               	bcf	3969,1,c	;volatile
  2001                           
  2002                           ;system.c: 444: }else
  2003  000678  D001               	goto	l2664
  2004  00067A                     l294:
  2005                           
  2006                           ;system.c: 445: {
  2007                           ;system.c: 446: PORTBbits.RB1 = 1 ;
  2008  00067A  8281               	bsf	3969,1,c	;volatile
  2009  00067C                     l2664:
  2010  00067C  0EE8               	movlw	232
  2011  00067E  242D               	addwf	ProcessHeat@countHeatTime,w,c
  2012  000680  6E28               	movwf	??_ProcessHeat& (0+255),c
  2013  000682  0E03               	movlw	3
  2014  000684  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  2015  000686  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  2016  000688  0E00               	movlw	0
  2017  00068A  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  2018  00068C  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  2019  00068E  0E00               	movlw	0
  2020  000690  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  2021  000692  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  2022  000694  5028               	movf	??_ProcessHeat,w,c
  2023  000696  5C59               	subwf	_timeSystemRun,w,c
  2024  000698  5029               	movf	??_ProcessHeat+1,w,c
  2025  00069A  585A               	subwfb	_timeSystemRun+1,w,c
  2026  00069C  502A               	movf	??_ProcessHeat+2,w,c
  2027  00069E  585B               	subwfb	_timeSystemRun+2,w,c
  2028  0006A0  502B               	movf	??_ProcessHeat+3,w,c
  2029  0006A2  585C               	subwfb	_timeSystemRun+3,w,c
  2030  0006A4  B0D8               	btfsc	status,0,c
  2031  0006A6  D00B               	goto	l2670
  2032  0006A8  D7D9               	goto	l2658
  2033  0006AA                     l2668:
  2034  0006AA  5062               	movf	_levelTmpSetting,w,c
  2035                           
  2036                           ; Switch size 1, requested type "space"
  2037                           ; Number of cases is 3, Range of values is 1 to 3
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte           10     6 (average)
  2041                           ;	Chosen strategy is simple_byte
  2042  0006AC  0A01               	xorlw	1	; case 1
  2043  0006AE  B4D8               	btfsc	status,2,c
  2044  0006B0  D74E               	goto	l2612
  2045  0006B2  0A03               	xorlw	3	; case 2
  2046  0006B4  B4D8               	btfsc	status,2,c
  2047  0006B6  D784               	goto	l2628
  2048  0006B8  0A01               	xorlw	1	; case 3
  2049  0006BA  B4D8               	btfsc	status,2,c
  2050  0006BC  D7BB               	goto	l2646
  2051  0006BE                     l2670:
  2052                           
  2053                           ;system.c: 455: if ( flagStop )
  2054  0006BE  502C               	movf	ProcessHeat@flagStop,w,c
  2055  0006C0  B4D8               	btfsc	status,2,c
  2056  0006C2  D722               	goto	l2604
  2057  0006C4                     l273:
  2058                           
  2059                           ;system.c: 458: }
  2060                           ;system.c: 459: }
  2061                           ;system.c: 461: PORTBbits.RB1 = 0 ;
  2062  0006C4  9281               	bcf	3969,1,c	;volatile
  2063  0006C6  0012               	return		;funcret
  2064  0006C8                     __end_of_ProcessHeat:
  2065                           	opt stack 0
  2066                           tblptru	equ	0xFF8
  2067                           postinc0	equ	0xFEE
  2068                           wreg	equ	0xFE8
  2069                           postinc2	equ	0xFDE
  2070                           postdec2	equ	0xFDD
  2071                           fsr2h	equ	0xFDA
  2072                           fsr2l	equ	0xFD9
  2073                           status	equ	0xFD8
  2074                           
  2075 ;; *************** function _WriteEEprom *****************
  2076 ;; Defined at:
  2077 ;;		line 47 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  addr            1    wreg     unsigned char 
  2080 ;;  data            1   22[COMRAM] unsigned char 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  addr            1   23[COMRAM] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;		None               void
  2085 ;; Registers used:
  2086 ;;		wreg, status,2
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2092 ;;      Params:         1       0       0       0
  2093 ;;      Locals:         1       0       0       0
  2094 ;;      Temps:          0       0       0       0
  2095 ;;      Totals:         2       0       0       0
  2096 ;;Total ram usage:        2 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    1
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_ProcessHeat
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text4
  2107  000CA6                     __ptext4:
  2108                           	opt stack 0
  2109  000CA6                     _WriteEEprom:
  2110                           	opt stack 28
  2111                           
  2112                           ;incstack = 0
  2113                           ;WriteEEprom@addr stored from wreg
  2114  000CA6  6E18               	movwf	WriteEEprom@addr,c
  2115  000CA8                     l386:
  2116                           
  2117                           ;EEprom.c: 50: while( EECON1bits.WR ) ;
  2118  000CA8  B2A6               	btfsc	4006,1,c	;volatile
  2119  000CAA  D7FE               	goto	l386
  2120                           
  2121                           ;EEprom.c: 52: EEADR = addr ;
  2122  000CAC  C018  FFA9         	movff	WriteEEprom@addr,4009	;volatile
  2123                           
  2124                           ;EEprom.c: 53: EEDATA = data ;
  2125  000CB0  C017  FFA8         	movff	WriteEEprom@data,4008	;volatile
  2126                           
  2127                           ;EEprom.c: 54: EECON1bits.EEPGD = 0 ;
  2128  000CB4  9EA6               	bcf	4006,7,c	;volatile
  2129                           
  2130                           ;EEprom.c: 56: EECON1bits.WREN = 1 ;
  2131  000CB6  84A6               	bsf	4006,2,c	;volatile
  2132                           
  2133                           ;EEprom.c: 59: INTCONbits.GIE = 0 ;
  2134  000CB8  9EF2               	bcf	intcon,7,c	;volatile
  2135                           
  2136                           ;EEprom.c: 60: EECON2 = 0X55;
  2137  000CBA  0E55               	movlw	85
  2138  000CBC  6EA7               	movwf	4007,c	;volatile
  2139                           
  2140                           ;EEprom.c: 61: EECON2 = 0XAA;
  2141  000CBE  0EAA               	movlw	170
  2142  000CC0  6EA7               	movwf	4007,c	;volatile
  2143                           
  2144                           ;EEprom.c: 62: EECON1bits.WR = 1 ;
  2145  000CC2  82A6               	bsf	4006,1,c	;volatile
  2146                           
  2147                           ;EEprom.c: 63: INTCONbits.GIE = 1 ;
  2148  000CC4  8EF2               	bsf	intcon,7,c	;volatile
  2149  000CC6                     l2458:
  2150                           
  2151                           ;EEprom.c: 66: while( EECON1bits.WR) ;
  2152  000CC6  B2A6               	btfsc	4006,1,c	;volatile
  2153  000CC8  D7FE               	goto	l2458
  2154                           
  2155                           ;EEprom.c: 67: EECON1bits.WREN = 0 ;
  2156  000CCA  94A6               	bcf	4006,2,c	;volatile
  2157  000CCC  0012               	return		;funcret
  2158  000CCE                     __end_of_WriteEEprom:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           intcon	equ	0xFF2
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           postinc2	equ	0xFDE
  2165                           postdec2	equ	0xFDD
  2166                           fsr2h	equ	0xFDA
  2167                           fsr2l	equ	0xFD9
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function _ReadEEprom *****************
  2171 ;; Defined at:
  2172 ;;		line 79 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  addr            1    wreg     unsigned char 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  addr            1   22[COMRAM] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      unsigned char 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2186 ;;      Params:         0       0       0       0
  2187 ;;      Locals:         1       0       0       0
  2188 ;;      Temps:          0       0       0       0
  2189 ;;      Totals:         1       0       0       0
  2190 ;;Total ram usage:        1 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;;		_ProcessHeat
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text5
  2202  000D6E                     __ptext5:
  2203                           	opt stack 0
  2204  000D6E                     _ReadEEprom:
  2205                           	opt stack 29
  2206                           
  2207                           ;incstack = 0
  2208                           ;ReadEEprom@addr stored from wreg
  2209  000D6E  6E17               	movwf	ReadEEprom@addr,c
  2210  000D70                     l393:
  2211                           
  2212                           ;EEprom.c: 82: while( EECON1bits.RD ) ;
  2213  000D70  B0A6               	btfsc	4006,0,c	;volatile
  2214  000D72  D7FE               	goto	l393
  2215                           
  2216                           ;EEprom.c: 84: EEADR = addr ;
  2217  000D74  C017  FFA9         	movff	ReadEEprom@addr,4009	;volatile
  2218                           
  2219                           ;EEprom.c: 85: EECON1bits.EEPGD = 0 ;
  2220  000D78  9EA6               	bcf	4006,7,c	;volatile
  2221                           
  2222                           ;EEprom.c: 87: EECON1bits.RD = 1 ;
  2223  000D7A  80A6               	bsf	4006,0,c	;volatile
  2224  000D7C                     l2402:
  2225                           
  2226                           ;EEprom.c: 89: while ( EECON1bits.RD ) ;
  2227  000D7C  B0A6               	btfsc	4006,0,c	;volatile
  2228  000D7E  D7FE               	goto	l2402
  2229                           
  2230                           ;EEprom.c: 91: return( EEDATA );
  2231  000D80  50A8               	movf	4008,w,c	;volatile
  2232  000D82  0012               	return		;funcret
  2233  000D84                     __end_of_ReadEEprom:
  2234                           	opt stack 0
  2235                           tblptru	equ	0xFF8
  2236                           intcon	equ	0xFF2
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postinc2	equ	0xFDE
  2240                           postdec2	equ	0xFDD
  2241                           fsr2h	equ	0xFDA
  2242                           fsr2l	equ	0xFD9
  2243                           status	equ	0xFD8
  2244                           
  2245 ;; *************** function _HeatProcessLedShow *****************
  2246 ;; Defined at:
  2247 ;;		line 92 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;		None               void
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2261 ;;      Params:         0       0       0       0
  2262 ;;      Locals:         0       0       0       0
  2263 ;;      Temps:          0       0       0       0
  2264 ;;      Totals:         0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_ProcessHeat
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text6
  2276  000AB6                     __ptext6:
  2277                           	opt stack 0
  2278  000AB6                     _HeatProcessLedShow:
  2279                           	opt stack 28
  2280                           
  2281                           ;RGBLedDisplay.c: 96: {
  2282                           ;RGBLedDisplay.c: 97: switch ( levelTmpSetting )
  2283                           
  2284                           ;incstack = 0
  2285                           ;RGBLedDisplay.c: 95: while(1)
  2286  000AB6  D03F               	goto	l2492
  2287  000AB8                     l2460:
  2288                           
  2289                           ;RGBLedDisplay.c: 100: if ( timerHalfSecond < 1)
  2290  000AB8  505D               	movf	_timerHalfSecond,w,c
  2291  000ABA  105E               	iorwf	_timerHalfSecond+1,w,c
  2292  000ABC  A4D8               	btfss	status,2,c
  2293  000ABE  D002               	goto	l2464
  2294                           
  2295                           ;RGBLedDisplay.c: 101: {
  2296                           ;RGBLedDisplay.c: 102: PORTCbits.RC2 = 1 ;
  2297  000AC0  8482               	bsf	3970,2,c	;volatile
  2298                           
  2299                           ;RGBLedDisplay.c: 103: }
  2300  000AC2  0012               	return	
  2301  000AC4                     l2464:
  2302                           
  2303                           ;RGBLedDisplay.c: 104: else if ( timerHalfSecond <2 )
  2304  000AC4  505E               	movf	_timerHalfSecond+1,w,c
  2305  000AC6  E106               	bnz	l2468
  2306  000AC8  0E02               	movlw	2
  2307  000ACA  5C5D               	subwf	_timerHalfSecond,w,c
  2308  000ACC  B0D8               	btfsc	status,0,c
  2309  000ACE  D002               	goto	l2468
  2310                           
  2311                           ;RGBLedDisplay.c: 105: {
  2312                           ;RGBLedDisplay.c: 106: PORTCbits.RC2 = 0 ;
  2313  000AD0  9482               	bcf	3970,2,c	;volatile
  2314                           
  2315                           ;RGBLedDisplay.c: 107: }else
  2316  000AD2  0012               	return	
  2317  000AD4                     l2468:
  2318                           
  2319                           ;RGBLedDisplay.c: 108: {
  2320                           ;RGBLedDisplay.c: 109: timerHalfSecond = 0 ;
  2321  000AD4  0E00               	movlw	0
  2322  000AD6  6E5E               	movwf	_timerHalfSecond+1,c
  2323  000AD8  0E00               	movlw	0
  2324  000ADA  6E5D               	movwf	_timerHalfSecond,c
  2325                           
  2326                           ;RGBLedDisplay.c: 110: }
  2327                           ;RGBLedDisplay.c: 111: break;
  2328  000ADC  0012               	return	
  2329  000ADE                     l2470:
  2330                           
  2331                           ;RGBLedDisplay.c: 113: if ( timerHalfSecond < 1)
  2332  000ADE  505D               	movf	_timerHalfSecond,w,c
  2333  000AE0  105E               	iorwf	_timerHalfSecond+1,w,c
  2334  000AE2  A4D8               	btfss	status,2,c
  2335  000AE4  D003               	goto	l2474
  2336                           
  2337                           ;RGBLedDisplay.c: 114: {
  2338                           ;RGBLedDisplay.c: 115: PORTCbits.RC1 = 1 ;
  2339  000AE6  8282               	bsf	3970,1,c	;volatile
  2340                           
  2341                           ;RGBLedDisplay.c: 116: PORTCbits.RC4 = 1;
  2342  000AE8  8882               	bsf	3970,4,c	;volatile
  2343                           
  2344                           ;RGBLedDisplay.c: 117: }
  2345  000AEA  0012               	return	
  2346  000AEC                     l2474:
  2347                           
  2348                           ;RGBLedDisplay.c: 118: else if ( timerHalfSecond < 2 )
  2349  000AEC  505E               	movf	_timerHalfSecond+1,w,c
  2350  000AEE  E107               	bnz	l2478
  2351  000AF0  0E02               	movlw	2
  2352  000AF2  5C5D               	subwf	_timerHalfSecond,w,c
  2353  000AF4  B0D8               	btfsc	status,0,c
  2354  000AF6  D003               	goto	l2478
  2355                           
  2356                           ;RGBLedDisplay.c: 119: {
  2357                           ;RGBLedDisplay.c: 120: PORTCbits.RC1 = 0;
  2358  000AF8  9282               	bcf	3970,1,c	;volatile
  2359                           
  2360                           ;RGBLedDisplay.c: 121: PORTCbits.RC4 = 0;
  2361  000AFA  9882               	bcf	3970,4,c	;volatile
  2362                           
  2363                           ;RGBLedDisplay.c: 122: }else
  2364  000AFC  0012               	return	
  2365  000AFE                     l2478:
  2366                           
  2367                           ;RGBLedDisplay.c: 123: {
  2368                           ;RGBLedDisplay.c: 124: timerHalfSecond = 0 ;
  2369  000AFE  0E00               	movlw	0
  2370  000B00  6E5E               	movwf	_timerHalfSecond+1,c
  2371  000B02  0E00               	movlw	0
  2372  000B04  6E5D               	movwf	_timerHalfSecond,c
  2373                           
  2374                           ;RGBLedDisplay.c: 125: }
  2375                           ;RGBLedDisplay.c: 126: break;
  2376  000B06  0012               	return	
  2377  000B08                     l2480:
  2378                           
  2379                           ;RGBLedDisplay.c: 128: if ( timerHalfSecond < 1)
  2380  000B08  505D               	movf	_timerHalfSecond,w,c
  2381  000B0A  105E               	iorwf	_timerHalfSecond+1,w,c
  2382  000B0C  A4D8               	btfss	status,2,c
  2383  000B0E  D004               	goto	l2484
  2384                           
  2385                           ;RGBLedDisplay.c: 129: {
  2386                           ;RGBLedDisplay.c: 130: PORTCbits.RC0 = 1 ;
  2387  000B10  8082               	bsf	3970,0,c	;volatile
  2388                           
  2389                           ;RGBLedDisplay.c: 131: PORTCbits.RC3 = 1;
  2390  000B12  8682               	bsf	3970,3,c	;volatile
  2391                           
  2392                           ;RGBLedDisplay.c: 132: PORTCbits.RC6 = 1;
  2393  000B14  8C82               	bsf	3970,6,c	;volatile
  2394                           
  2395                           ;RGBLedDisplay.c: 133: }
  2396  000B16  0012               	return	
  2397  000B18                     l2484:
  2398                           
  2399                           ;RGBLedDisplay.c: 134: else if ( timerHalfSecond < 2 )
  2400  000B18  505E               	movf	_timerHalfSecond+1,w,c
  2401  000B1A  E108               	bnz	l2488
  2402  000B1C  0E02               	movlw	2
  2403  000B1E  5C5D               	subwf	_timerHalfSecond,w,c
  2404  000B20  B0D8               	btfsc	status,0,c
  2405  000B22  D004               	goto	l2488
  2406                           
  2407                           ;RGBLedDisplay.c: 135: {
  2408                           ;RGBLedDisplay.c: 136: PORTCbits.RC0 = 0 ;
  2409  000B24  9082               	bcf	3970,0,c	;volatile
  2410                           
  2411                           ;RGBLedDisplay.c: 137: PORTCbits.RC3 = 0;
  2412  000B26  9682               	bcf	3970,3,c	;volatile
  2413                           
  2414                           ;RGBLedDisplay.c: 138: PORTCbits.RC6 = 0;
  2415  000B28  9C82               	bcf	3970,6,c	;volatile
  2416                           
  2417                           ;RGBLedDisplay.c: 139: }else
  2418  000B2A  0012               	return	
  2419  000B2C                     l2488:
  2420                           
  2421                           ;RGBLedDisplay.c: 140: {
  2422                           ;RGBLedDisplay.c: 141: timerHalfSecond = 0 ;
  2423  000B2C  0E00               	movlw	0
  2424  000B2E  6E5E               	movwf	_timerHalfSecond+1,c
  2425  000B30  0E00               	movlw	0
  2426  000B32  6E5D               	movwf	_timerHalfSecond,c
  2427                           
  2428                           ;RGBLedDisplay.c: 146: }
  2429                           
  2430                           ;RGBLedDisplay.c: 145: break;
  2431                           
  2432                           ;RGBLedDisplay.c: 144: default:
  2433                           
  2434                           ;RGBLedDisplay.c: 142: }
  2435                           ;RGBLedDisplay.c: 143: break;
  2436  000B34  0012               	return	
  2437  000B36                     l2492:
  2438  000B36  5062               	movf	_levelTmpSetting,w,c
  2439                           
  2440                           ; Switch size 1, requested type "space"
  2441                           ; Number of cases is 3, Range of values is 1 to 3
  2442                           ; switch strategies available:
  2443                           ; Name         Instructions Cycles
  2444                           ; simple_byte           10     6 (average)
  2445                           ;	Chosen strategy is simple_byte
  2446  000B38  0A01               	xorlw	1	; case 1
  2447  000B3A  B4D8               	btfsc	status,2,c
  2448  000B3C  D7BD               	goto	l2460
  2449  000B3E  0A03               	xorlw	3	; case 2
  2450  000B40  B4D8               	btfsc	status,2,c
  2451  000B42  D7CD               	goto	l2470
  2452  000B44  0A01               	xorlw	1	; case 3
  2453  000B46  A4D8               	btfss	status,2,c
  2454                           
  2455                           ;RGBLedDisplay.c: 148: break;
  2456  000B48  0012               	return	
  2457  000B4A  D7DE               	goto	l2480
  2458  000B4C                     __end_of_HeatProcessLedShow:
  2459                           	opt stack 0
  2460                           tblptru	equ	0xFF8
  2461                           intcon	equ	0xFF2
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _GetAdcAD597Value *****************
  2471 ;; Defined at:
  2472 ;;		line 509 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  channelNumbe    1    wreg     unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  2477 ;;  temp            2   36[COMRAM] unsigned short 
  2478 ;;  i               1   38[COMRAM] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  2   31[COMRAM] unsigned short 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2488 ;;      Params:         2       0       0       0
  2489 ;;      Locals:         4       0       0       0
  2490 ;;      Temps:          2       0       0       0
  2491 ;;      Totals:         8       0       0       0
  2492 ;;Total ram usage:        8 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    3
  2495 ;; This function calls:
  2496 ;;		_AD_Converter
  2497 ;;		___lwdiv
  2498 ;; This function is called by:
  2499 ;;		_main
  2500 ;;		_ProcessHeat
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text7
  2505  000A10                     __ptext7:
  2506                           	opt stack 0
  2507  000A10                     _GetAdcAD597Value:
  2508                           	opt stack 26
  2509                           
  2510                           ;incstack = 0
  2511                           ;GetAdcAD597Value@channelNumber stored from wreg
  2512  000A10  6E24               	movwf	GetAdcAD597Value@channelNumber,c
  2513                           
  2514                           ;system.c: 511: uint8 i;
  2515                           ;system.c: 512: uint16 temp = 0 ;
  2516  000A12  0E00               	movlw	0
  2517  000A14  6E26               	movwf	GetAdcAD597Value@temp+1,c
  2518  000A16  0E00               	movlw	0
  2519  000A18  6E25               	movwf	GetAdcAD597Value@temp,c
  2520                           
  2521                           ;system.c: 515: for ( i=0; i< ( 10-1) ;i++)
  2522  000A1A  0E00               	movlw	0
  2523  000A1C  6E27               	movwf	GetAdcAD597Value@i,c
  2524  000A1E                     l2406:
  2525  000A1E  0E08               	movlw	8
  2526  000A20  6427               	cpfsgt	GetAdcAD597Value@i,c
  2527  000A22  D001               	goto	l2410
  2528  000A24  D01E               	goto	l2416
  2529  000A26                     l2410:
  2530                           
  2531                           ;system.c: 516: {
  2532                           ;system.c: 517: adcAD597Value[i] = adcAD597Value[i+1] ;
  2533  000A26  5027               	movf	GetAdcAD597Value@i,w,c
  2534  000A28  6E22               	movwf	??_GetAdcAD597Value& (0+255),c
  2535  000A2A  6A23               	clrf	(??_GetAdcAD597Value+1)& (0+255),c
  2536  000A2C  90D8               	bcf	status,0,c
  2537  000A2E  3622               	rlcf	??_GetAdcAD597Value,f,c
  2538  000A30  3623               	rlcf	??_GetAdcAD597Value+1,f,c
  2539  000A32  0E02               	movlw	2
  2540  000A34  2622               	addwf	??_GetAdcAD597Value,f,c
  2541  000A36  0E00               	movlw	0
  2542  000A38  2223               	addwfc	??_GetAdcAD597Value+1,f,c
  2543  000A3A  0E80               	movlw	low _adcAD597Value
  2544  000A3C  2422               	addwf	??_GetAdcAD597Value,w,c
  2545  000A3E  6ED9               	movwf	fsr2l,c
  2546  000A40  0E00               	movlw	high _adcAD597Value
  2547  000A42  2023               	addwfc	??_GetAdcAD597Value+1,w,c
  2548  000A44  6EDA               	movwf	fsr2h,c
  2549  000A46  5027               	movf	GetAdcAD597Value@i,w,c
  2550  000A48  0D02               	mullw	2
  2551  000A4A  0E80               	movlw	low _adcAD597Value
  2552  000A4C  24F3               	addwf	prodl,w,c
  2553  000A4E  6EE1               	movwf	fsr1l,c
  2554  000A50  0E00               	movlw	high _adcAD597Value
  2555  000A52  20F4               	addwfc	prodh,w,c
  2556  000A54  6EE2               	movwf	fsr1h,c
  2557  000A56  CFDE FFE6          	movff	postinc2,postinc1
  2558  000A5A  CFDD FFE5          	movff	postdec2,postdec1
  2559  000A5E  2A27               	incf	GetAdcAD597Value@i,f,c
  2560  000A60  D7DE               	goto	l2406
  2561  000A62                     l2416:
  2562                           
  2563                           ;system.c: 518: }
  2564                           ;system.c: 520: adcAD597Value[10-1] = AD_Converter( channelNumber ) ;
  2565  000A62  5024               	movf	GetAdcAD597Value@channelNumber,w,c
  2566  000A64  EC15  F006         	call	_AD_Converter
  2567  000A68  C019  F092         	movff	?_AD_Converter,_adcAD597Value+18
  2568  000A6C  C01A  F093         	movff	?_AD_Converter+1,_adcAD597Value+19
  2569                           
  2570                           ;system.c: 522: for ( i=0 ;i<10 ;i++)
  2571  000A70  0E00               	movlw	0
  2572  000A72  6E27               	movwf	GetAdcAD597Value@i,c
  2573  000A74                     l2420:
  2574  000A74  0E09               	movlw	9
  2575  000A76  6427               	cpfsgt	GetAdcAD597Value@i,c
  2576  000A78  D001               	goto	l2424
  2577  000A7A  D00E               	goto	l2430
  2578  000A7C                     l2424:
  2579                           
  2580                           ;system.c: 523: {
  2581                           ;system.c: 524: temp += adcAD597Value[i] ;
  2582  000A7C  5027               	movf	GetAdcAD597Value@i,w,c
  2583  000A7E  0D02               	mullw	2
  2584  000A80  0E80               	movlw	low _adcAD597Value
  2585  000A82  24F3               	addwf	prodl,w,c
  2586  000A84  6ED9               	movwf	fsr2l,c
  2587  000A86  0E00               	movlw	high _adcAD597Value
  2588  000A88  20F4               	addwfc	prodh,w,c
  2589  000A8A  6EDA               	movwf	fsr2h,c
  2590  000A8C  50DE               	movf	postinc2,w,c
  2591  000A8E  2625               	addwf	GetAdcAD597Value@temp,f,c
  2592  000A90  50DD               	movf	postdec2,w,c
  2593  000A92  2226               	addwfc	GetAdcAD597Value@temp+1,f,c
  2594  000A94  2A27               	incf	GetAdcAD597Value@i,f,c
  2595  000A96  D7EE               	goto	l2420
  2596  000A98                     l2430:
  2597                           
  2598                           ;system.c: 525: }
  2599                           ;system.c: 527: return ( temp/10 );
  2600  000A98  C025  F017         	movff	GetAdcAD597Value@temp,___lwdiv@dividend
  2601  000A9C  C026  F018         	movff	GetAdcAD597Value@temp+1,___lwdiv@dividend+1
  2602  000AA0  0E00               	movlw	0
  2603  000AA2  6E1A               	movwf	___lwdiv@divisor+1,c
  2604  000AA4  0E0A               	movlw	10
  2605  000AA6  6E19               	movwf	___lwdiv@divisor,c
  2606  000AA8  ECA6  F005         	call	___lwdiv	;wreg free
  2607  000AAC  C017  F020         	movff	?___lwdiv,?_GetAdcAD597Value
  2608  000AB0  C018  F021         	movff	?___lwdiv+1,?_GetAdcAD597Value+1
  2609  000AB4  0012               	return	
  2610  000AB6                     __end_of_GetAdcAD597Value:
  2611                           	opt stack 0
  2612                           tblptru	equ	0xFF8
  2613                           prodh	equ	0xFF4
  2614                           prodl	equ	0xFF3
  2615                           intcon	equ	0xFF2
  2616                           postinc0	equ	0xFEE
  2617                           wreg	equ	0xFE8
  2618                           postinc1	equ	0xFE6
  2619                           postdec1	equ	0xFE5
  2620                           fsr1h	equ	0xFE2
  2621                           fsr1l	equ	0xFE1
  2622                           postinc2	equ	0xFDE
  2623                           postdec2	equ	0xFDD
  2624                           fsr2h	equ	0xFDA
  2625                           fsr2l	equ	0xFD9
  2626                           status	equ	0xFD8
  2627                           
  2628 ;; *************** function _ProcessButton *****************
  2629 ;; Defined at:
  2630 ;;		line 42 in file "WAFR-01-C001 HD-debug.X/keyboard/keyboard.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  buttonPushPe    4   26[COMRAM] unsigned long 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      unsigned char 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2644 ;;      Params:         0       0       0       0
  2645 ;;      Locals:         4       0       0       0
  2646 ;;      Temps:          4       0       0       0
  2647 ;;      Totals:         8       0       0       0
  2648 ;;Total ram usage:        8 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    3
  2651 ;; This function calls:
  2652 ;;		_LevelTmpSetShow
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text8
  2659  0007F0                     __ptext8:
  2660                           	opt stack 0
  2661  0007F0                     _ProcessButton:
  2662                           	opt stack 27
  2663                           
  2664                           ;keyboard.c: 44: uint32 buttonPushPeriod = 0 ;
  2665                           
  2666                           ;incstack = 0
  2667  0007F0  0E00               	movlw	0
  2668  0007F2  6E1B               	movwf	ProcessButton@buttonPushPeriod,c
  2669  0007F4  0E00               	movlw	0
  2670  0007F6  6E1C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2671  0007F8  0E00               	movlw	0
  2672  0007FA  6E1D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2673  0007FC  0E00               	movlw	0
  2674  0007FE  6E1E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2675                           
  2676                           ;keyboard.c: 46: if ( flagS2KeyPushed )
  2677  000800  5061               	movf	_flagS2KeyPushed,w,c
  2678  000802  B4D8               	btfsc	status,2,c
  2679  000804  D051               	goto	l2588
  2680                           
  2681                           ;keyboard.c: 47: {
  2682                           ;keyboard.c: 48: flagS2KeyPushed = 0 ;
  2683  000806  0E00               	movlw	0
  2684  000808  6E61               	movwf	_flagS2KeyPushed,c
  2685                           
  2686                           ;keyboard.c: 52: buttonPushPeriod = buttonPushTimeStop-buttonPushTimeStart ;
  2687  00080A  C04D  F017         	movff	_buttonPushTimeStart,??_ProcessButton
  2688  00080E  C04E  F018         	movff	_buttonPushTimeStart+1,??_ProcessButton+1
  2689  000812  C04F  F019         	movff	_buttonPushTimeStart+2,??_ProcessButton+2
  2690  000816  C050  F01A         	movff	_buttonPushTimeStart+3,??_ProcessButton+3
  2691  00081A  1E17               	comf	??_ProcessButton,f,c
  2692  00081C  1E18               	comf	??_ProcessButton+1,f,c
  2693  00081E  1E19               	comf	??_ProcessButton+2,f,c
  2694  000820  1E1A               	comf	??_ProcessButton+3,f,c
  2695  000822  2A17               	incf	??_ProcessButton,f,c
  2696  000824  0E00               	movlw	0
  2697  000826  2218               	addwfc	??_ProcessButton+1,f,c
  2698  000828  2219               	addwfc	??_ProcessButton+2,f,c
  2699  00082A  221A               	addwfc	??_ProcessButton+3,f,c
  2700  00082C  5051               	movf	_buttonPushTimeStop,w,c
  2701  00082E  2417               	addwf	??_ProcessButton,w,c
  2702  000830  6E1B               	movwf	ProcessButton@buttonPushPeriod,c
  2703  000832  5052               	movf	_buttonPushTimeStop+1,w,c
  2704  000834  2018               	addwfc	??_ProcessButton+1,w,c
  2705  000836  6E1C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2706  000838  5053               	movf	_buttonPushTimeStop+2,w,c
  2707  00083A  2019               	addwfc	??_ProcessButton+2,w,c
  2708  00083C  6E1D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2709  00083E  5054               	movf	_buttonPushTimeStop+3,w,c
  2710  000840  201A               	addwfc	??_ProcessButton+3,w,c
  2711  000842  6E1E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2712                           
  2713                           ;keyboard.c: 57: if ( S2KeyPushTime < 12 )
  2714  000844  0E0C               	movlw	12
  2715  000846  605F               	cpfslt	_S2KeyPushTime,c
  2716  000848  D00B               	goto	l2558
  2717                           
  2718                           ;keyboard.c: 58: {
  2719                           ;keyboard.c: 60: levelTmpSetting ++ ;
  2720  00084A  2A62               	incf	_levelTmpSetting,f,c
  2721                           
  2722                           ;keyboard.c: 61: if ( levelTmpSetting > 3 )
  2723  00084C  0E03               	movlw	3
  2724  00084E  6462               	cpfsgt	_levelTmpSetting,c
  2725  000850  D002               	goto	l498
  2726                           
  2727                           ;keyboard.c: 62: {
  2728                           ;keyboard.c: 63: levelTmpSetting = 1 ;
  2729  000852  0E01               	movlw	1
  2730  000854  6E62               	movwf	_levelTmpSetting,c
  2731  000856                     l498:
  2732                           
  2733                           ;keyboard.c: 64: }
  2734                           ;keyboard.c: 66: timerHalfSecond = 0 ;
  2735  000856  0E00               	movlw	0
  2736  000858  6E5E               	movwf	_timerHalfSecond+1,c
  2737  00085A  0E00               	movlw	0
  2738  00085C  6E5D               	movwf	_timerHalfSecond,c
  2739                           
  2740                           ;keyboard.c: 70: }
  2741  00085E  D002               	goto	l2562
  2742  000860                     l2558:
  2743                           
  2744                           ;keyboard.c: 71: else
  2745                           ;keyboard.c: 72: {
  2746                           ;keyboard.c: 74: return ( 3 ) ;
  2747  000860  0E03               	movlw	3
  2748  000862  0012               	return	
  2749  000864                     l2562:
  2750                           
  2751                           ;keyboard.c: 75: }
  2752                           ;keyboard.c: 81: if( buttonPushPeriod < 50 )
  2753  000864  501E               	movf	ProcessButton@buttonPushPeriod+3,w,c
  2754  000866  101D               	iorwf	ProcessButton@buttonPushPeriod+2,w,c
  2755  000868  101C               	iorwf	ProcessButton@buttonPushPeriod+1,w,c
  2756  00086A  E114               	bnz	l501
  2757  00086C  0E32               	movlw	50
  2758  00086E  5C1B               	subwf	ProcessButton@buttonPushPeriod,w,c
  2759  000870  B0D8               	btfsc	status,0,c
  2760  000872  D010               	goto	l501
  2761                           
  2762                           ;keyboard.c: 82: {
  2763                           ;keyboard.c: 86: levelTmpSetting -- ;
  2764  000874  0662               	decf	_levelTmpSetting,f,c
  2765                           
  2766                           ;keyboard.c: 87: if (levelTmpSetting < 1 )
  2767  000876  5062               	movf	_levelTmpSetting,w,c
  2768  000878  A4D8               	btfss	status,2,c
  2769  00087A  D002               	goto	l2570
  2770                           
  2771                           ;keyboard.c: 88: {
  2772                           ;keyboard.c: 89: levelTmpSetting = 3 ;
  2773  00087C  0E03               	movlw	3
  2774  00087E  6E62               	movwf	_levelTmpSetting,c
  2775  000880                     l2570:
  2776                           
  2777                           ;keyboard.c: 90: }
  2778                           ;keyboard.c: 97: levelTmpSetting -- ;
  2779  000880  0662               	decf	_levelTmpSetting,f,c
  2780                           
  2781                           ;keyboard.c: 98: if (levelTmpSetting < 1 )
  2782  000882  5062               	movf	_levelTmpSetting,w,c
  2783  000884  A4D8               	btfss	status,2,c
  2784  000886  D002               	goto	l2576
  2785                           
  2786                           ;keyboard.c: 99: {
  2787                           ;keyboard.c: 100: levelTmpSetting = 3 ;
  2788  000888  0E03               	movlw	3
  2789  00088A  6E62               	movwf	_levelTmpSetting,c
  2790  00088C                     l2576:
  2791                           
  2792                           ;keyboard.c: 101: }
  2793                           ;keyboard.c: 103: LevelTmpSetShow ();
  2794  00088C  ECF2  F005         	call	_LevelTmpSetShow	;wreg free
  2795                           
  2796                           ;keyboard.c: 104: return ( 2 );
  2797  000890  0E02               	movlw	2
  2798  000892  0012               	return	
  2799  000894                     l501:
  2800                           
  2801                           ;keyboard.c: 106: {
  2802                           ;keyboard.c: 107: buttonPushTimeStart = buttonPushTimeStop ;
  2803  000894  C051  F04D         	movff	_buttonPushTimeStop,_buttonPushTimeStart
  2804  000898  C052  F04E         	movff	_buttonPushTimeStop+1,_buttonPushTimeStart+1
  2805  00089C  C053  F04F         	movff	_buttonPushTimeStop+2,_buttonPushTimeStart+2
  2806  0008A0  C054  F050         	movff	_buttonPushTimeStop+3,_buttonPushTimeStart+3
  2807                           
  2808                           ;keyboard.c: 113: return ( 1) ;
  2809  0008A4  0E01               	movlw	1
  2810  0008A6  0012               	return	
  2811  0008A8                     l2588:
  2812                           
  2813                           ;keyboard.c: 114: }
  2814                           ;keyboard.c: 116: }
  2815                           ;keyboard.c: 118: return ( 0 );
  2816  0008A8  0E00               	movlw	0
  2817  0008AA  0012               	return	
  2818  0008AC                     __end_of_ProcessButton:
  2819                           	opt stack 0
  2820                           tblptru	equ	0xFF8
  2821                           prodh	equ	0xFF4
  2822                           prodl	equ	0xFF3
  2823                           intcon	equ	0xFF2
  2824                           postinc0	equ	0xFEE
  2825                           wreg	equ	0xFE8
  2826                           postinc1	equ	0xFE6
  2827                           postdec1	equ	0xFE5
  2828                           fsr1h	equ	0xFE2
  2829                           fsr1l	equ	0xFE1
  2830                           postinc2	equ	0xFDE
  2831                           postdec2	equ	0xFDD
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           status	equ	0xFD8
  2835                           
  2836 ;; *************** function _LevelTmpSetShow *****************
  2837 ;; Defined at:
  2838 ;;		line 32 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;		None               void
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2852 ;;      Params:         0       0       0       0
  2853 ;;      Locals:         0       0       0       0
  2854 ;;      Temps:          0       0       0       0
  2855 ;;      Totals:         0       0       0       0
  2856 ;;Total ram usage:        0 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    2
  2859 ;; This function calls:
  2860 ;;		_turnOffAllLed
  2861 ;; This function is called by:
  2862 ;;		_main
  2863 ;;		_ProcessButton
  2864 ;;		_InitializeHardware
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text9
  2869  000BE4                     __ptext9:
  2870                           	opt stack 0
  2871  000BE4                     _LevelTmpSetShow:
  2872                           	opt stack 27
  2873                           
  2874                           ;RGBLedDisplay.c: 35: turnOffAllLed();
  2875                           
  2876                           ;incstack = 0
  2877  000BE4  ECC2  F006         	call	_turnOffAllLed	;wreg free
  2878                           
  2879                           ;RGBLedDisplay.c: 36: switch ( levelTmpSetting )
  2880  000BE8  D015               	goto	l2438
  2881  000BEA                     l439:
  2882                           
  2883                           ;RGBLedDisplay.c: 39: PORTCbits.RC0 = 1 ;
  2884  000BEA  8082               	bsf	3970,0,c	;volatile
  2885                           
  2886                           ;RGBLedDisplay.c: 40: PORTCbits.RC1 = 1 ;
  2887  000BEC  8282               	bsf	3970,1,c	;volatile
  2888                           
  2889                           ;RGBLedDisplay.c: 41: PORTCbits.RC2 = 1 ;
  2890  000BEE  8482               	bsf	3970,2,c	;volatile
  2891                           
  2892                           ;RGBLedDisplay.c: 42: break;
  2893  000BF0  0012               	return	
  2894  000BF2                     l441:
  2895                           
  2896                           ;RGBLedDisplay.c: 44: PORTCbits.RC0 = 1 ;
  2897  000BF2  8082               	bsf	3970,0,c	;volatile
  2898                           
  2899                           ;RGBLedDisplay.c: 45: PORTCbits.RC1 = 1 ;
  2900  000BF4  8282               	bsf	3970,1,c	;volatile
  2901                           
  2902                           ;RGBLedDisplay.c: 46: PORTCbits.RC2 = 1 ;
  2903  000BF6  8482               	bsf	3970,2,c	;volatile
  2904                           
  2905                           ;RGBLedDisplay.c: 47: PORTCbits.RC3 = 1 ;
  2906  000BF8  8682               	bsf	3970,3,c	;volatile
  2907                           
  2908                           ;RGBLedDisplay.c: 48: PORTCbits.RC4 = 1 ;
  2909  000BFA  8882               	bsf	3970,4,c	;volatile
  2910                           
  2911                           ;RGBLedDisplay.c: 49: PORTCbits.RC5 = 1 ;
  2912  000BFC  8A82               	bsf	3970,5,c	;volatile
  2913                           
  2914                           ;RGBLedDisplay.c: 50: break;
  2915  000BFE  0012               	return	
  2916  000C00                     l442:
  2917                           
  2918                           ;RGBLedDisplay.c: 52: PORTCbits.RC0 = 1 ;
  2919  000C00  8082               	bsf	3970,0,c	;volatile
  2920                           
  2921                           ;RGBLedDisplay.c: 53: PORTCbits.RC1 = 1 ;
  2922  000C02  8282               	bsf	3970,1,c	;volatile
  2923                           
  2924                           ;RGBLedDisplay.c: 54: PORTCbits.RC2 = 1 ;
  2925  000C04  8482               	bsf	3970,2,c	;volatile
  2926                           
  2927                           ;RGBLedDisplay.c: 55: PORTCbits.RC3 = 1 ;
  2928  000C06  8682               	bsf	3970,3,c	;volatile
  2929                           
  2930                           ;RGBLedDisplay.c: 56: PORTCbits.RC4 = 1 ;
  2931  000C08  8882               	bsf	3970,4,c	;volatile
  2932                           
  2933                           ;RGBLedDisplay.c: 57: PORTCbits.RC5 = 1 ;
  2934  000C0A  8A82               	bsf	3970,5,c	;volatile
  2935                           
  2936                           ;RGBLedDisplay.c: 58: PORTCbits.RC6 = 1 ;
  2937  000C0C  8C82               	bsf	3970,6,c	;volatile
  2938                           
  2939                           ;RGBLedDisplay.c: 59: PORTCbits.RC7 = 1 ;
  2940  000C0E  8E82               	bsf	3970,7,c	;volatile
  2941                           
  2942                           ;RGBLedDisplay.c: 60: PORTBbits.RB3 = 1 ;
  2943  000C10  8681               	bsf	3969,3,c	;volatile
  2944                           
  2945                           ;RGBLedDisplay.c: 64: }
  2946                           
  2947                           ;RGBLedDisplay.c: 63: break;
  2948                           
  2949                           ;RGBLedDisplay.c: 62: default:
  2950                           
  2951                           ;RGBLedDisplay.c: 61: break;
  2952  000C12  0012               	return	
  2953  000C14                     l2438:
  2954  000C14  5062               	movf	_levelTmpSetting,w,c
  2955                           
  2956                           ; Switch size 1, requested type "space"
  2957                           ; Number of cases is 3, Range of values is 1 to 3
  2958                           ; switch strategies available:
  2959                           ; Name         Instructions Cycles
  2960                           ; simple_byte           10     6 (average)
  2961                           ;	Chosen strategy is simple_byte
  2962  000C16  0A01               	xorlw	1	; case 1
  2963  000C18  B4D8               	btfsc	status,2,c
  2964  000C1A  D7E7               	goto	l439
  2965  000C1C  0A03               	xorlw	3	; case 2
  2966  000C1E  B4D8               	btfsc	status,2,c
  2967  000C20  D7E8               	goto	l441
  2968  000C22  0A01               	xorlw	1	; case 3
  2969  000C24  A4D8               	btfss	status,2,c
  2970  000C26  0012               	return	
  2971  000C28  D7EB               	goto	l442
  2972  000C2A                     __end_of_LevelTmpSetShow:
  2973                           	opt stack 0
  2974                           tblptru	equ	0xFF8
  2975                           prodh	equ	0xFF4
  2976                           prodl	equ	0xFF3
  2977                           intcon	equ	0xFF2
  2978                           postinc0	equ	0xFEE
  2979                           wreg	equ	0xFE8
  2980                           postinc1	equ	0xFE6
  2981                           postdec1	equ	0xFE5
  2982                           fsr1h	equ	0xFE2
  2983                           fsr1l	equ	0xFE1
  2984                           postinc2	equ	0xFDE
  2985                           postdec2	equ	0xFDD
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990 ;; *************** function _turnOffAllLed *****************
  2991 ;; Defined at:
  2992 ;;		line 74 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;		None               void
  2999 ;; Registers used:
  3000 ;;		wreg, status,2
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3006 ;;      Params:         0       0       0       0
  3007 ;;      Locals:         0       0       0       0
  3008 ;;      Temps:          0       0       0       0
  3009 ;;      Totals:         0       0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    1
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;;		_ShutDownSystem
  3018 ;;		_ProcessHeat
  3019 ;;		_LevelTmpSetShow
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text10
  3024  000D84                     __ptext10:
  3025                           	opt stack 0
  3026  000D84                     _turnOffAllLed:
  3027                           	opt stack 29
  3028                           
  3029                           ;RGBLedDisplay.c: 77: PORTC = 0;
  3030                           
  3031                           ;incstack = 0
  3032  000D84  0E00               	movlw	0
  3033  000D86  6E82               	movwf	3970,c	;volatile
  3034                           
  3035                           ;RGBLedDisplay.c: 78: PORTBbits.RB3 = 0;
  3036  000D88  9681               	bcf	3969,3,c	;volatile
  3037  000D8A  0012               	return		;funcret
  3038  000D8C                     __end_of_turnOffAllLed:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           prodh	equ	0xFF4
  3042                           prodl	equ	0xFF3
  3043                           intcon	equ	0xFF2
  3044                           postinc0	equ	0xFEE
  3045                           wreg	equ	0xFE8
  3046                           postinc1	equ	0xFE6
  3047                           postdec1	equ	0xFE5
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           postinc2	equ	0xFDE
  3051                           postdec2	equ	0xFDD
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8
  3055                           
  3056 ;; *************** function _InitializeTimer0 *****************
  3057 ;; Defined at:
  3058 ;;		line 113 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;		None               void
  3065 ;; Registers used:
  3066 ;;		wreg, status,2
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3072 ;;      Params:         0       0       0       0
  3073 ;;      Locals:         0       0       0       0
  3074 ;;      Temps:          0       0       0       0
  3075 ;;      Totals:         0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text11
  3087  000D56                     __ptext11:
  3088                           	opt stack 0
  3089  000D56                     _InitializeTimer0:
  3090                           	opt stack 29
  3091                           
  3092                           ;system.c: 115: T0CONbits.T08BIT = 0 ;
  3093                           
  3094                           ;incstack = 0
  3095  000D56  9CD5               	bcf	4053,6,c	;volatile
  3096                           
  3097                           ;system.c: 116: T0CONbits.T0CS = 0 ;
  3098  000D58  9AD5               	bcf	4053,5,c	;volatile
  3099                           
  3100                           ;system.c: 117: T0CONbits.PSA = 1 ;
  3101  000D5A  86D5               	bsf	4053,3,c	;volatile
  3102                           
  3103                           ;system.c: 119: TMR0H = (65536-40000)/256;
  3104  000D5C  0E63               	movlw	99
  3105  000D5E  6ED7               	movwf	4055,c	;volatile
  3106                           
  3107                           ;system.c: 120: TMR0L = (65536-40000)%256 ;
  3108  000D60  0EC0               	movlw	192
  3109  000D62  6ED6               	movwf	4054,c	;volatile
  3110                           
  3111                           ;system.c: 122: T0CONbits.TMR0ON = 1 ;
  3112  000D64  8ED5               	bsf	4053,7,c	;volatile
  3113                           
  3114                           ;system.c: 125: INTCONbits.TMR0IF = 0 ;
  3115  000D66  94F2               	bcf	intcon,2,c	;volatile
  3116                           
  3117                           ;system.c: 126: INTCONbits.TMR0IE = 1;
  3118  000D68  8AF2               	bsf	intcon,5,c	;volatile
  3119                           
  3120                           ;system.c: 129: INTCONbits.PEIE = 1 ;
  3121  000D6A  8CF2               	bsf	intcon,6,c	;volatile
  3122  000D6C  0012               	return		;funcret
  3123  000D6E                     __end_of_InitializeTimer0:
  3124                           	opt stack 0
  3125                           tblptru	equ	0xFF8
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           intcon	equ	0xFF2
  3129                           postinc0	equ	0xFEE
  3130                           wreg	equ	0xFE8
  3131                           postinc1	equ	0xFE6
  3132                           postdec1	equ	0xFE5
  3133                           fsr1h	equ	0xFE2
  3134                           fsr1l	equ	0xFE1
  3135                           postinc2	equ	0xFDE
  3136                           postdec2	equ	0xFDD
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function _InitializePinmux *****************
  3142 ;; Defined at:
  3143 ;;		line 67 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;		None               void
  3150 ;; Registers used:
  3151 ;;		None
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3157 ;;      Params:         0       0       0       0
  3158 ;;      Locals:         0       0       0       0
  3159 ;;      Temps:          0       0       0       0
  3160 ;;      Totals:         0       0       0       0
  3161 ;;Total ram usage:        0 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text12
  3172  000CCE                     __ptext12:
  3173                           	opt stack 0
  3174  000CCE                     _InitializePinmux:
  3175                           	opt stack 29
  3176                           
  3177                           ;system.c: 70: TRISCbits.TRISC0 = 0;
  3178                           
  3179                           ;incstack = 0
  3180  000CCE  9094               	bcf	3988,0,c	;volatile
  3181                           
  3182                           ;system.c: 71: TRISCbits.TRISC1 = 0;
  3183  000CD0  9294               	bcf	3988,1,c	;volatile
  3184                           
  3185                           ;system.c: 72: TRISCbits.TRISC2 = 0;
  3186  000CD2  9494               	bcf	3988,2,c	;volatile
  3187                           
  3188                           ;system.c: 73: TRISCbits.TRISC3 = 0;
  3189  000CD4  9694               	bcf	3988,3,c	;volatile
  3190                           
  3191                           ;system.c: 74: TRISCbits.TRISC4 = 0;
  3192  000CD6  9894               	bcf	3988,4,c	;volatile
  3193                           
  3194                           ;system.c: 75: TRISCbits.TRISC5 = 0;
  3195  000CD8  9A94               	bcf	3988,5,c	;volatile
  3196                           
  3197                           ;system.c: 76: TRISCbits.TRISC6 = 0;
  3198  000CDA  9C94               	bcf	3988,6,c	;volatile
  3199                           
  3200                           ;system.c: 77: TRISCbits.TRISC7 = 0;
  3201  000CDC  9E94               	bcf	3988,7,c	;volatile
  3202                           
  3203                           ;system.c: 79: TRISBbits.TRISB3 = 0;
  3204  000CDE  9693               	bcf	3987,3,c	;volatile
  3205                           
  3206                           ;system.c: 82: TRISAbits.TRISA0 = 1 ;
  3207  000CE0  8092               	bsf	3986,0,c	;volatile
  3208                           
  3209                           ;system.c: 85: TRISAbits.TRISA1 = 1;
  3210  000CE2  8292               	bsf	3986,1,c	;volatile
  3211                           
  3212                           ;system.c: 87: TRISAbits.TRISA2 = 1 ;
  3213  000CE4  8492               	bsf	3986,2,c	;volatile
  3214                           
  3215                           ;system.c: 88: TRISAbits.TRISA3 = 1 ;
  3216  000CE6  8692               	bsf	3986,3,c	;volatile
  3217                           
  3218                           ;system.c: 91: TRISAbits.TRISA4 = 1;
  3219  000CE8  8892               	bsf	3986,4,c	;volatile
  3220                           
  3221                           ;system.c: 94: TRISAbits.TRISA5 = 1;
  3222  000CEA  8A92               	bsf	3986,5,c	;volatile
  3223                           
  3224                           ;system.c: 97: TRISBbits.TRISB0 = 1;
  3225  000CEC  8093               	bsf	3987,0,c	;volatile
  3226                           
  3227                           ;system.c: 100: TRISBbits.TRISB1 = 0;
  3228  000CEE  9293               	bcf	3987,1,c	;volatile
  3229                           
  3230                           ;system.c: 103: TRISBbits.TRISB2 = 0;
  3231  000CF0  9493               	bcf	3987,2,c	;volatile
  3232                           
  3233                           ;system.c: 106: TRISBbits.TRISB4 = 1;
  3234  000CF2  8893               	bsf	3987,4,c	;volatile
  3235  000CF4  0012               	return		;funcret
  3236  000CF6                     __end_of_InitializePinmux:
  3237                           	opt stack 0
  3238                           tblptru	equ	0xFF8
  3239                           prodh	equ	0xFF4
  3240                           prodl	equ	0xFF3
  3241                           intcon	equ	0xFF2
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           postinc1	equ	0xFE6
  3245                           postdec1	equ	0xFE5
  3246                           fsr1h	equ	0xFE2
  3247                           fsr1l	equ	0xFE1
  3248                           postinc2	equ	0xFDE
  3249                           postdec2	equ	0xFDD
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _InitializeOscillator *****************
  3255 ;; Defined at:
  3256 ;;		line 28 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;		None               void
  3263 ;; Registers used:
  3264 ;;		None
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3270 ;;      Params:         0       0       0       0
  3271 ;;      Locals:         0       0       0       0
  3272 ;;      Temps:          0       0       0       0
  3273 ;;      Totals:         0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text13
  3285  000D9C                     __ptext13:
  3286                           	opt stack 0
  3287  000D9C                     _InitializeOscillator:
  3288                           	opt stack 29
  3289                           
  3290                           ;incstack = 0
  3291  000D9C  0012               	return		;funcret
  3292  000D9E                     __end_of_InitializeOscillator:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           prodh	equ	0xFF4
  3296                           prodl	equ	0xFF3
  3297                           intcon	equ	0xFF2
  3298                           postinc0	equ	0xFEE
  3299                           wreg	equ	0xFE8
  3300                           postinc1	equ	0xFE6
  3301                           postdec1	equ	0xFE5
  3302                           fsr1h	equ	0xFE2
  3303                           fsr1l	equ	0xFE1
  3304                           postinc2	equ	0xFDE
  3305                           postdec2	equ	0xFDD
  3306                           fsr2h	equ	0xFDA
  3307                           fsr2l	equ	0xFD9
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function _InitializeInterrupts *****************
  3311 ;; Defined at:
  3312 ;;		line 52 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		None
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3326 ;;      Params:         0       0       0       0
  3327 ;;      Locals:         0       0       0       0
  3328 ;;      Temps:          0       0       0       0
  3329 ;;      Totals:         0       0       0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text14
  3341  000D8C                     __ptext14:
  3342                           	opt stack 0
  3343  000D8C                     _InitializeInterrupts:
  3344                           	opt stack 29
  3345                           
  3346                           ;system.c: 55: INTCONbits.INT0IE = 1;
  3347                           
  3348                           ;incstack = 0
  3349  000D8C  88F2               	bsf	intcon,4,c	;volatile
  3350                           
  3351                           ;system.c: 58: INTCONbits.TMR0IE = 1;
  3352  000D8E  8AF2               	bsf	intcon,5,c	;volatile
  3353                           
  3354                           ;system.c: 61: INTCONbits.GIE = 1;
  3355  000D90  8EF2               	bsf	intcon,7,c	;volatile
  3356  000D92  0012               	return		;funcret
  3357  000D94                     __end_of_InitializeInterrupts:
  3358                           	opt stack 0
  3359                           tblptru	equ	0xFF8
  3360                           prodh	equ	0xFF4
  3361                           prodl	equ	0xFF3
  3362                           intcon	equ	0xFF2
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           postinc1	equ	0xFE6
  3366                           postdec1	equ	0xFE5
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           postinc2	equ	0xFDE
  3370                           postdec2	equ	0xFDD
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function _InitializeINT0 *****************
  3376 ;; Defined at:
  3377 ;;		line 169 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;		None               void
  3384 ;; Registers used:
  3385 ;;		None
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3391 ;;      Params:         0       0       0       0
  3392 ;;      Locals:         0       0       0       0
  3393 ;;      Temps:          0       0       0       0
  3394 ;;      Totals:         0       0       0       0
  3395 ;;Total ram usage:        0 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text15
  3406  000D94                     __ptext15:
  3407                           	opt stack 0
  3408  000D94                     _InitializeINT0:
  3409                           	opt stack 29
  3410                           
  3411                           ;system.c: 171: INTCON2bits.INTEDG0 = 0 ;
  3412                           
  3413                           ;incstack = 0
  3414  000D94  9CF1               	bcf	intcon2,6,c	;volatile
  3415                           
  3416                           ;system.c: 172: INTCONbits.INT0IF = 0 ;
  3417  000D96  92F2               	bcf	intcon,1,c	;volatile
  3418                           
  3419                           ;system.c: 174: INTCONbits.INT0IE = 1 ;
  3420  000D98  88F2               	bsf	intcon,4,c	;volatile
  3421  000D9A  0012               	return		;funcret
  3422  000D9C                     __end_of_InitializeINT0:
  3423                           	opt stack 0
  3424                           tblptru	equ	0xFF8
  3425                           prodh	equ	0xFF4
  3426                           prodl	equ	0xFF3
  3427                           intcon	equ	0xFF2
  3428                           intcon2	equ	0xFF1
  3429                           postinc0	equ	0xFEE
  3430                           wreg	equ	0xFE8
  3431                           postinc1	equ	0xFE6
  3432                           postdec1	equ	0xFE5
  3433                           fsr1h	equ	0xFE2
  3434                           fsr1l	equ	0xFE1
  3435                           postinc2	equ	0xFDE
  3436                           postdec2	equ	0xFDD
  3437                           fsr2h	equ	0xFDA
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8
  3440                           
  3441 ;; *************** function _InitializeAD *****************
  3442 ;; Defined at:
  3443 ;;		line 210 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;		None               void
  3450 ;; Registers used:
  3451 ;;		None
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3457 ;;      Params:         0       0       0       0
  3458 ;;      Locals:         0       0       0       0
  3459 ;;      Temps:          0       0       0       0
  3460 ;;      Totals:         0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    1
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text16
  3472  000D1C                     __ptext16:
  3473                           	opt stack 0
  3474  000D1C                     _InitializeAD:
  3475                           	opt stack 29
  3476                           
  3477                           ;system.c: 221: ADCON1bits.PCFG3 = 1;
  3478                           
  3479                           ;incstack = 0
  3480  000D1C  86C1               	bsf	4033,3,c	;volatile
  3481                           
  3482                           ;system.c: 222: ADCON1bits.PCFG2 = 0;
  3483  000D1E  94C1               	bcf	4033,2,c	;volatile
  3484                           
  3485                           ;system.c: 223: ADCON1bits.PCFG1 = 0;
  3486  000D20  92C1               	bcf	4033,1,c	;volatile
  3487                           
  3488                           ;system.c: 224: ADCON1bits.PCFG0 = 1;
  3489  000D22  80C1               	bsf	4033,0,c	;volatile
  3490                           
  3491                           ;system.c: 226: ADCON1bits.VCFG1 = 1 ;
  3492  000D24  8AC1               	bsf	4033,5,c	;volatile
  3493                           
  3494                           ;system.c: 227: ADCON1bits.VCFG0 = 1 ;
  3495  000D26  88C1               	bsf	4033,4,c	;volatile
  3496                           
  3497                           ;system.c: 238: ADCON2bits.ADCS2 = 0 ;
  3498  000D28  94C0               	bcf	4032,2,c	;volatile
  3499                           
  3500                           ;system.c: 239: ADCON2bits.ADCS1 = 1 ;
  3501  000D2A  82C0               	bsf	4032,1,c	;volatile
  3502                           
  3503                           ;system.c: 240: ADCON2bits.ADCS0 = 0 ;
  3504  000D2C  90C0               	bcf	4032,0,c	;volatile
  3505                           
  3506                           ;system.c: 242: ADCON2bits.ADFM = 1 ;
  3507  000D2E  8EC0               	bsf	4032,7,c	;volatile
  3508                           
  3509                           ;system.c: 244: ADCON2bits.ACQT2 = 1;
  3510  000D30  8AC0               	bsf	4032,5,c	;volatile
  3511                           
  3512                           ;system.c: 245: ADCON2bits.ACQT1 = 1;
  3513  000D32  88C0               	bsf	4032,4,c	;volatile
  3514                           
  3515                           ;system.c: 246: ADCON2bits.ACQT0 = 0;
  3516  000D34  96C0               	bcf	4032,3,c	;volatile
  3517                           
  3518                           ;system.c: 257: ADCON0bits.ADON = 1 ;
  3519  000D36  80C2               	bsf	4034,0,c	;volatile
  3520  000D38  0012               	return		;funcret
  3521  000D3A                     __end_of_InitializeAD:
  3522                           	opt stack 0
  3523                           tblptru	equ	0xFF8
  3524                           prodh	equ	0xFF4
  3525                           prodl	equ	0xFF3
  3526                           intcon	equ	0xFF2
  3527                           intcon2	equ	0xFF1
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           postinc1	equ	0xFE6
  3531                           postdec1	equ	0xFE5
  3532                           fsr1h	equ	0xFE2
  3533                           fsr1l	equ	0xFE1
  3534                           postinc2	equ	0xFDE
  3535                           postdec2	equ	0xFDD
  3536                           fsr2h	equ	0xFDA
  3537                           fsr2l	equ	0xFD9
  3538                           status	equ	0xFD8
  3539                           
  3540 ;; *************** function _GetAdcChargBatValue *****************
  3541 ;; Defined at:
  3542 ;;		line 542 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  channelNumbe    1    wreg     unsigned char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  3547 ;;  temp            2   36[COMRAM] unsigned short 
  3548 ;;  i               1   38[COMRAM] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  2   31[COMRAM] unsigned short 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3558 ;;      Params:         2       0       0       0
  3559 ;;      Locals:         4       0       0       0
  3560 ;;      Temps:          2       0       0       0
  3561 ;;      Totals:         8       0       0       0
  3562 ;;Total ram usage:        8 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    3
  3565 ;; This function calls:
  3566 ;;		_AD_Converter
  3567 ;;		___lwdiv
  3568 ;; This function is called by:
  3569 ;;		_main
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text17
  3574  0008AC                     __ptext17:
  3575                           	opt stack 0
  3576  0008AC                     _GetAdcChargBatValue:
  3577                           	opt stack 27
  3578                           
  3579                           ;incstack = 0
  3580                           ;GetAdcChargBatValue@channelNumber stored from wreg
  3581  0008AC  6E24               	movwf	GetAdcChargBatValue@channelNumber,c
  3582                           
  3583                           ;system.c: 544: uint8 i;
  3584                           ;system.c: 545: uint16 temp = 0 ;
  3585  0008AE  0E00               	movlw	0
  3586  0008B0  6E26               	movwf	GetAdcChargBatValue@temp+1,c
  3587  0008B2  0E00               	movlw	0
  3588  0008B4  6E25               	movwf	GetAdcChargBatValue@temp,c
  3589                           
  3590                           ;system.c: 546: for ( i=0; i< ( 10-1) ;i++)
  3591  0008B6  0E00               	movlw	0
  3592  0008B8  6E27               	movwf	GetAdcChargBatValue@i,c
  3593  0008BA                     l2686:
  3594  0008BA  0E08               	movlw	8
  3595  0008BC  6427               	cpfsgt	GetAdcChargBatValue@i,c
  3596  0008BE  D001               	goto	l2690
  3597  0008C0  D01E               	goto	l2696
  3598  0008C2                     l2690:
  3599                           
  3600                           ;system.c: 547: {
  3601                           ;system.c: 548: adcChargeStatValue[i] = adcChargeStatValue[i+1] ;
  3602  0008C2  5027               	movf	GetAdcChargBatValue@i,w,c
  3603  0008C4  6E22               	movwf	??_GetAdcChargBatValue& (0+255),c
  3604  0008C6  6A23               	clrf	(??_GetAdcChargBatValue+1)& (0+255),c
  3605  0008C8  90D8               	bcf	status,0,c
  3606  0008CA  3622               	rlcf	??_GetAdcChargBatValue,f,c
  3607  0008CC  3623               	rlcf	??_GetAdcChargBatValue+1,f,c
  3608  0008CE  0E02               	movlw	2
  3609  0008D0  2622               	addwf	??_GetAdcChargBatValue,f,c
  3610  0008D2  0E00               	movlw	0
  3611  0008D4  2223               	addwfc	??_GetAdcChargBatValue+1,f,c
  3612  0008D6  0E94               	movlw	low _adcChargeStatValue
  3613  0008D8  2422               	addwf	??_GetAdcChargBatValue,w,c
  3614  0008DA  6ED9               	movwf	fsr2l,c
  3615  0008DC  0E00               	movlw	high _adcChargeStatValue
  3616  0008DE  2023               	addwfc	??_GetAdcChargBatValue+1,w,c
  3617  0008E0  6EDA               	movwf	fsr2h,c
  3618  0008E2  5027               	movf	GetAdcChargBatValue@i,w,c
  3619  0008E4  0D02               	mullw	2
  3620  0008E6  0E94               	movlw	low _adcChargeStatValue
  3621  0008E8  24F3               	addwf	prodl,w,c
  3622  0008EA  6EE1               	movwf	fsr1l,c
  3623  0008EC  0E00               	movlw	high _adcChargeStatValue
  3624  0008EE  20F4               	addwfc	prodh,w,c
  3625  0008F0  6EE2               	movwf	fsr1h,c
  3626  0008F2  CFDE FFE6          	movff	postinc2,postinc1
  3627  0008F6  CFDD FFE5          	movff	postdec2,postdec1
  3628  0008FA  2A27               	incf	GetAdcChargBatValue@i,f,c
  3629  0008FC  D7DE               	goto	l2686
  3630  0008FE                     l2696:
  3631                           
  3632                           ;system.c: 549: }
  3633                           ;system.c: 551: adcChargeStatValue[10-1] = AD_Converter( channelNumber ) ;
  3634  0008FE  5024               	movf	GetAdcChargBatValue@channelNumber,w,c
  3635  000900  EC15  F006         	call	_AD_Converter
  3636  000904  C019  F0A6         	movff	?_AD_Converter,_adcChargeStatValue+18
  3637  000908  C01A  F0A7         	movff	?_AD_Converter+1,_adcChargeStatValue+19
  3638                           
  3639                           ;system.c: 553: for ( i=0 ;i<10 ;i++)
  3640  00090C  0E00               	movlw	0
  3641  00090E  6E27               	movwf	GetAdcChargBatValue@i,c
  3642  000910                     l2700:
  3643  000910  0E09               	movlw	9
  3644  000912  6427               	cpfsgt	GetAdcChargBatValue@i,c
  3645  000914  D001               	goto	l2704
  3646  000916  D014               	goto	l2710
  3647  000918                     l2704:
  3648                           
  3649                           ;system.c: 554: {
  3650                           ;system.c: 555: temp = temp + adcChargeStatValue[i] ;
  3651  000918  5027               	movf	GetAdcChargBatValue@i,w,c
  3652  00091A  0D02               	mullw	2
  3653  00091C  0E94               	movlw	low _adcChargeStatValue
  3654  00091E  24F3               	addwf	prodl,w,c
  3655  000920  6ED9               	movwf	fsr2l,c
  3656  000922  0E00               	movlw	high _adcChargeStatValue
  3657  000924  20F4               	addwfc	prodh,w,c
  3658  000926  6EDA               	movwf	fsr2h,c
  3659  000928  CFDE F022          	movff	postinc2,??_GetAdcChargBatValue
  3660  00092C  CFDD F023          	movff	postdec2,??_GetAdcChargBatValue+1
  3661  000930  5025               	movf	GetAdcChargBatValue@temp,w,c
  3662  000932  2422               	addwf	??_GetAdcChargBatValue,w,c
  3663  000934  6E25               	movwf	GetAdcChargBatValue@temp,c
  3664  000936  5026               	movf	GetAdcChargBatValue@temp+1,w,c
  3665  000938  2023               	addwfc	??_GetAdcChargBatValue+1,w,c
  3666  00093A  6E26               	movwf	GetAdcChargBatValue@temp+1,c
  3667  00093C  2A27               	incf	GetAdcChargBatValue@i,f,c
  3668  00093E  D7E8               	goto	l2700
  3669  000940                     l2710:
  3670                           
  3671                           ;system.c: 556: }
  3672                           ;system.c: 558: return ( temp/10 );
  3673  000940  C025  F017         	movff	GetAdcChargBatValue@temp,___lwdiv@dividend
  3674  000944  C026  F018         	movff	GetAdcChargBatValue@temp+1,___lwdiv@dividend+1
  3675  000948  0E00               	movlw	0
  3676  00094A  6E1A               	movwf	___lwdiv@divisor+1,c
  3677  00094C  0E0A               	movlw	10
  3678  00094E  6E19               	movwf	___lwdiv@divisor,c
  3679  000950  ECA6  F005         	call	___lwdiv	;wreg free
  3680  000954  C017  F020         	movff	?___lwdiv,?_GetAdcChargBatValue
  3681  000958  C018  F021         	movff	?___lwdiv+1,?_GetAdcChargBatValue+1
  3682  00095C  0012               	return	
  3683  00095E                     __end_of_GetAdcChargBatValue:
  3684                           	opt stack 0
  3685                           tblptru	equ	0xFF8
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           intcon2	equ	0xFF1
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           postinc1	equ	0xFE6
  3693                           postdec1	equ	0xFE5
  3694                           fsr1h	equ	0xFE2
  3695                           fsr1l	equ	0xFE1
  3696                           postinc2	equ	0xFDE
  3697                           postdec2	equ	0xFDD
  3698                           fsr2h	equ	0xFDA
  3699                           fsr2l	equ	0xFD9
  3700                           status	equ	0xFD8
  3701                           
  3702 ;; *************** function _GetAdcBatValue *****************
  3703 ;; Defined at:
  3704 ;;		line 477 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  channelNumbe    1    wreg     unsigned char 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  3709 ;;  temp            2   36[COMRAM] unsigned short 
  3710 ;;  i               1   38[COMRAM] unsigned char 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  2   31[COMRAM] unsigned short 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3720 ;;      Params:         2       0       0       0
  3721 ;;      Locals:         4       0       0       0
  3722 ;;      Temps:          2       0       0       0
  3723 ;;      Totals:         8       0       0       0
  3724 ;;Total ram usage:        8 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    3
  3727 ;; This function calls:
  3728 ;;		_AD_Converter
  3729 ;;		___lwdiv
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text18
  3736  00095E                     __ptext18:
  3737                           	opt stack 0
  3738  00095E                     _GetAdcBatValue:
  3739                           	opt stack 27
  3740                           
  3741                           ;incstack = 0
  3742                           ;GetAdcBatValue@channelNumber stored from wreg
  3743  00095E  6E24               	movwf	GetAdcBatValue@channelNumber,c
  3744                           
  3745                           ;system.c: 479: uint8 i;
  3746                           ;system.c: 480: uint16 temp = 0 ;
  3747  000960  0E00               	movlw	0
  3748  000962  6E26               	movwf	GetAdcBatValue@temp+1,c
  3749  000964  0E00               	movlw	0
  3750  000966  6E25               	movwf	GetAdcBatValue@temp,c
  3751                           
  3752                           ;system.c: 481: for ( i=0; i< ( 10-1) ;i++)
  3753  000968  0E00               	movlw	0
  3754  00096A  6E27               	movwf	GetAdcBatValue@i,c
  3755  00096C                     l2516:
  3756  00096C  0E08               	movlw	8
  3757  00096E  6427               	cpfsgt	GetAdcBatValue@i,c
  3758  000970  D001               	goto	l2520
  3759  000972  D01E               	goto	l2526
  3760  000974                     l2520:
  3761                           
  3762                           ;system.c: 482: {
  3763                           ;system.c: 483: adcBatValue[i] = adcBatValue[i+1] ;
  3764  000974  5027               	movf	GetAdcBatValue@i,w,c
  3765  000976  6E22               	movwf	??_GetAdcBatValue& (0+255),c
  3766  000978  6A23               	clrf	(??_GetAdcBatValue+1)& (0+255),c
  3767  00097A  90D8               	bcf	status,0,c
  3768  00097C  3622               	rlcf	??_GetAdcBatValue,f,c
  3769  00097E  3623               	rlcf	??_GetAdcBatValue+1,f,c
  3770  000980  0E02               	movlw	2
  3771  000982  2622               	addwf	??_GetAdcBatValue,f,c
  3772  000984  0E00               	movlw	0
  3773  000986  2223               	addwfc	??_GetAdcBatValue+1,f,c
  3774  000988  0E39               	movlw	low _adcBatValue
  3775  00098A  2422               	addwf	??_GetAdcBatValue,w,c
  3776  00098C  6ED9               	movwf	fsr2l,c
  3777  00098E  0E00               	movlw	high _adcBatValue
  3778  000990  2023               	addwfc	??_GetAdcBatValue+1,w,c
  3779  000992  6EDA               	movwf	fsr2h,c
  3780  000994  5027               	movf	GetAdcBatValue@i,w,c
  3781  000996  0D02               	mullw	2
  3782  000998  0E39               	movlw	low _adcBatValue
  3783  00099A  24F3               	addwf	prodl,w,c
  3784  00099C  6EE1               	movwf	fsr1l,c
  3785  00099E  0E00               	movlw	high _adcBatValue
  3786  0009A0  20F4               	addwfc	prodh,w,c
  3787  0009A2  6EE2               	movwf	fsr1h,c
  3788  0009A4  CFDE FFE6          	movff	postinc2,postinc1
  3789  0009A8  CFDD FFE5          	movff	postdec2,postdec1
  3790  0009AC  2A27               	incf	GetAdcBatValue@i,f,c
  3791  0009AE  D7DE               	goto	l2516
  3792  0009B0                     l2526:
  3793                           
  3794                           ;system.c: 484: }
  3795                           ;system.c: 486: adcBatValue[10-1] = AD_Converter( channelNumber ) ;
  3796  0009B0  5024               	movf	GetAdcBatValue@channelNumber,w,c
  3797  0009B2  EC15  F006         	call	_AD_Converter
  3798  0009B6  C019  F04B         	movff	?_AD_Converter,_adcBatValue+18
  3799  0009BA  C01A  F04C         	movff	?_AD_Converter+1,_adcBatValue+19
  3800                           
  3801                           ;system.c: 488: for ( i=0 ;i<10 ;i++)
  3802  0009BE  0E00               	movlw	0
  3803  0009C0  6E27               	movwf	GetAdcBatValue@i,c
  3804  0009C2                     l2530:
  3805  0009C2  0E09               	movlw	9
  3806  0009C4  6427               	cpfsgt	GetAdcBatValue@i,c
  3807  0009C6  D001               	goto	l2534
  3808  0009C8  D014               	goto	l2540
  3809  0009CA                     l2534:
  3810                           
  3811                           ;system.c: 489: {
  3812                           ;system.c: 490: temp = temp + adcBatValue[i] ;
  3813  0009CA  5027               	movf	GetAdcBatValue@i,w,c
  3814  0009CC  0D02               	mullw	2
  3815  0009CE  0E39               	movlw	low _adcBatValue
  3816  0009D0  24F3               	addwf	prodl,w,c
  3817  0009D2  6ED9               	movwf	fsr2l,c
  3818  0009D4  0E00               	movlw	high _adcBatValue
  3819  0009D6  20F4               	addwfc	prodh,w,c
  3820  0009D8  6EDA               	movwf	fsr2h,c
  3821  0009DA  CFDE F022          	movff	postinc2,??_GetAdcBatValue
  3822  0009DE  CFDD F023          	movff	postdec2,??_GetAdcBatValue+1
  3823  0009E2  5025               	movf	GetAdcBatValue@temp,w,c
  3824  0009E4  2422               	addwf	??_GetAdcBatValue,w,c
  3825  0009E6  6E25               	movwf	GetAdcBatValue@temp,c
  3826  0009E8  5026               	movf	GetAdcBatValue@temp+1,w,c
  3827  0009EA  2023               	addwfc	??_GetAdcBatValue+1,w,c
  3828  0009EC  6E26               	movwf	GetAdcBatValue@temp+1,c
  3829  0009EE  2A27               	incf	GetAdcBatValue@i,f,c
  3830  0009F0  D7E8               	goto	l2530
  3831  0009F2                     l2540:
  3832                           
  3833                           ;system.c: 491: }
  3834                           ;system.c: 493: return ( temp/10 );
  3835  0009F2  C025  F017         	movff	GetAdcBatValue@temp,___lwdiv@dividend
  3836  0009F6  C026  F018         	movff	GetAdcBatValue@temp+1,___lwdiv@dividend+1
  3837  0009FA  0E00               	movlw	0
  3838  0009FC  6E1A               	movwf	___lwdiv@divisor+1,c
  3839  0009FE  0E0A               	movlw	10
  3840  000A00  6E19               	movwf	___lwdiv@divisor,c
  3841  000A02  ECA6  F005         	call	___lwdiv	;wreg free
  3842  000A06  C017  F020         	movff	?___lwdiv,?_GetAdcBatValue
  3843  000A0A  C018  F021         	movff	?___lwdiv+1,?_GetAdcBatValue+1
  3844  000A0E  0012               	return	
  3845  000A10                     __end_of_GetAdcBatValue:
  3846                           	opt stack 0
  3847                           tblptru	equ	0xFF8
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           intcon2	equ	0xFF1
  3852                           postinc0	equ	0xFEE
  3853                           wreg	equ	0xFE8
  3854                           postinc1	equ	0xFE6
  3855                           postdec1	equ	0xFE5
  3856                           fsr1h	equ	0xFE2
  3857                           fsr1l	equ	0xFE1
  3858                           postinc2	equ	0xFDE
  3859                           postdec2	equ	0xFDD
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8
  3863                           
  3864 ;; *************** function ___lwdiv *****************
  3865 ;; Defined at:
  3866 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  dividend        2   22[COMRAM] unsigned int 
  3869 ;;  divisor         2   24[COMRAM] unsigned int 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  quotient        2   27[COMRAM] unsigned int 
  3872 ;;  counter         1   26[COMRAM] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  2   22[COMRAM] unsigned int 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3882 ;;      Params:         4       0       0       0
  3883 ;;      Locals:         3       0       0       0
  3884 ;;      Temps:          0       0       0       0
  3885 ;;      Totals:         7       0       0       0
  3886 ;;Total ram usage:        7 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_GetAdcBatValue
  3893 ;;		_GetAdcAD597Value
  3894 ;;		_GetAdcChargBatValue
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text19
  3899  000B4C                     __ptext19:
  3900                           	opt stack 0
  3901  000B4C                     ___lwdiv:
  3902                           	opt stack 27
  3903                           
  3904                           ;incstack = 0
  3905  000B4C  0E00               	movlw	0
  3906  000B4E  6E1D               	movwf	___lwdiv@quotient+1,c
  3907  000B50  0E00               	movlw	0
  3908  000B52  6E1C               	movwf	___lwdiv@quotient,c
  3909  000B54  5019               	movf	___lwdiv@divisor,w,c
  3910  000B56  101A               	iorwf	___lwdiv@divisor+1,w,c
  3911  000B58  B4D8               	btfsc	status,2,c
  3912  000B5A  D01C               	goto	l907
  3913  000B5C  0E01               	movlw	1
  3914  000B5E  6E1B               	movwf	___lwdiv@counter,c
  3915  000B60  D004               	goto	l2366
  3916  000B62                     l2364:
  3917  000B62  90D8               	bcf	status,0,c
  3918  000B64  3619               	rlcf	___lwdiv@divisor,f,c
  3919  000B66  361A               	rlcf	___lwdiv@divisor+1,f,c
  3920  000B68  2A1B               	incf	___lwdiv@counter,f,c
  3921  000B6A                     l2366:
  3922  000B6A  AE1A               	btfss	___lwdiv@divisor+1,7,c
  3923  000B6C  D7FA               	goto	l2364
  3924  000B6E                     l2368:
  3925  000B6E  90D8               	bcf	status,0,c
  3926  000B70  361C               	rlcf	___lwdiv@quotient,f,c
  3927  000B72  361D               	rlcf	___lwdiv@quotient+1,f,c
  3928  000B74  5019               	movf	___lwdiv@divisor,w,c
  3929  000B76  5C17               	subwf	___lwdiv@dividend,w,c
  3930  000B78  501A               	movf	___lwdiv@divisor+1,w,c
  3931  000B7A  5818               	subwfb	___lwdiv@dividend+1,w,c
  3932  000B7C  A0D8               	btfss	status,0,c
  3933  000B7E  D005               	goto	l2376
  3934  000B80  5019               	movf	___lwdiv@divisor,w,c
  3935  000B82  5E17               	subwf	___lwdiv@dividend,f,c
  3936  000B84  501A               	movf	___lwdiv@divisor+1,w,c
  3937  000B86  5A18               	subwfb	___lwdiv@dividend+1,f,c
  3938  000B88  801C               	bsf	___lwdiv@quotient,0,c
  3939  000B8A                     l2376:
  3940  000B8A  90D8               	bcf	status,0,c
  3941  000B8C  321A               	rrcf	___lwdiv@divisor+1,f,c
  3942  000B8E  3219               	rrcf	___lwdiv@divisor,f,c
  3943  000B90  2E1B               	decfsz	___lwdiv@counter,f,c
  3944  000B92  D7ED               	goto	l2368
  3945  000B94                     l907:
  3946  000B94  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
  3947  000B98  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3948  000B9C  0012               	return		;funcret
  3949  000B9E                     __end_of___lwdiv:
  3950                           	opt stack 0
  3951                           tblptru	equ	0xFF8
  3952                           prodh	equ	0xFF4
  3953                           prodl	equ	0xFF3
  3954                           intcon	equ	0xFF2
  3955                           intcon2	equ	0xFF1
  3956                           postinc0	equ	0xFEE
  3957                           wreg	equ	0xFE8
  3958                           postinc1	equ	0xFE6
  3959                           postdec1	equ	0xFE5
  3960                           fsr1h	equ	0xFE2
  3961                           fsr1l	equ	0xFE1
  3962                           postinc2	equ	0xFDE
  3963                           postdec2	equ	0xFDD
  3964                           fsr2h	equ	0xFDA
  3965                           fsr2l	equ	0xFD9
  3966                           status	equ	0xFD8
  3967                           
  3968 ;; *************** function _AD_Converter *****************
  3969 ;; Defined at:
  3970 ;;		line 268 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  channelNumbe    1    wreg     char 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  channelNumbe    1   28[COMRAM] char 
  3975 ;;  AD_Result       2   29[COMRAM] unsigned short 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  2   24[COMRAM] unsigned short 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3985 ;;      Params:         2       0       0       0
  3986 ;;      Locals:         3       0       0       0
  3987 ;;      Temps:          2       0       0       0
  3988 ;;      Totals:         7       0       0       0
  3989 ;;Total ram usage:        7 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    2
  3992 ;; This function calls:
  3993 ;;		_delay_10us
  3994 ;; This function is called by:
  3995 ;;		_GetAdcBatValue
  3996 ;;		_GetAdcAD597Value
  3997 ;;		_GetAdcChargBatValue
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text20
  4002  000C2A                     __ptext20:
  4003                           	opt stack 0
  4004  000C2A                     _AD_Converter:
  4005                           	opt stack 26
  4006                           
  4007                           ;incstack = 0
  4008                           ;AD_Converter@channelNumber stored from wreg
  4009  000C2A  6E1D               	movwf	AD_Converter@channelNumber,c
  4010                           
  4011                           ;system.c: 270: uint16 AD_Result ;
  4012                           ;system.c: 280: ADCON0 = ((channelNumber & 0x07) << 2) | 0x01;
  4013  000C2C  C01D  F01B         	movff	AD_Converter@channelNumber,??_AD_Converter
  4014  000C30  0E07               	movlw	7
  4015  000C32  161B               	andwf	??_AD_Converter,f,c
  4016  000C34  90D8               	bcf	status,0,c
  4017  000C36  361B               	rlcf	??_AD_Converter,f,c
  4018  000C38  90D8               	bcf	status,0,c
  4019  000C3A  341B               	rlcf	??_AD_Converter,w,c
  4020  000C3C  0901               	iorlw	1
  4021  000C3E  6EC2               	movwf	4034,c	;volatile
  4022                           
  4023                           ;system.c: 285: delay_10us() ;
  4024  000C40  EC9D  F006         	call	_delay_10us	;wreg free
  4025                           
  4026                           ;system.c: 286: delay_10us() ;
  4027  000C44  EC9D  F006         	call	_delay_10us	;wreg free
  4028                           
  4029                           ;system.c: 288: ADCON0bits.GO = 1;
  4030  000C48  82C2               	bsf	4034,1,c	;volatile
  4031  000C4A                     l256:
  4032  000C4A  B2C2               	btfsc	4034,1,c	;volatile
  4033  000C4C  D7FE               	goto	l256
  4034                           
  4035                           ;system.c: 292: PIR1bits.ADIF = 0 ;
  4036  000C4E  9C9E               	bcf	3998,6,c	;volatile
  4037                           
  4038                           ;system.c: 294: AD_Result =( ADRESH << 8 ) | ADRESL ;
  4039  000C50  50C3               	movf	4035,w,c	;volatile
  4040  000C52  CFC4 F01B          	movff	4036,??_AD_Converter	;volatile
  4041  000C56  6A1C               	clrf	(??_AD_Converter+1)& (0+255),c
  4042  000C58  C01B  F01C         	movff	??_AD_Converter,??_AD_Converter+1
  4043  000C5C  6A1B               	clrf	??_AD_Converter,c
  4044  000C5E  101B               	iorwf	??_AD_Converter,w,c
  4045  000C60  6E1E               	movwf	AD_Converter@AD_Result,c
  4046  000C62  501C               	movf	??_AD_Converter+1,w,c
  4047  000C64  6E1F               	movwf	AD_Converter@AD_Result+1,c
  4048                           
  4049                           ;system.c: 296: return (AD_Result);
  4050  000C66  C01E  F019         	movff	AD_Converter@AD_Result,?_AD_Converter
  4051  000C6A  C01F  F01A         	movff	AD_Converter@AD_Result+1,?_AD_Converter+1
  4052  000C6E  0012               	return	
  4053  000C70                     __end_of_AD_Converter:
  4054                           	opt stack 0
  4055                           tblptru	equ	0xFF8
  4056                           prodh	equ	0xFF4
  4057                           prodl	equ	0xFF3
  4058                           intcon	equ	0xFF2
  4059                           intcon2	equ	0xFF1
  4060                           postinc0	equ	0xFEE
  4061                           wreg	equ	0xFE8
  4062                           postinc1	equ	0xFE6
  4063                           postdec1	equ	0xFE5
  4064                           fsr1h	equ	0xFE2
  4065                           fsr1l	equ	0xFE1
  4066                           postinc2	equ	0xFDE
  4067                           postdec2	equ	0xFDD
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function _delay_10us *****************
  4073 ;; Defined at:
  4074 ;;		line 54 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  i               2   22[COMRAM] unsigned int 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;		None               void
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4088 ;;      Params:         0       0       0       0
  4089 ;;      Locals:         2       0       0       0
  4090 ;;      Temps:          0       0       0       0
  4091 ;;      Totals:         2       0       0       0
  4092 ;;Total ram usage:        2 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    1
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_AD_Converter
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text21
  4103  000D3A                     __ptext21:
  4104                           	opt stack 0
  4105  000D3A                     _delay_10us:
  4106                           	opt stack 26
  4107                           
  4108                           ;user.c: 56: unsigned int i;
  4109                           ;user.c: 57: for (i=0; i<4; i++);
  4110                           
  4111                           ;incstack = 0
  4112  000D3A  0E00               	movlw	0
  4113  000D3C  6E18               	movwf	delay_10us@i+1,c
  4114  000D3E  0E00               	movlw	0
  4115  000D40  6E17               	movwf	delay_10us@i,c
  4116  000D42                     l2332:
  4117  000D42  5018               	movf	delay_10us@i+1,w,c
  4118  000D44  E107               	bnz	l159
  4119  000D46  0E04               	movlw	4
  4120  000D48  5C17               	subwf	delay_10us@i,w,c
  4121  000D4A  B0D8               	btfsc	status,0,c
  4122  000D4C  0012               	return	
  4123  000D4E  4A17               	infsnz	delay_10us@i,f,c
  4124  000D50  2A18               	incf	delay_10us@i+1,f,c
  4125  000D52  D7F7               	goto	l2332
  4126  000D54                     l159:
  4127  000D54  0012               	return		;funcret
  4128  000D56                     __end_of_delay_10us:
  4129                           	opt stack 0
  4130                           tblptru	equ	0xFF8
  4131                           prodh	equ	0xFF4
  4132                           prodl	equ	0xFF3
  4133                           intcon	equ	0xFF2
  4134                           intcon2	equ	0xFF1
  4135                           postinc0	equ	0xFEE
  4136                           wreg	equ	0xFE8
  4137                           postinc1	equ	0xFE6
  4138                           postdec1	equ	0xFE5
  4139                           fsr1h	equ	0xFE2
  4140                           fsr1l	equ	0xFE1
  4141                           postinc2	equ	0xFDE
  4142                           postdec2	equ	0xFDD
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function _ISR *****************
  4148 ;; Defined at:
  4149 ;;		line 22 in file "WAFR-01-C001 HD-debug.X/interrupts/interrupts.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;		None               void
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4163 ;;      Params:         0       0       0       0
  4164 ;;      Locals:         0       0       0       0
  4165 ;;      Temps:         22       0       0       0
  4166 ;;      Totals:        22       0       0       0
  4167 ;;Total ram usage:       22 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		Interrupt level 2
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	intcode
  4177  000008                     __pintcode:
  4178                           	opt stack 0
  4179  000008                     _ISR:
  4180                           	opt stack 26
  4181                           
  4182                           ;incstack = 0
  4183  000008  8265               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4184  00000A  CFFA F009          	movff	pclath,??_ISR+8
  4185  00000E  CFFB F00A          	movff	pclatu,??_ISR+9
  4186  000012  ED64  F003         	call	int_func,f	;refresh shadow registers
  4187                           pclatu	equ	0xFFB
  4188                           pclath	equ	0xFFA
  4189                           tblptru	equ	0xFF8
  4190                           prodh	equ	0xFF4
  4191                           prodl	equ	0xFF3
  4192                           intcon	equ	0xFF2
  4193                           intcon2	equ	0xFF1
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           postinc1	equ	0xFE6
  4197                           postdec1	equ	0xFE5
  4198                           fsr1h	equ	0xFE2
  4199                           fsr1l	equ	0xFE1
  4200                           postinc2	equ	0xFDE
  4201                           postdec2	equ	0xFDD
  4202                           fsr2h	equ	0xFDA
  4203                           fsr2l	equ	0xFD9
  4204                           status	equ	0xFD8
  4205                           
  4206                           	psect	intcode_body
  4207  0006C8                     __pintcode_body:
  4208                           	opt stack 26
  4209  0006C8                     int_func:
  4210                           	opt stack 26
  4211  0006C8  0006               	pop		; remove dummy address from shadow register refresh
  4212  0006CA  CFE9 F00B          	movff	fsr0l,??_ISR+10
  4213  0006CE  CFEA F00C          	movff	fsr0h,??_ISR+11
  4214  0006D2  CFE1 F00D          	movff	fsr1l,??_ISR+12
  4215  0006D6  CFE2 F00E          	movff	fsr1h,??_ISR+13
  4216  0006DA  CFD9 F00F          	movff	fsr2l,??_ISR+14
  4217  0006DE  CFDA F010          	movff	fsr2h,??_ISR+15
  4218  0006E2  CFF3 F011          	movff	prodl,??_ISR+16
  4219  0006E6  CFF4 F012          	movff	prodh,??_ISR+17
  4220  0006EA  CFF6 F013          	movff	tblptrl,??_ISR+18
  4221  0006EE  CFF7 F014          	movff	tblptrh,??_ISR+19
  4222  0006F2  CFF8 F015          	movff	tblptru,??_ISR+20
  4223  0006F6  CFF5 F016          	movff	tablat,??_ISR+21
  4224                           
  4225                           ;interrupts.c: 26: if ( INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  4226  0006FA  BAF2               	btfsc	intcon,5,c	;volatile
  4227  0006FC  A4F2               	btfss	intcon,2,c	;volatile
  4228  0006FE  D014               	goto	i2l1716
  4229                           
  4230                           ;interrupts.c: 27: {
  4231                           ;interrupts.c: 28: INTCONbits.TMR0IF = 0;
  4232  000700  94F2               	bcf	intcon,2,c	;volatile
  4233                           
  4234                           ;interrupts.c: 29: timer0Count++ ;
  4235  000702  2A63               	incf	_timer0Count,f,c
  4236                           
  4237                           ;interrupts.c: 30: timeSystemRun++ ;
  4238  000704  0E01               	movlw	1
  4239  000706  2659               	addwf	_timeSystemRun,f,c
  4240  000708  0E00               	movlw	0
  4241  00070A  225A               	addwfc	_timeSystemRun+1,f,c
  4242  00070C  225B               	addwfc	_timeSystemRun+2,f,c
  4243  00070E  225C               	addwfc	_timeSystemRun+3,f,c
  4244                           
  4245                           ;interrupts.c: 32: if (timer0Count == 50)
  4246  000710  0E32               	movlw	50
  4247  000712  1863               	xorwf	_timer0Count,w,c
  4248  000714  A4D8               	btfss	status,2,c
  4249  000716  D004               	goto	i2l1712
  4250                           
  4251                           ;interrupts.c: 33: {
  4252                           ;interrupts.c: 34: timer0Count = 0 ;
  4253  000718  0E00               	movlw	0
  4254  00071A  6E63               	movwf	_timer0Count,c
  4255                           
  4256                           ;interrupts.c: 35: timerHalfSecond ++ ;
  4257  00071C  4A5D               	infsnz	_timerHalfSecond,f,c
  4258  00071E  2A5E               	incf	_timerHalfSecond+1,f,c
  4259  000720                     i2l1712:
  4260                           
  4261                           ;interrupts.c: 36: }
  4262                           ;interrupts.c: 38: TMR0H = (65536-40000)/256;
  4263  000720  0E63               	movlw	99
  4264  000722  6ED7               	movwf	4055,c	;volatile
  4265                           
  4266                           ;interrupts.c: 39: TMR0L = (65536-40000)%256 ;
  4267  000724  0EC0               	movlw	192
  4268  000726  6ED6               	movwf	4054,c	;volatile
  4269  000728                     i2l1716:
  4270                           
  4271                           ;interrupts.c: 40: }
  4272                           ;interrupts.c: 44: if ( INTCONbits.INT0IF && INTCONbits.INT0IE )
  4273  000728  B2F2               	btfsc	intcon,1,c	;volatile
  4274  00072A  A8F2               	btfss	intcon,4,c	;volatile
  4275  00072C  D043               	goto	i2l357
  4276                           
  4277                           ;interrupts.c: 45: {
  4278                           ;interrupts.c: 46: INTCONbits.INT0IF = 0 ;
  4279  00072E  92F2               	bcf	intcon,1,c	;volatile
  4280                           
  4281                           ;interrupts.c: 49: if ( (timeSystemRun - pushButtonJitterTime) < 2 ){
  4282  000730  C055  F001         	movff	_pushButtonJitterTime,??_ISR
  4283  000734  C056  F002         	movff	_pushButtonJitterTime+1,??_ISR+1
  4284  000738  C057  F003         	movff	_pushButtonJitterTime+2,??_ISR+2
  4285  00073C  C058  F004         	movff	_pushButtonJitterTime+3,??_ISR+3
  4286  000740  1E01               	comf	??_ISR,f,c
  4287  000742  1E02               	comf	??_ISR+1,f,c
  4288  000744  1E03               	comf	??_ISR+2,f,c
  4289  000746  1E04               	comf	??_ISR+3,f,c
  4290  000748  2A01               	incf	??_ISR,f,c
  4291  00074A  0E00               	movlw	0
  4292  00074C  2202               	addwfc	??_ISR+1,f,c
  4293  00074E  2203               	addwfc	??_ISR+2,f,c
  4294  000750  2204               	addwfc	??_ISR+3,f,c
  4295  000752  5059               	movf	_timeSystemRun,w,c
  4296  000754  2401               	addwf	??_ISR,w,c
  4297  000756  6E05               	movwf	(??_ISR+4)& (0+255),c
  4298  000758  505A               	movf	_timeSystemRun+1,w,c
  4299  00075A  2002               	addwfc	??_ISR+1,w,c
  4300  00075C  6E06               	movwf	(??_ISR+5)& (0+255),c
  4301  00075E  505B               	movf	_timeSystemRun+2,w,c
  4302  000760  2003               	addwfc	??_ISR+2,w,c
  4303  000762  6E07               	movwf	(??_ISR+6)& (0+255),c
  4304  000764  505C               	movf	_timeSystemRun+3,w,c
  4305  000766  2004               	addwfc	??_ISR+3,w,c
  4306  000768  6E08               	movwf	(??_ISR+7)& (0+255),c
  4307  00076A  5008               	movf	??_ISR+7,w,c
  4308  00076C  1007               	iorwf	??_ISR+6,w,c
  4309  00076E  1006               	iorwf	??_ISR+5,w,c
  4310  000770  E104               	bnz	i2l353
  4311  000772  0E02               	movlw	2
  4312  000774  5C05               	subwf	??_ISR+4,w,c
  4313  000776  A0D8               	btfss	status,0,c
  4314  000778  D01D               	goto	i2l357
  4315  00077A                     i2l353:
  4316                           
  4317                           ;interrupts.c: 52: if ( !PORTBbits.RB0 )
  4318  00077A  B081               	btfsc	3969,0,c	;volatile
  4319  00077C  D006               	goto	i2l355
  4320                           
  4321                           ;interrupts.c: 53: {
  4322                           ;interrupts.c: 54: INTCON2bits.INTEDG0 = 1 ;
  4323  00077E  8CF1               	bsf	intcon2,6,c	;volatile
  4324                           
  4325                           ;interrupts.c: 56: timerHalfSecond = 0 ;
  4326  000780  0E00               	movlw	0
  4327  000782  6E5E               	movwf	_timerHalfSecond+1,c
  4328  000784  0E00               	movlw	0
  4329  000786  6E5D               	movwf	_timerHalfSecond,c
  4330                           
  4331                           ;interrupts.c: 57: }else
  4332  000788  D00D               	goto	i2l1734
  4333  00078A                     i2l355:
  4334                           
  4335                           ;interrupts.c: 58: {
  4336                           ;interrupts.c: 59: INTCON2bits.INTEDG0 = 0 ;
  4337  00078A  9CF1               	bcf	intcon2,6,c	;volatile
  4338                           
  4339                           ;interrupts.c: 61: S2KeyPushTime = timerHalfSecond;
  4340  00078C  C05D  F05F         	movff	_timerHalfSecond,_S2KeyPushTime
  4341                           
  4342                           ;interrupts.c: 62: flagS2KeyPushed = 1 ;
  4343  000790  0E01               	movlw	1
  4344  000792  6E61               	movwf	_flagS2KeyPushed,c
  4345                           
  4346                           ;interrupts.c: 64: buttonPushTimeStop = timeSystemRun ;
  4347  000794  C059  F051         	movff	_timeSystemRun,_buttonPushTimeStop
  4348  000798  C05A  F052         	movff	_timeSystemRun+1,_buttonPushTimeStop+1
  4349  00079C  C05B  F053         	movff	_timeSystemRun+2,_buttonPushTimeStop+2
  4350  0007A0  C05C  F054         	movff	_timeSystemRun+3,_buttonPushTimeStop+3
  4351  0007A4                     i2l1734:
  4352                           
  4353                           ;interrupts.c: 66: }
  4354                           ;interrupts.c: 67: pushButtonJitterTime = timeSystemRun ;
  4355  0007A4  C059  F055         	movff	_timeSystemRun,_pushButtonJitterTime
  4356  0007A8  C05A  F056         	movff	_timeSystemRun+1,_pushButtonJitterTime+1
  4357  0007AC  C05B  F057         	movff	_timeSystemRun+2,_pushButtonJitterTime+2
  4358  0007B0  C05C  F058         	movff	_timeSystemRun+3,_pushButtonJitterTime+3
  4359  0007B4                     i2l357:
  4360  0007B4  C016  FFF5         	movff	??_ISR+21,tablat
  4361  0007B8  C015  FFF8         	movff	??_ISR+20,tblptru
  4362  0007BC  C014  FFF7         	movff	??_ISR+19,tblptrh
  4363  0007C0  C013  FFF6         	movff	??_ISR+18,tblptrl
  4364  0007C4  C012  FFF4         	movff	??_ISR+17,prodh
  4365  0007C8  C011  FFF3         	movff	??_ISR+16,prodl
  4366  0007CC  C010  FFDA         	movff	??_ISR+15,fsr2h
  4367  0007D0  C00F  FFD9         	movff	??_ISR+14,fsr2l
  4368  0007D4  C00E  FFE2         	movff	??_ISR+13,fsr1h
  4369  0007D8  C00D  FFE1         	movff	??_ISR+12,fsr1l
  4370  0007DC  C00C  FFEA         	movff	??_ISR+11,fsr0h
  4371  0007E0  C00B  FFE9         	movff	??_ISR+10,fsr0l
  4372  0007E4  C00A  FFFB         	movff	??_ISR+9,pclatu
  4373  0007E8  C009  FFFA         	movff	??_ISR+8,pclath
  4374  0007EC  9265               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4375  0007EE  0011               	retfie		f
  4376  0007F0                     __end_of_ISR:
  4377                           	opt stack 0
  4378  0000                     pclatu	equ	0xFFB
  4379                           pclath	equ	0xFFA
  4380                           tblptru	equ	0xFF8
  4381                           tblptrh	equ	0xFF7
  4382                           tblptrl	equ	0xFF6
  4383                           tablat	equ	0xFF5
  4384                           prodh	equ	0xFF4
  4385                           prodl	equ	0xFF3
  4386                           intcon	equ	0xFF2
  4387                           intcon2	equ	0xFF1
  4388                           postinc0	equ	0xFEE
  4389                           fsr0h	equ	0xFEA
  4390                           fsr0l	equ	0xFE9
  4391                           wreg	equ	0xFE8
  4392                           postinc1	equ	0xFE6
  4393                           postdec1	equ	0xFE5
  4394                           fsr1h	equ	0xFE2
  4395                           fsr1l	equ	0xFE1
  4396                           postinc2	equ	0xFDE
  4397                           postdec2	equ	0xFDD
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           pclatu	equ	0xFFB
  4402                           pclath	equ	0xFFA
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           intcon	equ	0xFF2
  4410                           intcon2	equ	0xFF1
  4411                           postinc0	equ	0xFEE
  4412                           fsr0h	equ	0xFEA
  4413                           fsr0l	equ	0xFE9
  4414                           wreg	equ	0xFE8
  4415                           postinc1	equ	0xFE6
  4416                           postdec1	equ	0xFE5
  4417                           fsr1h	equ	0xFE2
  4418                           fsr1l	equ	0xFE1
  4419                           postinc2	equ	0xFDE
  4420                           postdec2	equ	0xFDD
  4421                           fsr2h	equ	0xFDA
  4422                           fsr2l	equ	0xFD9
  4423                           status	equ	0xFD8
  4424                           
  4425                           	psect	rparam
  4426  0000                     pclatu	equ	0xFFB
  4427                           pclath	equ	0xFFA
  4428                           tblptru	equ	0xFF8
  4429                           tblptrh	equ	0xFF7
  4430                           tblptrl	equ	0xFF6
  4431                           tablat	equ	0xFF5
  4432                           prodh	equ	0xFF4
  4433                           prodl	equ	0xFF3
  4434                           intcon	equ	0xFF2
  4435                           intcon2	equ	0xFF1
  4436                           postinc0	equ	0xFEE
  4437                           fsr0h	equ	0xFEA
  4438                           fsr0l	equ	0xFE9
  4439                           wreg	equ	0xFE8
  4440                           postinc1	equ	0xFE6
  4441                           postdec1	equ	0xFE5
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           postinc2	equ	0xFDE
  4445                           postdec2	equ	0xFDD
  4446                           fsr2h	equ	0xFDA
  4447                           fsr2l	equ	0xFD9
  4448                           status	equ	0xFD8
  4449                           
  4450                           	psect	temp
  4451  000065                     btemp:
  4452                           	opt stack 0
  4453  000065                     	ds	1
  4454  0000                     int$flags	set	btemp
  4455                           pclatu	equ	0xFFB
  4456                           pclath	equ	0xFFA
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           prodh	equ	0xFF4
  4462                           prodl	equ	0xFF3
  4463                           intcon	equ	0xFF2
  4464                           intcon2	equ	0xFF1
  4465                           postinc0	equ	0xFEE
  4466                           fsr0h	equ	0xFEA
  4467                           fsr0l	equ	0xFE9
  4468                           wreg	equ	0xFE8
  4469                           postinc1	equ	0xFE6
  4470                           postdec1	equ	0xFE5
  4471                           fsr1h	equ	0xFE2
  4472                           fsr1l	equ	0xFE1
  4473                           postinc2	equ	0xFDE
  4474                           postdec2	equ	0xFDD
  4475                           fsr2h	equ	0xFDA
  4476                           fsr2l	equ	0xFD9
  4477                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56     100
    BANK0           128     10      50
    BANK1           256      0       0
    BANK2           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ProcessHeat
    _ShutDownSystem->_delay_ms
    _ProcessHeat->_GetAdcAD597Value
    _GetAdcAD597Value->_AD_Converter
    _GetAdcChargBatValue->_AD_Converter
    _GetAdcBatValue->_AD_Converter
    _AD_Converter->_delay_10us

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    11      5    7207
                                             50 COMRAM     6     1      5
                                              0 BANK0     10    10      0
                   _GetAdcAD597Value
                     _GetAdcBatValue
                _GetAdcChargBatValue
                       _InitializeAD
                     _InitializeINT0
               _InitializeInterrupts
               _InitializeOscillator
                   _InitializePinmux
                   _InitializeTimer0
                    _LevelTmpSetShow
                      _ProcessButton
                        _ProcessHeat
                         _ReadEEprom
                     _ShutDownSystem
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _ShutDownSystem                                       1     1      0     892
                                             28 COMRAM     1     1      0
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2     892
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ProcessHeat                                         11    11      0    1525
                                             39 COMRAM    11    11      0
                   _GetAdcAD597Value
                 _HeatProcessLedShow
                         _ReadEEprom
                        _WriteEEprom
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (2) _WriteEEprom                                          2     1      1     116
                                             22 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ReadEEprom                                           1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HeatProcessLedShow                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetAdcAD597Value                                     8     6      2     995
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _ProcessButton                                        8     8      0      37
                                             22 COMRAM     8     8      0
                    _LevelTmpSetShow
 ---------------------------------------------------------------------------------
 (2) _LevelTmpSetShow                                      0     0      0       0
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _turnOffAllLed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializePinmux                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeOscillator                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeINT0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeAD                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetAdcChargBatValue                                  8     6      2    1026
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _GetAdcBatValue                                       8     6      2    1026
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     565
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _AD_Converter                                         7     5      2     133
                                             24 COMRAM     7     5      2
                         _delay_10us
 ---------------------------------------------------------------------------------
 (4) _delay_10us                                           2     2      0      68
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 22    22      0       0
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetAdcAD597Value
     _AD_Converter
       _delay_10us
     ___lwdiv
   _GetAdcBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _GetAdcChargBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _InitializeAD
   _InitializeINT0
   _InitializeInterrupts
   _InitializeOscillator
   _InitializePinmux
   _InitializeTimer0
   _LevelTmpSetShow
     _turnOffAllLed
   _ProcessButton
     _LevelTmpSetShow
       _turnOffAllLed
   _ProcessHeat
     _GetAdcAD597Value
       _AD_Converter
         _delay_10us
       ___lwdiv
     _HeatProcessLedShow
     _ReadEEprom
     _WriteEEprom
     _turnOffAllLed
   _ReadEEprom
   _ShutDownSystem
     _delay_ms
     _turnOffAllLed
   _delay_ms
   _turnOffAllLed

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2EE      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            EF      0       0       8        0.0%
BANK2               EF      0       0       9        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      A      32       4       39.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      64       1       79.4%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96       5        0.0%
DATA                 0      0      96      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Oct 15 16:03:35 2015

              _buttonPushTimeStop 0051                       __CFG_CP0$ON 000000  
                     __CFG_CP1$ON 000000              __size_of_WriteEEprom 0028  
             _buttonPushTimeStart 004D                                l73 01B8  
                              l76 0198                                l98 0318  
                     __CFG_CPB$ON 000000                       __CFG_CPD$ON 000000  
                     __CFG_BORV$3 000000                       __CFG_OSC$HS 000000  
                             l121 04A2                               l501 0894  
                             l159 0D54                               l256 0C4A  
                             l441 0BF2                               l273 06C4  
                             l442 0C00                               l294 067A  
                             l439 0BEA                               l287 0604  
                             l279 0590                               l393 0D70  
                             l386 0CA8                               l498 0856  
                             l907 0B94                               _ISR 0008  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                              ?_ISR 0001  
                    __CFG_WDT$OFF 000000                              l2410 0A26  
                            l2402 0D7C                              l2332 0D42  
                            l2420 0A74                              l2430 0A98  
                            l2406 0A1E                              l2520 0974  
                            l2424 0A7C                              l2416 0A62  
                            l2530 09C2                              l2364 0B62  
                            l2540 09F2                              l2516 096C  
                            l2700 0910                              l2460 0AB8  
                            l2620 0572                              l2612 054E  
                            l2604 0508                              l2366 0B6A  
                            l2534 09CA                              l2526 09B0  
                            l2710 0940                              l2438 0C14  
                            l2470 0ADE                              l2382 0C7A  
                            l2376 0B8A                              l2368 0B6E  
                            l2704 0918                              l2480 0B08  
                            l2464 0AC4                              l2608 053A  
                            l2392 0C94                              l2384 0C82  
                            l2570 0880                              l2562 0864  
                            l2474 0AEC                              l2458 0CC6  
                            l2626 0592                              l2394 0C98  
                            l2810 02C4                              l2802 027E  
                            l2730 0054                              l2484 0B18  
                            l2468 0AD4                              l2492 0B36  
                            l2644 0606                              l2628 05C0  
                            l2558 0860                              l2478 0AFE  
                            l2646 0634                              l2638 05E6  
                            l2670 06BE                              l2910 04C4  
                            l2814 02E4                              l2806 02A2  
                            l2822 031A                              l2750 0126  
                            l2734 0090                              l2576 088C  
                            l2488 0B2C                              l2664 067C  
                            l2832 035A                              l2690 08C2  
                            l2658 065C                              l2842 037A  
                            l2818 02FA                              l2762 017C  
                            l2738 00B0                              l2588 08A8  
                            l2668 06AA                              l2676 0BA2  
                            l2836 036E                              l2844 0390  
                            l2828 0350                              l2748 0104  
                            l2686 08BA                              l2838 0374  
                            l2758 015C                              l2696 08FE  
                            l2880 042A                              l2848 039A  
                            l2784 01F0                              l2776 01CA  
                            l2858 03D0                              l2794 0230  
                            l2786 01F4                              l2778 01DC  
                            l2894 046A                              l2798 0258  
                            u2200 0640                              u2210 0676  
                            u2140 055A                              u2150 058C  
                            u2240 0BAE                              u2320 005E  
                            u2170 05CC                              u2180 0600  
                            u2260 0BC8                              u2340 0074  
                            u2258 0BB0                              u2530 0310  
                            u2338 0060                              u2278 0BCA  
                            u2550 0340                              u2358 0076  
                            u2568 0342                      __CFG_PWRT$ON 000000  
                    __CFG_WRT0$ON 000000                      __CFG_WRT1$ON 000000  
                   __CFG_EBTR0$ON 000000                     __CFG_EBTR1$ON 000000  
                    __CFG_WRTB$ON 000000                      __CFG_WRTC$ON 000000  
                    __CFG_WRTD$ON 000000                     __CFG_EBTRB$ON 000000  
                            _main 001A                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0065  
                            pclat 000FFA                      main@adcValue 00B0  
                            prodh 000FF4                              prodl 000FF3  
                            start 0016                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
   __size_of_InitializeInterrupts 0008                             ??_ISR 0001  
                           ?_main 0033                             _EEADR 000FA9  
                 __end_of___lwdiv 0B9E                             i2l353 077A  
                           i2l355 078A                             i2l357 07B4  
                    main@keyValue 00AF                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _PORTC 000F82  
                  __CFG_FCMEN$OFF 000000     GetAdcAD597Value@channelNumber 0024  
   __size_of_InitializeOscillator 0002              __end_of_AD_Converter 0C70  
                           main@i 00AD       __end_of_GetAdcChargBatValue 095E  
                  __CFG_BOREN$OFF 000000                             tablat 000FF5  
                   ?_InitializeAD 0001                             status 000FD8  
                      _ReadEEprom 0D6E                   __initialization 0CF6  
         __size_of_InitializeINT0 0008                      __end_of_main 04CC  
        ProcessHeat@countHeatTime 002D         __size_of_InitializePinmux 0028  
       __size_of_InitializeTimer0 0018                            ??_main 0038  
                   __activetblptr 000002               ProcessHeat@adcValue 0031  
        __size_of_LevelTmpSetShow 0046                            _ADCON0 000FC2  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                  ??_InitializeAD 0017                            i2l1712 0720  
                          i2l1716 0728                            i2l1734 07A4  
                 WriteEEprom@addr 0018                   WriteEEprom@data 0017  
             ProcessHeat@flagStop 002C            __size_of_turnOffAllLed 0008  
              GetAdcBatValue@temp 0025                  __end_of_delay_ms 0CA6  
                  __CFG_XINST$OFF 000000       __size_of_HeatProcessLedShow 0096  
                  __CFG_STVREN$ON 000000                            _cyData 0060  
                ??_GetAdcBatValue 0022                         ??___lwdiv 001B  
                          clear_0 0CFC                            clear_1 0D08  
       AD_Converter@channelNumber 001D                     _S2KeyPushTime 005F  
        __end_of_GetAdcAD597Value 0AB6                            tblptrh 000FF7  
                          tblptrl 000FF6                     ??_ProcessHeat 0028  
                          tblptru 000FF8                   _levelTmpSetting 0062  
                      __accesstop 0080           __end_of__initialization 0D0E  
                 __CFG_PBADEN$OFF 000000                       ?_ReadEEprom 0001  
         __size_of_ShutDownSystem 0046                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001       GetAdcBatValue@channelNumber 0024  
           __end_of_ProcessButton 08AC                   _timerHalfSecond 005D  
                   _turnOffAllLed 0D84             __size_of_AD_Converter 0046  
               GetAdcAD597Value@i 0027                        __pbssBANK0 0080  
             __end_of_ProcessHeat 06C8                        _delay_10us 0D3A  
               ??_LevelTmpSetShow 0017                     ??_WriteEEprom 0018  
                  _InitializeINT0 0D94                      _AD_Converter 0C2A  
            __end_of_InitializeAD 0D3A                  _InitializePinmux 0CCE  
                _InitializeTimer0 0D56                    ?_turnOffAllLed 0001  
                 _flagS2KeyPushed 0061              GetAdcChargBatValue@i 0027  
             __size_of_ReadEEprom 0016                         ?_delay_ms 0017  
    __end_of_InitializeInterrupts 0D94            __end_of_InitializeINT0 0D9C  
               main@flagChargeBat 00AC                           __Hparam 0000  
            GetAdcAD597Value@temp 0025                           __Lparam 0000  
                 GetAdcBatValue@i 0027      __end_of_InitializeOscillator 0D9E  
                         ___lwdiv 0B4C                           __pcinit 0CF6  
                         __ramtop 0300               __end_of_WriteEEprom 0CCE  
                         __ptext0 001A                           __ptext1 0B9E  
                         __ptext2 0C70                           __ptext3 04CC  
                         __ptext4 0CA6                           __ptext5 0D6E  
                         __ptext6 0AB6                           __ptext7 0A10  
                         __ptext8 07F0                           __ptext9 0BE4  
                       _T0CONbits 000FD5                      __size_of_ISR 07E8  
                      ??_delay_ms 0019                       _ProcessHeat 04CC  
            _pushButtonJitterTime 0055                    __pintcode_body 06C8  
            end_of_initialization 0D0E                       ?_delay_10us 0001  
                   __Lmediumconst 0000                           int_func 06C8  
                  _ShutDownSystem 0B9E                   ?_InitializeINT0 0001  
    __size_of_GetAdcChargBatValue 00B2                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                     _adcBatValue 0039                   ??_turnOffAllLed 0017  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82                         _TRISAbits 000F92  
               ?_GetAdcAD597Value 0020                         _TRISBbits 000F93  
                       _TRISCbits 000F94                ??_GetAdcAD597Value 0022  
          __end_of_ShutDownSystem 0BE4                      ??_ReadEEprom 0017  
                  ReadEEprom@addr 0017        __end_of_HeatProcessLedShow 0B4C  
           __size_of_InitializeAD 001E                       _WriteEEprom 0CA6  
            _InitializeInterrupts 0D8C             AD_Converter@AD_Result 001E  
             __size_of_delay_10us 001C               start_initialization 0CF6  
                 _LevelTmpSetShow 0BE4                       __end_of_ISR 07F0  
              __end_of_ReadEEprom 0D84              _InitializeOscillator 0D9C  
                 ?_ShutDownSystem 0001          __end_of_InitializePinmux 0CF6  
        __end_of_InitializeTimer0 0D6E                      _InitializeAD 0D1C  
                   _adcAD597Value 0080             ?_InitializeInterrupts 0001  
                __CFG_LPT1OSC$OFF 000000                       __pbssCOMRAM 0039  
                   __pcstackBANK0 00A8           __size_of_GetAdcBatValue 00B2  
           ?_InitializeOscillator 0001                 __size_of_delay_ms 0036  
          __size_of_ProcessButton 00BC                  ___lwdiv@dividend 0017  
               __CFG_CCP2MX$PORTC 000000                         __pintcode 0008  
                        ?___lwdiv 0017           __end_of_LevelTmpSetShow 0C2A  
             _GetAdcChargBatValue 08AC                      ?_ProcessHeat 0001  
                ___lwdiv@quotient 001C                  ??_InitializeINT0 0017  
                    ??_delay_10us 0017                         delay_ms@i 001B  
                       delay_ms@j 0019                         delay_ms@x 0017  
          ??_InitializeInterrupts 0017              ?_GetAdcChargBatValue 0020  
                        _PIR1bits 000F9E                  __CFG_WDTPS$32768 000000  
                   _ProcessButton 07F0                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
              __end_of_delay_10us 0D56            ??_InitializeOscillator 0017  
                     _INTCON2bits 000FF1                        _EECON1bits 000FA6  
           ??_GetAdcChargBatValue 0022         __size_of_GetAdcAD597Value 00A6  
                        __Hrparam 0000                          __Lrparam 0000  
                    ?_WriteEEprom 0017                    ?_ProcessButton 0001  
                __size_of___lwdiv 0052                  ?_LevelTmpSetShow 0001  
           __end_of_turnOffAllLed 0D8C                     _timeSystemRun 0059  
              _HeatProcessLedShow 0AB6                 main@countHeatTime 00A8  
                  _GetAdcBatValue 095E                          _delay_ms 0C70  
                ??_ShutDownSystem 001D                   ___lwdiv@divisor 0019  
                 ___lwdiv@counter 001B               ?_HeatProcessLedShow 0001  
                        __ptext10 0D84                          __ptext11 0D56  
                        __ptext20 0C2A                          __ptext12 0CCE  
                        __ptext21 0D3A                          __ptext13 0D9C  
                        __ptext14 0D8C                          __ptext15 0D94  
                        __ptext16 0D1C                          __ptext17 08AC  
                        __ptext18 095E                          __ptext19 0B4C  
                     delay_10us@i 0017                 ?_InitializePinmux 0001  
               ?_InitializeTimer0 0001                     __size_of_main 04B2  
GetAdcChargBatValue@channelNumber 0024                ??_InitializePinmux 0017  
              ??_InitializeTimer0 0017           GetAdcChargBatValue@temp 0025  
   ProcessButton@buttonPushPeriod 001B              ??_HeatProcessLedShow 0017  
                   ?_AD_Converter 0019                          int$flags 0065  
                        main@argc 0033                          main@argv 0035  
              _adcChargeStatValue 0094            __end_of_GetAdcBatValue 0A10  
                      _INTCONbits 000FF2              __size_of_ProcessHeat 01FC  
                        intlevel2 0000                   ??_ProcessButton 0017  
                  ??_AD_Converter 001B                       _timer0Count 0063  
                     _timer1Count 0064                   ?_GetAdcBatValue 0020  
                _GetAdcAD597Value 0A10  

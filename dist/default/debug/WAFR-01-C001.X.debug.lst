

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Oct 14 15:40:53 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2420
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     _PORTAbits	set	3968
    38  0000                     _PORTBbits	set	3969
    39  0000                     _PORTC	set	3970
    40  0000                     _PORTCbits	set	3970
    41  0000                     _TRISAbits	set	3986
    42  0000                     _TRISBbits	set	3987
    43  0000                     _TRISCbits	set	3988
    44  0000                     _ADCON0	set	4034
    45  0000                     _ADCON0bits	set	4034
    46  0000                     _ADCON1bits	set	4033
    47  0000                     _ADCON2bits	set	4032
    48  0000                     _ADRESH	set	4036
    49  0000                     _ADRESL	set	4035
    50  0000                     _EEADR	set	4009
    51  0000                     _EECON1bits	set	4006
    52  0000                     _EECON2	set	4007
    53  0000                     _EEDATA	set	4008
    54  0000                     _PIR1bits	set	3998
    55  0000                     _T0CONbits	set	4053
    56  0000                     _TMR0H	set	4055
    57  0000                     _TMR0L	set	4054
    58  0000                     _INTCON2bits	set	4081
    59  0000                     _INTCONbits	set	4082
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  000B6C                     __pcinit:
    65                           	opt stack 0
    66  000B6C                     start_initialization:
    67                           	opt stack 0
    68  000B6C                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to BANK0 (40 bytes)
    72  000B6C  EE00  F080         	lfsr	0,__pbssBANK0
    73  000B70  0E28               	movlw	40
    74  000B72                     clear_0:
    75  000B72  6AEE               	clrf	postinc0,c
    76  000B74  06E8               	decf	wreg,f,c
    77  000B76  E1FD               	bnz	clear_0
    78                           
    79                           ; Clear objects allocated to COMRAM (44 bytes)
    80  000B78  EE00  F039         	lfsr	0,__pbssCOMRAM
    81  000B7C  0E2C               	movlw	44
    82  000B7E                     clear_1:
    83  000B7E  6AEE               	clrf	postinc0,c
    84  000B80  06E8               	decf	wreg,f,c
    85  000B82  E1FD               	bnz	clear_1
    86  000B84                     end_of_initialization:
    87                           	opt stack 0
    88  000B84                     __end_of__initialization:
    89                           	opt stack 0
    90  000B84  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91  000B86  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92  000B88  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  000B8A  6EF8               	movwf	tblptru,c
    94  000B8C  0100               	movlb	0
    95  000B8E  EF0D  F000         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000039                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000039                     _adcBatValue:
   104                           	opt stack 0
   105  000039                     	ds	20
   106  00004D                     _buttonPushTimeStart:
   107                           	opt stack 0
   108  00004D                     	ds	4
   109  000051                     _buttonPushTimeStop:
   110                           	opt stack 0
   111  000051                     	ds	4
   112  000055                     _pushButtonJitterTime:
   113                           	opt stack 0
   114  000055                     	ds	4
   115  000059                     _timeSystemRun:
   116                           	opt stack 0
   117  000059                     	ds	4
   118  00005D                     _timerHalfSecond:
   119                           	opt stack 0
   120  00005D                     	ds	2
   121  00005F                     _S2KeyPushTime:
   122                           	opt stack 0
   123  00005F                     	ds	1
   124  000060                     _cyData:
   125                           	opt stack 0
   126  000060                     	ds	1
   127  000061                     _flagS2KeyPushed:
   128                           	opt stack 0
   129  000061                     	ds	1
   130  000062                     _levelTmpSetting:
   131                           	opt stack 0
   132  000062                     	ds	1
   133  000063                     _timer0Count:
   134                           	opt stack 0
   135  000063                     	ds	1
   136  000064                     _timer1Count:
   137                           	opt stack 0
   138  000064                     	ds	1
   139                           tblptru	equ	0xFF8
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssBANK0
   144  000080                     __pbssBANK0:
   145                           	opt stack 0
   146  000080                     _adcAD597Value:
   147                           	opt stack 0
   148  000080                     	ds	20
   149  000094                     _adcChargeStatValue:
   150                           	opt stack 0
   151  000094                     	ds	20
   152                           tblptru	equ	0xFF8
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           
   156                           	psect	cstackBANK0
   157  0000A8                     __pcstackBANK0:
   158                           	opt stack 0
   159  0000A8                     main@countHeatTime:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x0
   163  0000A8                     	ds	4
   164  0000AC                     main@flagChargeBat:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0x4
   168  0000AC                     	ds	1
   169  0000AD                     main@keyValue:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x5
   173  0000AD                     	ds	1
   174  0000AE                     main@i:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x6
   178  0000AE                     	ds	2
   179  0000B0                     main@adcValue:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x8
   183  0000B0                     	ds	2
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	cstackCOMRAM
   189  000001                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000001                     ??_ISR:
   192  000001                     
   193                           ; 1 bytes @ 0x0
   194  000001                     	ds	22
   195  000017                     ??_ProcessButton:
   196  000017                     ?___lwdiv:
   197                           	opt stack 0
   198  000017                     WriteEEprom@data:
   199                           	opt stack 0
   200  000017                     ReadEEprom@addr:
   201                           	opt stack 0
   202  000017                     delay_ms@x:
   203                           	opt stack 0
   204  000017                     delay_10us@i:
   205                           	opt stack 0
   206  000017                     ___lwdiv@dividend:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x16
   210  000017                     	ds	1
   211  000018                     WriteEEprom@addr:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x17
   215  000018                     	ds	1
   216  000019                     ?_AD_Converter:
   217                           	opt stack 0
   218  000019                     delay_ms@j:
   219                           	opt stack 0
   220  000019                     ___lwdiv@divisor:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x18
   224  000019                     	ds	2
   225  00001B                     ??_AD_Converter:
   226  00001B                     ___lwdiv@counter:
   227                           	opt stack 0
   228  00001B                     delay_ms@i:
   229                           	opt stack 0
   230  00001B                     ProcessButton@buttonPushPeriod:
   231                           	opt stack 0
   232                           
   233                           ; 4 bytes @ 0x1A
   234  00001B                     	ds	1
   235  00001C                     ___lwdiv@quotient:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x1B
   239  00001C                     	ds	1
   240  00001D                     ??_ShutDownSystem:
   241  00001D                     AD_Converter@channelNumber:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x1C
   245  00001D                     	ds	1
   246  00001E                     AD_Converter@AD_Result:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x1D
   250  00001E                     	ds	2
   251  000020                     ?_GetAdcBatValue:
   252                           	opt stack 0
   253  000020                     ?_GetAdcChargBatValue:
   254                           	opt stack 0
   255  000020                     ?_GetAdcAD597Value:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x1F
   259  000020                     	ds	2
   260  000022                     ??_GetAdcBatValue:
   261  000022                     ??_GetAdcChargBatValue:
   262  000022                     ??_GetAdcAD597Value:
   263                           
   264                           ; 0 bytes @ 0x21
   265  000022                     	ds	2
   266  000024                     GetAdcBatValue@channelNumber:
   267                           	opt stack 0
   268  000024                     GetAdcAD597Value@channelNumber:
   269                           	opt stack 0
   270  000024                     GetAdcChargBatValue@channelNumber:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x23
   274  000024                     	ds	1
   275  000025                     GetAdcBatValue@temp:
   276                           	opt stack 0
   277  000025                     GetAdcAD597Value@temp:
   278                           	opt stack 0
   279  000025                     GetAdcChargBatValue@temp:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x24
   283  000025                     	ds	2
   284  000027                     GetAdcBatValue@i:
   285                           	opt stack 0
   286  000027                     GetAdcAD597Value@i:
   287                           	opt stack 0
   288  000027                     GetAdcChargBatValue@i:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x26
   292  000027                     	ds	1
   293  000028                     ??_ProcessHeat:
   294                           
   295                           ; 0 bytes @ 0x27
   296  000028                     	ds	4
   297  00002C                     ProcessHeat@flagStop:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x2B
   301  00002C                     	ds	1
   302  00002D                     ProcessHeat@countHeatTime:
   303                           	opt stack 0
   304                           
   305                           ; 4 bytes @ 0x2C
   306  00002D                     	ds	4
   307  000031                     ProcessHeat@adcValue:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x30
   311  000031                     	ds	2
   312  000033                     
   313                           ; 2 bytes @ 0x32
   314  000033                     	ds	2
   315  000035                     
   316                           ; 3 bytes @ 0x34
   317  000035                     	ds	3
   318  000038                     ??_main:
   319                           
   320                           ; 0 bytes @ 0x37
   321  000038                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 36 in file "WAFR-01-C001 HD-debug.X/WAFR-01-C001-HD-debug main/WAFR-01-C001-HD-debug-main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  argc            2   50[COMRAM] int 
   334 ;;  argv            3   52[COMRAM] PTR PTR unsigned char 
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  countHeatTim    4    0[BANK0 ] unsigned long 
   337 ;;  adcValue        2    8[BANK0 ] short 
   338 ;;  i               2    6[BANK0 ] unsigned int 
   339 ;;  keyValue        1    5[BANK0 ] char 
   340 ;;  flagChargeBa    1    4[BANK0 ] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2   50[COMRAM] int 
   343 ;; Registers used:
   344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   350 ;;      Params:         5       0       0       0
   351 ;;      Locals:         0      10       0       0
   352 ;;      Temps:          1       0       0       0
   353 ;;      Totals:         6      10       0       0
   354 ;;Total ram usage:       16 bytes
   355 ;; Hardware stack levels required when called:    5
   356 ;; This function calls:
   357 ;;		_GetAdcBatValue
   358 ;;		_GetAdcChargBatValue
   359 ;;		_InitializeAD
   360 ;;		_InitializeINT0
   361 ;;		_InitializeInterrupts
   362 ;;		_InitializeOscillator
   363 ;;		_InitializePinmux
   364 ;;		_InitializeTimer0
   365 ;;		_LevelTmpSetShow
   366 ;;		_ProcessButton
   367 ;;		_ProcessHeat
   368 ;;		_ReadEEprom
   369 ;;		_ShutDownSystem
   370 ;;		_delay_ms
   371 ;;		_turnOffAllLed
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text0
   378  00001A                     __ptext0:
   379                           	opt stack 0
   380  00001A                     _main:
   381                           	opt stack 26
   382                           
   383                           ;WAFR-01-C001-HD-debug-main.c: 38: unsigned int i;
   384                           ;WAFR-01-C001-HD-debug-main.c: 39: int8 keyValue;
   385                           ;WAFR-01-C001-HD-debug-main.c: 43: int16 adcValue;
   386                           ;WAFR-01-C001-HD-debug-main.c: 45: uint32 countHeatTime = 0 ;
   387                           
   388                           ;incstack = 0
   389  00001A  0E00               	movlw	0
   390  00001C  0100               	movlb	0	; () banked
   391  00001E  6FA8               	movwf	main@countHeatTime& (0+255),b
   392  000020  0E00               	movlw	0
   393  000022  6FA9               	movwf	(main@countHeatTime+1)& (0+255),b
   394  000024  0E00               	movlw	0
   395  000026  6FAA               	movwf	(main@countHeatTime+2)& (0+255),b
   396  000028  0E00               	movlw	0
   397  00002A  6FAB               	movwf	(main@countHeatTime+3)& (0+255),b
   398                           
   399                           ;WAFR-01-C001-HD-debug-main.c: 46: uint8 flagChargeBat = 0 ;
   400  00002C  0E00               	movlw	0
   401  00002E  0100               	movlb	0	; () banked
   402  000030  6FAC               	movwf	main@flagChargeBat& (0+255),b
   403                           
   404                           ; BSR set to: 0
   405                           ;WAFR-01-C001-HD-debug-main.c: 49: InitializeOscillator();
   406  000032  EC09  F006         	call	_InitializeOscillator	;wreg free
   407                           
   408                           ;WAFR-01-C001-HD-debug-main.c: 51: InitializePinmux();
   409  000036  ECA2  F005         	call	_InitializePinmux	;wreg free
   410                           
   411                           ;WAFR-01-C001-HD-debug-main.c: 53: PORTBbits.RB2 = 1;
   412  00003A  8481               	bsf	3969,2,c	;volatile
   413                           
   414                           ;WAFR-01-C001-HD-debug-main.c: 62: InitializeInterrupts();
   415  00003C  EC01  F006         	call	_InitializeInterrupts	;wreg free
   416                           
   417                           ;WAFR-01-C001-HD-debug-main.c: 64: InitializeTimer0();
   418  000040  ECE6  F005         	call	_InitializeTimer0	;wreg free
   419                           
   420                           ;WAFR-01-C001-HD-debug-main.c: 66: InitializeINT0();
   421  000044  EC05  F006         	call	_InitializeINT0	;wreg free
   422                           
   423                           ;WAFR-01-C001-HD-debug-main.c: 70: InitializeAD();
   424  000048  ECC9  F005         	call	_InitializeAD	;wreg free
   425                           
   426                           ;WAFR-01-C001-HD-debug-main.c: 72: turnOffAllLed();
   427  00004C  ECFD  F005         	call	_turnOffAllLed	;wreg free
   428                           
   429                           ;WAFR-01-C001-HD-debug-main.c: 75: PORTBbits.RB1 = 0 ;
   430  000050  9281               	bcf	3969,1,c	;volatile
   431                           
   432                           ;WAFR-01-C001-HD-debug-main.c: 81: while ( !PORTBbits.RB0 )
   433  000052  D01E               	goto	l2614
   434  000054                     l2610:
   435                           
   436                           ;WAFR-01-C001-HD-debug-main.c: 82: {
   437                           ;WAFR-01-C001-HD-debug-main.c: 83: PORTCbits.RC0 = ! PORTCbits.RC0 ;
   438  000054  B082               	btfsc	3970,0,c	;volatile
   439  000056  D003               	goto	u2080
   440  000058  6A38               	clrf	??_main& (0+255),c
   441  00005A  2A38               	incf	??_main& (0+255),f,c
   442  00005C  D001               	goto	u2098
   443  00005E                     u2080:
   444  00005E  6A38               	clrf	??_main& (0+255),c
   445  000060                     u2098:
   446  000060  5082               	movf	3970,w,c	;volatile
   447  000062  1838               	xorwf	??_main,w,c
   448  000064  0BFE               	andlw	-2
   449  000066  1838               	xorwf	??_main,w,c
   450  000068  6E82               	movwf	3970,c	;volatile
   451                           
   452                           ;WAFR-01-C001-HD-debug-main.c: 84: PORTCbits.RC2 = ! PORTCbits.RC2;
   453  00006A  B482               	btfsc	3970,2,c	;volatile
   454  00006C  D003               	goto	u2100
   455  00006E  6A38               	clrf	??_main& (0+255),c
   456  000070  2A38               	incf	??_main& (0+255),f,c
   457  000072  D001               	goto	u2118
   458  000074                     u2100:
   459  000074  6A38               	clrf	??_main& (0+255),c
   460  000076                     u2118:
   461  000076  4638               	rlncf	??_main,f,c
   462  000078  4638               	rlncf	??_main,f,c
   463  00007A  5082               	movf	3970,w,c	;volatile
   464  00007C  1838               	xorwf	??_main,w,c
   465  00007E  0BFB               	andlw	-5
   466  000080  1838               	xorwf	??_main,w,c
   467  000082  6E82               	movwf	3970,c	;volatile
   468                           
   469                           ;WAFR-01-C001-HD-debug-main.c: 85: delay_ms(80);
   470  000084  0E00               	movlw	0
   471  000086  6E18               	movwf	delay_ms@x+1,c
   472  000088  0E50               	movlw	80
   473  00008A  6E17               	movwf	delay_ms@x,c
   474  00008C  EC73  F005         	call	_delay_ms	;wreg free
   475  000090                     l2614:
   476  000090  A081               	btfss	3969,0,c	;volatile
   477  000092  D7E0               	goto	l2610
   478                           
   479                           ;WAFR-01-C001-HD-debug-main.c: 86: }
   480                           ;WAFR-01-C001-HD-debug-main.c: 87: PORTCbits.RC0 = 0 ;
   481  000094  9082               	bcf	3970,0,c	;volatile
   482                           
   483                           ;WAFR-01-C001-HD-debug-main.c: 90: timeSystemRun = 0 ;
   484  000096  0E00               	movlw	0
   485  000098  6E59               	movwf	_timeSystemRun,c
   486  00009A  0E00               	movlw	0
   487  00009C  6E5A               	movwf	_timeSystemRun+1,c
   488  00009E  0E00               	movlw	0
   489  0000A0  6E5B               	movwf	_timeSystemRun+2,c
   490  0000A2  0E00               	movlw	0
   491  0000A4  6E5C               	movwf	_timeSystemRun+3,c
   492                           
   493                           ;WAFR-01-C001-HD-debug-main.c: 96: for ( i = 0 ; i < 10 ; i++)
   494  0000A6  0E00               	movlw	0
   495  0000A8  0100               	movlb	0	; () banked
   496  0000AA  6FAF               	movwf	(main@i+1)& (0+255),b
   497  0000AC  0E00               	movlw	0
   498  0000AE  6FAE               	movwf	main@i& (0+255),b
   499  0000B0                     l2618:
   500                           
   501                           ; BSR set to: 0
   502  0000B0  0100               	movlb	0	; () banked
   503  0000B2  51AF               	movf	(main@i+1)& (0+255),w,b
   504  0000B4  E127               	bnz	l2628
   505  0000B6  0E0A               	movlw	10
   506  0000B8  0100               	movlb	0	; () banked
   507  0000BA  5DAE               	subwf	main@i& (0+255),w,b
   508  0000BC  B0D8               	btfsc	status,0,c
   509  0000BE  D022               	goto	l2628
   510                           
   511                           ; BSR set to: 0
   512                           ;WAFR-01-C001-HD-debug-main.c: 97: {
   513                           ;WAFR-01-C001-HD-debug-main.c: 98: adcBatValue[i] = 816 ;
   514                           
   515                           ; BSR set to: 0
   516                           
   517                           ; BSR set to: 0
   518  0000C0  90D8               	bcf	status,0,c
   519  0000C2  0100               	movlb	0	; () banked
   520  0000C4  35AE               	rlcf	main@i& (0+255),w,b
   521  0000C6  6ED9               	movwf	fsr2l,c
   522  0000C8  0100               	movlb	0	; () banked
   523  0000CA  35AF               	rlcf	(main@i+1)& (0+255),w,b
   524  0000CC  6EDA               	movwf	fsr2h,c
   525  0000CE  0E39               	movlw	low _adcBatValue
   526  0000D0  26D9               	addwf	fsr2l,f,c
   527  0000D2  0E00               	movlw	high _adcBatValue
   528  0000D4  22DA               	addwfc	fsr2h,f,c
   529  0000D6  0E30               	movlw	48
   530  0000D8  6EDE               	movwf	postinc2,c
   531  0000DA  0E03               	movlw	3
   532  0000DC  6EDD               	movwf	postdec2,c
   533                           
   534                           ;WAFR-01-C001-HD-debug-main.c: 99: adcAD597Value[i] = 0 ;
   535  0000DE  90D8               	bcf	status,0,c
   536  0000E0  0100               	movlb	0	; () banked
   537  0000E2  35AE               	rlcf	main@i& (0+255),w,b
   538  0000E4  6ED9               	movwf	fsr2l,c
   539  0000E6  0100               	movlb	0	; () banked
   540  0000E8  35AF               	rlcf	(main@i+1)& (0+255),w,b
   541  0000EA  6EDA               	movwf	fsr2h,c
   542  0000EC  0E80               	movlw	low _adcAD597Value
   543  0000EE  26D9               	addwf	fsr2l,f,c
   544  0000F0  0E00               	movlw	high _adcAD597Value
   545  0000F2  22DA               	addwfc	fsr2h,f,c
   546  0000F4  0E00               	movlw	0
   547  0000F6  6EDE               	movwf	postinc2,c
   548  0000F8  0E00               	movlw	0
   549  0000FA  6EDD               	movwf	postdec2,c
   550                           
   551                           ; BSR set to: 0
   552  0000FC  0100               	movlb	0	; () banked
   553  0000FE  4BAE               	infsnz	main@i& (0+255),f,b
   554  000100  2BAF               	incf	(main@i+1)& (0+255),f,b
   555  000102  D7D6               	goto	l2618
   556  000104                     l2628:
   557                           
   558                           ; BSR set to: 0
   559                           ;WAFR-01-C001-HD-debug-main.c: 100: }
   560                           ;WAFR-01-C001-HD-debug-main.c: 103: buttonPushTimeStart = 0 ;
   561  000104  0E00               	movlw	0
   562  000106  6E4D               	movwf	_buttonPushTimeStart,c
   563  000108  0E00               	movlw	0
   564  00010A  6E4E               	movwf	_buttonPushTimeStart+1,c
   565  00010C  0E00               	movlw	0
   566  00010E  6E4F               	movwf	_buttonPushTimeStart+2,c
   567  000110  0E00               	movlw	0
   568  000112  6E50               	movwf	_buttonPushTimeStart+3,c
   569                           
   570                           ;WAFR-01-C001-HD-debug-main.c: 104: buttonPushTimeStop = 0 ;
   571  000114  0E00               	movlw	0
   572  000116  6E51               	movwf	_buttonPushTimeStop,c
   573  000118  0E00               	movlw	0
   574  00011A  6E52               	movwf	_buttonPushTimeStop+1,c
   575  00011C  0E00               	movlw	0
   576  00011E  6E53               	movwf	_buttonPushTimeStop+2,c
   577  000120  0E00               	movlw	0
   578  000122  6E54               	movwf	_buttonPushTimeStop+3,c
   579                           
   580                           ;WAFR-01-C001-HD-debug-main.c: 109: while(timeSystemRun < 10 * 100)
   581  000124  D052               	goto	l2656
   582  000126                     l2630:
   583                           
   584                           ; BSR set to: 0
   585                           ;WAFR-01-C001-HD-debug-main.c: 110: {
   586                           ;WAFR-01-C001-HD-debug-main.c: 111: adcValue = GetAdcBatValue( 4 );
   587  000126  0E04               	movlw	4
   588  000128  ECEA  F003         	call	_GetAdcBatValue
   589  00012C  C020  F0B0         	movff	?_GetAdcBatValue,main@adcValue
   590  000130  C021  F0B1         	movff	?_GetAdcBatValue+1,main@adcValue+1
   591                           
   592                           ;WAFR-01-C001-HD-debug-main.c: 113: turnOffAllLed();
   593  000134  ECFD  F005         	call	_turnOffAllLed	;wreg free
   594                           
   595                           ;WAFR-01-C001-HD-debug-main.c: 114: if ( adcValue > 996)
   596  000138  0100               	movlb	0	; () banked
   597  00013A  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   598  00013C  D00F               	goto	l2638
   599  00013E  0EE5               	movlw	229
   600  000140  0100               	movlb	0	; () banked
   601  000142  5DB0               	subwf	main@adcValue& (0+255),w,b
   602  000144  0E03               	movlw	3
   603  000146  0100               	movlb	0	; () banked
   604  000148  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   605  00014A  A0D8               	btfss	status,0,c
   606  00014C  D007               	goto	l2638
   607                           
   608                           ; BSR set to: 0
   609                           ;WAFR-01-C001-HD-debug-main.c: 115: {
   610                           ;WAFR-01-C001-HD-debug-main.c: 117: PORTCbits.RC0 = 1;
   611  00014E  8082               	bsf	3970,0,c	;volatile
   612                           
   613                           ;WAFR-01-C001-HD-debug-main.c: 118: PORTCbits.RC1 = 1;
   614  000150  8282               	bsf	3970,1,c	;volatile
   615                           
   616                           ;WAFR-01-C001-HD-debug-main.c: 119: PORTCbits.RC3 = 1;
   617  000152  8682               	bsf	3970,3,c	;volatile
   618                           
   619                           ;WAFR-01-C001-HD-debug-main.c: 120: PORTCbits.RC4 = 1;
   620  000154  8882               	bsf	3970,4,c	;volatile
   621                           
   622                           ;WAFR-01-C001-HD-debug-main.c: 121: PORTCbits.RC6 = 1;
   623  000156  8C82               	bsf	3970,6,c	;volatile
   624                           
   625                           ;WAFR-01-C001-HD-debug-main.c: 122: PORTCbits.RC7 = 1;
   626  000158  8E82               	bsf	3970,7,c	;volatile
   627                           
   628                           ;WAFR-01-C001-HD-debug-main.c: 123: }else if ( adcValue > 891 )
   629  00015A  D02E               	goto	l71
   630  00015C                     l2638:
   631                           
   632                           ; BSR set to: 0
   633  00015C  0100               	movlb	0	; () banked
   634  00015E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   635  000160  D00D               	goto	l2642
   636  000162  0E7C               	movlw	124
   637  000164  0100               	movlb	0	; () banked
   638  000166  5DB0               	subwf	main@adcValue& (0+255),w,b
   639  000168  0E03               	movlw	3
   640  00016A  0100               	movlb	0	; () banked
   641  00016C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   642  00016E  A0D8               	btfss	status,0,c
   643  000170  D005               	goto	l2642
   644                           
   645                           ; BSR set to: 0
   646                           ;WAFR-01-C001-HD-debug-main.c: 124: {
   647                           ;WAFR-01-C001-HD-debug-main.c: 125: PORTCbits.RC0 = 1;
   648  000172  8082               	bsf	3970,0,c	;volatile
   649                           
   650                           ;WAFR-01-C001-HD-debug-main.c: 126: PORTCbits.RC1 = 1;
   651  000174  8282               	bsf	3970,1,c	;volatile
   652                           
   653                           ;WAFR-01-C001-HD-debug-main.c: 127: PORTCbits.RC3 = 1;
   654  000176  8682               	bsf	3970,3,c	;volatile
   655                           
   656                           ;WAFR-01-C001-HD-debug-main.c: 128: PORTCbits.RC4 = 1;
   657  000178  8882               	bsf	3970,4,c	;volatile
   658                           
   659                           ;WAFR-01-C001-HD-debug-main.c: 129: }else if ( adcValue > 816)
   660  00017A  D01E               	goto	l71
   661  00017C                     l2642:
   662                           
   663                           ; BSR set to: 0
   664  00017C  0100               	movlb	0	; () banked
   665  00017E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   666  000180  D00B               	goto	l74
   667  000182  0E31               	movlw	49
   668  000184  0100               	movlb	0	; () banked
   669  000186  5DB0               	subwf	main@adcValue& (0+255),w,b
   670  000188  0E03               	movlw	3
   671  00018A  0100               	movlb	0	; () banked
   672  00018C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   673  00018E  A0D8               	btfss	status,0,c
   674  000190  D003               	goto	l74
   675                           
   676                           ; BSR set to: 0
   677                           ;WAFR-01-C001-HD-debug-main.c: 130: {
   678                           ;WAFR-01-C001-HD-debug-main.c: 131: PORTCbits.RC0 = 1;
   679  000192  8082               	bsf	3970,0,c	;volatile
   680                           
   681                           ;WAFR-01-C001-HD-debug-main.c: 132: PORTCbits.RC1 = 1;
   682  000194  8282               	bsf	3970,1,c	;volatile
   683                           
   684                           ;WAFR-01-C001-HD-debug-main.c: 133: } else
   685  000196  D010               	goto	l71
   686  000198                     l74:
   687                           
   688                           ; BSR set to: 0
   689                           ;WAFR-01-C001-HD-debug-main.c: 134: {
   690                           ;WAFR-01-C001-HD-debug-main.c: 135: PORTCbits.RC0 = 1;
   691  000198  8082               	bsf	3970,0,c	;volatile
   692                           
   693                           ;WAFR-01-C001-HD-debug-main.c: 136: PORTCbits.RC1 = 1;
   694  00019A  8282               	bsf	3970,1,c	;volatile
   695                           
   696                           ; BSR set to: 0
   697                           ;WAFR-01-C001-HD-debug-main.c: 137: delay_ms(100);
   698  00019C  0E00               	movlw	0
   699  00019E  6E18               	movwf	delay_ms@x+1,c
   700  0001A0  0E64               	movlw	100
   701  0001A2  6E17               	movwf	delay_ms@x,c
   702  0001A4  EC73  F005         	call	_delay_ms	;wreg free
   703                           
   704                           ;WAFR-01-C001-HD-debug-main.c: 138: PORTCbits.RC0 = 0;
   705  0001A8  9082               	bcf	3970,0,c	;volatile
   706                           
   707                           ;WAFR-01-C001-HD-debug-main.c: 139: PORTCbits.RC1 = 0;
   708  0001AA  9282               	bcf	3970,1,c	;volatile
   709                           
   710                           ;WAFR-01-C001-HD-debug-main.c: 140: delay_ms(100);
   711  0001AC  0E00               	movlw	0
   712  0001AE  6E18               	movwf	delay_ms@x+1,c
   713  0001B0  0E64               	movlw	100
   714  0001B2  6E17               	movwf	delay_ms@x,c
   715  0001B4  EC73  F005         	call	_delay_ms	;wreg free
   716  0001B8                     l71:
   717                           
   718                           ;WAFR-01-C001-HD-debug-main.c: 141: }
   719                           ;WAFR-01-C001-HD-debug-main.c: 143: keyValue = ProcessButton();
   720  0001B8  EC33  F003         	call	_ProcessButton	;wreg free
   721  0001BC  0100               	movlb	0	; () banked
   722  0001BE  6FAD               	movwf	main@keyValue& (0+255),b
   723                           
   724                           ; BSR set to: 0
   725                           ;WAFR-01-C001-HD-debug-main.c: 144: if ( keyValue != 0 )
   726  0001C0  0100               	movlb	0	; () banked
   727  0001C2  51AD               	movf	main@keyValue& (0+255),w,b
   728  0001C4  0100               	movlb	0	; () banked
   729  0001C6  A4D8               	btfss	status,2,c
   730  0001C8  D009               	goto	l2658
   731  0001CA                     l2656:
   732                           
   733                           ; BSR set to: 0
   734  0001CA  505C               	movf	_timeSystemRun+3,w,c
   735  0001CC  105B               	iorwf	_timeSystemRun+2,w,c
   736  0001CE  E106               	bnz	l2658
   737  0001D0  0EE8               	movlw	232
   738  0001D2  5C59               	subwf	_timeSystemRun,w,c
   739  0001D4  0E03               	movlw	3
   740  0001D6  585A               	subwfb	_timeSystemRun+1,w,c
   741  0001D8  A0D8               	btfss	status,0,c
   742  0001DA  D7A5               	goto	l2630
   743  0001DC                     l2658:
   744                           
   745                           ; BSR set to: 0
   746                           ;WAFR-01-C001-HD-debug-main.c: 147: }
   747                           ;WAFR-01-C001-HD-debug-main.c: 148: }
   748                           ;WAFR-01-C001-HD-debug-main.c: 154: levelTmpSetting = ReadEEprom( 0 );
   749  0001DC  0E00               	movlw	0
   750  0001DE  ECF2  F005         	call	_ReadEEprom
   751  0001E2  6E62               	movwf	_levelTmpSetting,c
   752                           
   753                           ;WAFR-01-C001-HD-debug-main.c: 155: if ( (levelTmpSetting > 3) | (levelTmpSetting == 0 )
      +                           )
   754  0001E4  0E04               	movlw	4
   755  0001E6  6062               	cpfslt	_levelTmpSetting,c
   756  0001E8  D003               	goto	l2664
   757  0001EA  5062               	movf	_levelTmpSetting,w,c
   758  0001EC  A4D8               	btfss	status,2,c
   759  0001EE  D002               	goto	l81
   760  0001F0                     l2664:
   761                           
   762                           ;WAFR-01-C001-HD-debug-main.c: 156: {
   763                           ;WAFR-01-C001-HD-debug-main.c: 157: levelTmpSetting = 1 ;
   764  0001F0  0E01               	movlw	1
   765  0001F2  6E62               	movwf	_levelTmpSetting,c
   766  0001F4                     l81:
   767                           
   768                           ;WAFR-01-C001-HD-debug-main.c: 189: {
   769                           ;WAFR-01-C001-HD-debug-main.c: 190: if ( !flagChargeBat )
   770  0001F4  0100               	movlb	0	; () banked
   771  0001F6  51AC               	movf	main@flagChargeBat& (0+255),w,b
   772  0001F8  0100               	movlb	0	; () banked
   773  0001FA  A4D8               	btfss	status,2,c
   774  0001FC  D01B               	goto	l2680
   775                           
   776                           ; BSR set to: 0
   777                           ;WAFR-01-C001-HD-debug-main.c: 191: {
   778                           ;WAFR-01-C001-HD-debug-main.c: 192: keyValue = ProcessButton();
   779  0001FE  EC33  F003         	call	_ProcessButton	;wreg free
   780  000202  0100               	movlb	0	; () banked
   781  000204  6FAD               	movwf	main@keyValue& (0+255),b
   782                           
   783                           ;WAFR-01-C001-HD-debug-main.c: 193: switch ( keyValue)
   784  000206  D006               	goto	l2674
   785  000208                     l2668:
   786                           
   787                           ; BSR set to: 0
   788                           ;WAFR-01-C001-HD-debug-main.c: 201: ProcessHeat();
   789  000208  ECA1  F001         	call	_ProcessHeat	;wreg free
   790                           
   791                           ;WAFR-01-C001-HD-debug-main.c: 202: break;
   792  00020C  D00E               	goto	l2676
   793  00020E                     l2670:
   794                           
   795                           ;WAFR-01-C001-HD-debug-main.c: 204: ShutDownSystem();
   796  00020E  EC0A  F005         	call	_ShutDownSystem	;wreg free
   797                           
   798                           ;WAFR-01-C001-HD-debug-main.c: 207: }
   799                           
   800                           ;WAFR-01-C001-HD-debug-main.c: 206: default: break;
   801                           
   802                           ;WAFR-01-C001-HD-debug-main.c: 205: break;
   803  000212  D00B               	goto	l2676
   804  000214                     l2674:
   805  000214  0100               	movlb	0	; () banked
   806  000216  51AD               	movf	main@keyValue& (0+255),w,b
   807                           
   808                           ; Switch size 1, requested type "space"
   809                           ; Number of cases is 3, Range of values is 1 to 3
   810                           ; switch strategies available:
   811                           ; Name         Instructions Cycles
   812                           ; simple_byte           10     6 (average)
   813                           ;	Chosen strategy is simple_byte
   814  000218  0A01               	xorlw	1	; case 1
   815  00021A  B4D8               	btfsc	status,2,c
   816  00021C  D006               	goto	l2676
   817  00021E  0A03               	xorlw	3	; case 2
   818  000220  B4D8               	btfsc	status,2,c
   819  000222  D7F2               	goto	l2668
   820  000224  0A01               	xorlw	1	; case 3
   821  000226  B4D8               	btfsc	status,2,c
   822  000228  D7F2               	goto	l2670
   823  00022A                     l2676:
   824                           
   825                           ;WAFR-01-C001-HD-debug-main.c: 216: if ( timerHalfSecond >= 1 )
   826  00022A  505D               	movf	_timerHalfSecond,w,c
   827  00022C  105E               	iorwf	_timerHalfSecond+1,w,c
   828  00022E  A4D8               	btfss	status,2,c
   829                           
   830                           ;WAFR-01-C001-HD-debug-main.c: 217: {
   831                           ;WAFR-01-C001-HD-debug-main.c: 218: LevelTmpSetShow();
   832  000230  EC2D  F005         	call	_LevelTmpSetShow	;wreg free
   833  000234                     l2680:
   834                           
   835                           ;WAFR-01-C001-HD-debug-main.c: 219: }
   836                           ;WAFR-01-C001-HD-debug-main.c: 220: }
   837                           ;WAFR-01-C001-HD-debug-main.c: 224: if ( PORTAbits.RA4 )
   838  000234  A880               	btfss	3968,4,c	;volatile
   839  000236  D081               	goto	l2742
   840                           
   841                           ;WAFR-01-C001-HD-debug-main.c: 225: {
   842                           ;WAFR-01-C001-HD-debug-main.c: 226: flagChargeBat = 1;
   843  000238  0E01               	movlw	1
   844  00023A  0100               	movlb	0	; () banked
   845  00023C  6FAC               	movwf	main@flagChargeBat& (0+255),b
   846                           
   847                           ; BSR set to: 0
   848                           ;WAFR-01-C001-HD-debug-main.c: 228: adcValue = GetAdcChargBatValue( 1 );
   849  00023E  0E01               	movlw	1
   850  000240  EC91  F003         	call	_GetAdcChargBatValue
   851  000244  C020  F0B0         	movff	?_GetAdcChargBatValue,main@adcValue
   852  000248  C021  F0B1         	movff	?_GetAdcChargBatValue+1,main@adcValue+1
   853                           
   854                           ;WAFR-01-C001-HD-debug-main.c: 229: if ( adcValue > 800 )
   855  00024C  0100               	movlb	0	; () banked
   856  00024E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   857  000250  D00C               	goto	l2690
   858  000252  0E21               	movlw	33
   859  000254  0100               	movlb	0	; () banked
   860  000256  5DB0               	subwf	main@adcValue& (0+255),w,b
   861  000258  0E03               	movlw	3
   862  00025A  0100               	movlb	0	; () banked
   863  00025C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   864  00025E  A0D8               	btfss	status,0,c
   865  000260  D004               	goto	l2690
   866                           
   867                           ; BSR set to: 0
   868                           ;WAFR-01-C001-HD-debug-main.c: 230: {
   869                           ;WAFR-01-C001-HD-debug-main.c: 232: PORTCbits.RC1 = 1;
   870  000262  8282               	bsf	3970,1,c	;volatile
   871                           
   872                           ;WAFR-01-C001-HD-debug-main.c: 233: PORTCbits.RC4 = 1;
   873  000264  8882               	bsf	3970,4,c	;volatile
   874                           
   875                           ;WAFR-01-C001-HD-debug-main.c: 234: PORTCbits.RC7 = 1;
   876  000266  8E82               	bsf	3970,7,c	;volatile
   877                           
   878                           ;WAFR-01-C001-HD-debug-main.c: 236: }else
   879  000268  D7C5               	goto	l81
   880  00026A                     l2690:
   881                           
   882                           ; BSR set to: 0
   883                           ;WAFR-01-C001-HD-debug-main.c: 237: {
   884                           ;WAFR-01-C001-HD-debug-main.c: 238: adcValue = GetAdcChargBatValue( 1 );
   885  00026A  0E01               	movlw	1
   886  00026C  EC91  F003         	call	_GetAdcChargBatValue
   887  000270  C020  F0B0         	movff	?_GetAdcChargBatValue,main@adcValue
   888  000274  C021  F0B1         	movff	?_GetAdcChargBatValue+1,main@adcValue+1
   889                           
   890                           ;WAFR-01-C001-HD-debug-main.c: 240: turnOffAllLed();
   891  000278  ECFD  F005         	call	_turnOffAllLed	;wreg free
   892                           
   893                           ;WAFR-01-C001-HD-debug-main.c: 241: if ( adcValue > 996)
   894  00027C  0100               	movlb	0	; () banked
   895  00027E  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   896  000280  D01B               	goto	l2712
   897  000282  0EE5               	movlw	229
   898  000284  0100               	movlb	0	; () banked
   899  000286  5DB0               	subwf	main@adcValue& (0+255),w,b
   900  000288  0E03               	movlw	3
   901  00028A  0100               	movlb	0	; () banked
   902  00028C  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   903  00028E  A0D8               	btfss	status,0,c
   904  000290  D013               	goto	l2712
   905                           
   906                           ; BSR set to: 0
   907                           ;WAFR-01-C001-HD-debug-main.c: 242: {
   908                           ;WAFR-01-C001-HD-debug-main.c: 244: PORTCbits.RC0 = 1;
   909  000292  8082               	bsf	3970,0,c	;volatile
   910                           
   911                           ;WAFR-01-C001-HD-debug-main.c: 245: PORTCbits.RC1 = 1;
   912  000294  8282               	bsf	3970,1,c	;volatile
   913                           
   914                           ;WAFR-01-C001-HD-debug-main.c: 246: PORTCbits.RC3 = 1;
   915  000296  8682               	bsf	3970,3,c	;volatile
   916                           
   917                           ;WAFR-01-C001-HD-debug-main.c: 247: PORTCbits.RC4 = 1;
   918  000298  8882               	bsf	3970,4,c	;volatile
   919                           
   920                           ;WAFR-01-C001-HD-debug-main.c: 248: PORTCbits.RC6 = 1;
   921  00029A  8C82               	bsf	3970,6,c	;volatile
   922                           
   923                           ;WAFR-01-C001-HD-debug-main.c: 249: PORTCbits.RC7 = 1;
   924  00029C  8E82               	bsf	3970,7,c	;volatile
   925                           
   926                           ; BSR set to: 0
   927                           ;WAFR-01-C001-HD-debug-main.c: 250: delay_ms(200);
   928  00029E  0E00               	movlw	0
   929  0002A0  6E18               	movwf	delay_ms@x+1,c
   930  0002A2  0EC8               	movlw	200
   931  0002A4  6E17               	movwf	delay_ms@x,c
   932  0002A6  EC73  F005         	call	_delay_ms	;wreg free
   933                           
   934                           ;WAFR-01-C001-HD-debug-main.c: 251: PORTCbits.RC0 = 0;
   935  0002AA  9082               	bcf	3970,0,c	;volatile
   936                           
   937                           ;WAFR-01-C001-HD-debug-main.c: 252: PORTCbits.RC1 = 0;
   938  0002AC  9282               	bcf	3970,1,c	;volatile
   939                           
   940                           ;WAFR-01-C001-HD-debug-main.c: 253: PORTCbits.RC3 = 0;
   941  0002AE  9682               	bcf	3970,3,c	;volatile
   942                           
   943                           ;WAFR-01-C001-HD-debug-main.c: 254: PORTCbits.RC4 = 0;
   944  0002B0  9882               	bcf	3970,4,c	;volatile
   945                           
   946                           ;WAFR-01-C001-HD-debug-main.c: 255: PORTCbits.RC6 = 0;
   947  0002B2  9C82               	bcf	3970,6,c	;volatile
   948                           
   949                           ;WAFR-01-C001-HD-debug-main.c: 256: PORTCbits.RC7 = 0;
   950  0002B4  9E82               	bcf	3970,7,c	;volatile
   951                           
   952                           ;WAFR-01-C001-HD-debug-main.c: 258: }else if ( adcValue > 891 )
   953  0002B6  D79E               	goto	l81
   954  0002B8                     l2712:
   955  0002B8  0100               	movlb	0	; () banked
   956  0002BA  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
   957  0002BC  D017               	goto	l2726
   958  0002BE  0E7C               	movlw	124
   959  0002C0  0100               	movlb	0	; () banked
   960  0002C2  5DB0               	subwf	main@adcValue& (0+255),w,b
   961  0002C4  0E03               	movlw	3
   962  0002C6  0100               	movlb	0	; () banked
   963  0002C8  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
   964  0002CA  A0D8               	btfss	status,0,c
   965  0002CC  D00F               	goto	l2726
   966                           
   967                           ; BSR set to: 0
   968                           ;WAFR-01-C001-HD-debug-main.c: 259: {
   969                           ;WAFR-01-C001-HD-debug-main.c: 260: PORTCbits.RC0 = 1;
   970  0002CE  8082               	bsf	3970,0,c	;volatile
   971                           
   972                           ;WAFR-01-C001-HD-debug-main.c: 261: PORTCbits.RC1 = 1;
   973  0002D0  8282               	bsf	3970,1,c	;volatile
   974                           
   975                           ;WAFR-01-C001-HD-debug-main.c: 262: PORTCbits.RC3 = 1;
   976  0002D2  8682               	bsf	3970,3,c	;volatile
   977                           
   978                           ;WAFR-01-C001-HD-debug-main.c: 263: PORTCbits.RC4 = 1;
   979  0002D4  8882               	bsf	3970,4,c	;volatile
   980                           
   981                           ; BSR set to: 0
   982                           ;WAFR-01-C001-HD-debug-main.c: 264: delay_ms(200);
   983  0002D6  0E00               	movlw	0
   984  0002D8  6E18               	movwf	delay_ms@x+1,c
   985  0002DA  0EC8               	movlw	200
   986  0002DC  6E17               	movwf	delay_ms@x,c
   987  0002DE  EC73  F005         	call	_delay_ms	;wreg free
   988                           
   989                           ;WAFR-01-C001-HD-debug-main.c: 265: PORTCbits.RC0 = 0;
   990  0002E2  9082               	bcf	3970,0,c	;volatile
   991                           
   992                           ;WAFR-01-C001-HD-debug-main.c: 266: PORTCbits.RC1 = 0;
   993  0002E4  9282               	bcf	3970,1,c	;volatile
   994                           
   995                           ;WAFR-01-C001-HD-debug-main.c: 267: PORTCbits.RC3 = 0;
   996  0002E6  9682               	bcf	3970,3,c	;volatile
   997                           
   998                           ;WAFR-01-C001-HD-debug-main.c: 268: PORTCbits.RC4 = 0;
   999  0002E8  9882               	bcf	3970,4,c	;volatile
  1000                           
  1001                           ;WAFR-01-C001-HD-debug-main.c: 269: }else if ( adcValue > 816)
  1002  0002EA  D784               	goto	l81
  1003  0002EC                     l2726:
  1004  0002EC  0100               	movlb	0	; () banked
  1005  0002EE  BFB1               	btfsc	(main@adcValue+1)& (0+255),7,b
  1006  0002F0  D013               	goto	l97
  1007  0002F2  0E31               	movlw	49
  1008  0002F4  0100               	movlb	0	; () banked
  1009  0002F6  5DB0               	subwf	main@adcValue& (0+255),w,b
  1010  0002F8  0E03               	movlw	3
  1011  0002FA  0100               	movlb	0	; () banked
  1012  0002FC  59B1               	subwfb	(main@adcValue+1)& (0+255),w,b
  1013  0002FE  A0D8               	btfss	status,0,c
  1014  000300  D00B               	goto	l97
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;WAFR-01-C001-HD-debug-main.c: 270: {
  1018                           ;WAFR-01-C001-HD-debug-main.c: 271: PORTCbits.RC0 = 1;
  1019  000302  8082               	bsf	3970,0,c	;volatile
  1020                           
  1021                           ;WAFR-01-C001-HD-debug-main.c: 272: PORTCbits.RC1 = 1;
  1022  000304  8282               	bsf	3970,1,c	;volatile
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;WAFR-01-C001-HD-debug-main.c: 273: delay_ms(200);
  1026  000306  0E00               	movlw	0
  1027  000308  6E18               	movwf	delay_ms@x+1,c
  1028  00030A  0EC8               	movlw	200
  1029  00030C  6E17               	movwf	delay_ms@x,c
  1030  00030E  EC73  F005         	call	_delay_ms	;wreg free
  1031                           
  1032                           ;WAFR-01-C001-HD-debug-main.c: 274: PORTCbits.RC0 = 0;
  1033  000312  9082               	bcf	3970,0,c	;volatile
  1034                           
  1035                           ;WAFR-01-C001-HD-debug-main.c: 275: PORTCbits.RC1 = 0;
  1036  000314  9282               	bcf	3970,1,c	;volatile
  1037                           
  1038                           ;WAFR-01-C001-HD-debug-main.c: 276: } else
  1039  000316  D76E               	goto	l81
  1040  000318                     l97:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;WAFR-01-C001-HD-debug-main.c: 277: {
  1044                           ;WAFR-01-C001-HD-debug-main.c: 278: PORTCbits.RC0 = 1;
  1045  000318  8082               	bsf	3970,0,c	;volatile
  1046                           
  1047                           ;WAFR-01-C001-HD-debug-main.c: 279: PORTCbits.RC1 = 1;
  1048  00031A  8282               	bsf	3970,1,c	;volatile
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;WAFR-01-C001-HD-debug-main.c: 280: delay_ms(100);
  1052  00031C  0E00               	movlw	0
  1053  00031E  6E18               	movwf	delay_ms@x+1,c
  1054  000320  0E64               	movlw	100
  1055  000322  6E17               	movwf	delay_ms@x,c
  1056  000324  EC73  F005         	call	_delay_ms	;wreg free
  1057                           
  1058                           ;WAFR-01-C001-HD-debug-main.c: 281: PORTCbits.RC0 = 0;
  1059  000328  9082               	bcf	3970,0,c	;volatile
  1060                           
  1061                           ;WAFR-01-C001-HD-debug-main.c: 282: PORTCbits.RC1 = 0;
  1062  00032A  9282               	bcf	3970,1,c	;volatile
  1063                           
  1064                           ;WAFR-01-C001-HD-debug-main.c: 283: delay_ms(100);
  1065  00032C  0E00               	movlw	0
  1066  00032E  6E18               	movwf	delay_ms@x+1,c
  1067  000330  0E64               	movlw	100
  1068  000332  6E17               	movwf	delay_ms@x,c
  1069  000334  EC73  F005         	call	_delay_ms	;wreg free
  1070                           
  1071                           ;WAFR-01-C001-HD-debug-main.c: 284: }
  1072                           ;WAFR-01-C001-HD-debug-main.c: 285: }
  1073                           ;WAFR-01-C001-HD-debug-main.c: 288: } else
  1074  000338  D75D               	goto	l81
  1075  00033A                     l2742:
  1076                           
  1077                           ;WAFR-01-C001-HD-debug-main.c: 289: {
  1078                           ;WAFR-01-C001-HD-debug-main.c: 290: flagChargeBat = 0 ;
  1079  00033A  0E00               	movlw	0
  1080  00033C  0100               	movlb	0	; () banked
  1081  00033E  6FAC               	movwf	main@flagChargeBat& (0+255),b
  1082                           
  1083                           ; BSR set to: 0
  1084                           
  1085                           ; BSR set to: 0
  1086  000340  D759               	goto	l81
  1087  000342                     __end_of_main:
  1088                           	opt stack 0
  1089                           tblptru	equ	0xFF8
  1090                           postinc0	equ	0xFEE
  1091                           wreg	equ	0xFE8
  1092                           postinc2	equ	0xFDE
  1093                           postdec2	equ	0xFDD
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           status	equ	0xFD8
  1097                           
  1098 ;; *************** function _ShutDownSystem *****************
  1099 ;; Defined at:
  1100 ;;		line 334 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;		None               void
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1114 ;;      Params:         0       0       0       0
  1115 ;;      Locals:         0       0       0       0
  1116 ;;      Temps:          1       0       0       0
  1117 ;;      Totals:         1       0       0       0
  1118 ;;Total ram usage:        1 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    2
  1121 ;; This function calls:
  1122 ;;		_delay_ms
  1123 ;;		_turnOffAllLed
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text1
  1130  000A14                     __ptext1:
  1131                           	opt stack 0
  1132  000A14                     _ShutDownSystem:
  1133                           	opt stack 28
  1134                           
  1135                           ;system.c: 337: turnOffAllLed();
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;incstack = 0
  1139  000A14  ECFD  F005         	call	_turnOffAllLed	;wreg free
  1140  000A18                     l2556:
  1141                           
  1142                           ;system.c: 339: {
  1143                           ;system.c: 340: PORTBbits.RB2 = 0 ;
  1144  000A18  9481               	bcf	3969,2,c	;volatile
  1145                           
  1146                           ;system.c: 341: PORTCbits.RC2 = ! PORTCbits.RC2 ;
  1147  000A1A  B482               	btfsc	3970,2,c	;volatile
  1148  000A1C  D003               	goto	u2000
  1149  000A1E  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1150  000A20  2A1D               	incf	??_ShutDownSystem& (0+255),f,c
  1151  000A22  D001               	goto	u2018
  1152  000A24                     u2000:
  1153  000A24  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1154  000A26                     u2018:
  1155  000A26  461D               	rlncf	??_ShutDownSystem,f,c
  1156  000A28  461D               	rlncf	??_ShutDownSystem,f,c
  1157  000A2A  5082               	movf	3970,w,c	;volatile
  1158  000A2C  181D               	xorwf	??_ShutDownSystem,w,c
  1159  000A2E  0BFB               	andlw	-5
  1160  000A30  181D               	xorwf	??_ShutDownSystem,w,c
  1161  000A32  6E82               	movwf	3970,c	;volatile
  1162                           
  1163                           ;system.c: 343: PORTCbits.RC1 = ! PORTCbits.RC1 ;
  1164  000A34  B282               	btfsc	3970,1,c	;volatile
  1165  000A36  D003               	goto	u2020
  1166  000A38  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1167  000A3A  2A1D               	incf	??_ShutDownSystem& (0+255),f,c
  1168  000A3C  D001               	goto	u2038
  1169  000A3E                     u2020:
  1170  000A3E  6A1D               	clrf	??_ShutDownSystem& (0+255),c
  1171  000A40                     u2038:
  1172  000A40  461D               	rlncf	??_ShutDownSystem,f,c
  1173  000A42  5082               	movf	3970,w,c	;volatile
  1174  000A44  181D               	xorwf	??_ShutDownSystem,w,c
  1175  000A46  0BFD               	andlw	-3
  1176  000A48  181D               	xorwf	??_ShutDownSystem,w,c
  1177  000A4A  6E82               	movwf	3970,c	;volatile
  1178                           
  1179                           ;system.c: 344: delay_ms(80);
  1180  000A4C  0E00               	movlw	0
  1181  000A4E  6E18               	movwf	delay_ms@x+1,c
  1182  000A50  0E50               	movlw	80
  1183  000A52  6E17               	movwf	delay_ms@x,c
  1184  000A54  EC73  F005         	call	_delay_ms	;wreg free
  1185  000A58  D7DF               	goto	l2556
  1186  000A5A                     __end_of_ShutDownSystem:
  1187                           	opt stack 0
  1188                           tblptru	equ	0xFF8
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           postinc2	equ	0xFDE
  1192                           postdec2	equ	0xFDD
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           status	equ	0xFD8
  1196                           
  1197 ;; *************** function _delay_ms *****************
  1198 ;; Defined at:
  1199 ;;		line 27 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  x               2   22[COMRAM] unsigned int 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  i               2   26[COMRAM] unsigned int 
  1204 ;;  j               2   24[COMRAM] unsigned int 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;		None               void
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1214 ;;      Params:         2       0       0       0
  1215 ;;      Locals:         4       0       0       0
  1216 ;;      Temps:          0       0       0       0
  1217 ;;      Totals:         6       0       0       0
  1218 ;;Total ram usage:        6 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;;		_ShutDownSystem
  1226 ;;		_delay_s
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text2
  1231  000AE6                     __ptext2:
  1232                           	opt stack 0
  1233  000AE6                     _delay_ms:
  1234                           	opt stack 29
  1235                           
  1236                           ;user.c: 29: unsigned int i,j;
  1237                           ;user.c: 31: for ( j=0 ; j<x ;j++ )
  1238                           
  1239                           ;incstack = 0
  1240  000AE6  0E00               	movlw	0
  1241  000AE8  6E1A               	movwf	delay_ms@j+1,c
  1242  000AEA  0E00               	movlw	0
  1243  000AEC  6E19               	movwf	delay_ms@j,c
  1244  000AEE  D00F               	goto	l2274
  1245  000AF0                     l2262:
  1246                           
  1247                           ;user.c: 32: {
  1248                           ;user.c: 33: for ( i=0; i<400; i++ );
  1249  000AF0  0E00               	movlw	0
  1250  000AF2  6E1C               	movwf	delay_ms@i+1,c
  1251  000AF4  0E00               	movlw	0
  1252  000AF6  6E1B               	movwf	delay_ms@i,c
  1253  000AF8                     l2264:
  1254  000AF8  0E90               	movlw	144
  1255  000AFA  5C1B               	subwf	delay_ms@i,w,c
  1256  000AFC  0E01               	movlw	1
  1257  000AFE  581C               	subwfb	delay_ms@i+1,w,c
  1258  000B00  B0D8               	btfsc	status,0,c
  1259  000B02  D003               	goto	l2272
  1260  000B04  4A1B               	infsnz	delay_ms@i,f,c
  1261  000B06  2A1C               	incf	delay_ms@i+1,f,c
  1262  000B08  D7F7               	goto	l2264
  1263  000B0A                     l2272:
  1264  000B0A  4A19               	infsnz	delay_ms@j,f,c
  1265  000B0C  2A1A               	incf	delay_ms@j+1,f,c
  1266  000B0E                     l2274:
  1267  000B0E  5017               	movf	delay_ms@x,w,c
  1268  000B10  5C19               	subwf	delay_ms@j,w,c
  1269  000B12  5018               	movf	delay_ms@x+1,w,c
  1270  000B14  581A               	subwfb	delay_ms@j+1,w,c
  1271  000B16  B0D8               	btfsc	status,0,c
  1272  000B18  0012               	return	
  1273  000B1A  D7EA               	goto	l2262
  1274  000B1C                     __end_of_delay_ms:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           postinc0	equ	0xFEE
  1278                           wreg	equ	0xFE8
  1279                           postinc2	equ	0xFDE
  1280                           postdec2	equ	0xFDD
  1281                           fsr2h	equ	0xFDA
  1282                           fsr2l	equ	0xFD9
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _ProcessHeat *****************
  1286 ;; Defined at:
  1287 ;;		line 355 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  countHeatTim    4   44[COMRAM] unsigned long 
  1292 ;;  adcValue        2   48[COMRAM] unsigned short 
  1293 ;;  flagStop        1   43[COMRAM] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;		None               void
  1296 ;; Registers used:
  1297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1303 ;;      Params:         0       0       0       0
  1304 ;;      Locals:         7       0       0       0
  1305 ;;      Temps:          4       0       0       0
  1306 ;;      Totals:        11       0       0       0
  1307 ;;Total ram usage:       11 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    4
  1310 ;; This function calls:
  1311 ;;		_GetAdcAD597Value
  1312 ;;		_HeatProcessLedShow
  1313 ;;		_ReadEEprom
  1314 ;;		_WriteEEprom
  1315 ;;		_turnOffAllLed
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text3
  1322  000342                     __ptext3:
  1323                           	opt stack 0
  1324  000342                     _ProcessHeat:
  1325                           	opt stack 26
  1326                           
  1327                           ;system.c: 357: uint16 adcValue;
  1328                           ;system.c: 358: uint8 flagStop=0 ;
  1329                           
  1330                           ;incstack = 0
  1331  000342  0E00               	movlw	0
  1332  000344  6E2C               	movwf	ProcessHeat@flagStop,c
  1333                           
  1334                           ;system.c: 359: uint32 countHeatTime = 0 ;
  1335  000346  0E00               	movlw	0
  1336  000348  6E2D               	movwf	ProcessHeat@countHeatTime,c
  1337  00034A  0E00               	movlw	0
  1338  00034C  6E2E               	movwf	ProcessHeat@countHeatTime+1,c
  1339  00034E  0E00               	movlw	0
  1340  000350  6E2F               	movwf	ProcessHeat@countHeatTime+2,c
  1341  000352  0E00               	movlw	0
  1342  000354  6E30               	movwf	ProcessHeat@countHeatTime+3,c
  1343                           
  1344                           ;system.c: 363: WriteEEprom ( 0, levelTmpSetting );
  1345  000356  C062  F017         	movff	_levelTmpSetting,WriteEEprom@data
  1346  00035A  0E00               	movlw	0
  1347  00035C  EC8E  F005         	call	_WriteEEprom
  1348                           
  1349                           ;system.c: 367: levelTmpSetting = ReadEEprom( 0 );
  1350  000360  0E00               	movlw	0
  1351  000362  ECF2  F005         	call	_ReadEEprom
  1352  000366  6E62               	movwf	_levelTmpSetting,c
  1353                           
  1354                           ;system.c: 369: PORTBbits.RB1 = 1 ;
  1355  000368  8281               	bsf	3969,1,c	;volatile
  1356                           
  1357                           ;system.c: 371: turnOffAllLed();
  1358  00036A  ECFD  F005         	call	_turnOffAllLed	;wreg free
  1359                           
  1360                           ;system.c: 372: countHeatTime = timeSystemRun ;
  1361  00036E  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1362  000372  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1363  000376  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1364  00037A  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1365  00037E                     l2484:
  1366                           
  1367                           ;system.c: 374: {
  1368                           ;system.c: 376: if ( (countHeatTime + 1500 ) < timeSystemRun )
  1369  00037E  0EDC               	movlw	220
  1370  000380  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1371  000382  6E28               	movwf	??_ProcessHeat& (0+255),c
  1372  000384  0E05               	movlw	5
  1373  000386  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1374  000388  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1375  00038A  0E00               	movlw	0
  1376  00038C  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1377  00038E  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1378  000390  0E00               	movlw	0
  1379  000392  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1380  000394  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1381  000396  5059               	movf	_timeSystemRun,w,c
  1382  000398  5C28               	subwf	??_ProcessHeat,w,c
  1383  00039A  505A               	movf	_timeSystemRun+1,w,c
  1384  00039C  5829               	subwfb	??_ProcessHeat+1,w,c
  1385  00039E  505B               	movf	_timeSystemRun+2,w,c
  1386  0003A0  582A               	subwfb	??_ProcessHeat+2,w,c
  1387  0003A2  505C               	movf	_timeSystemRun+3,w,c
  1388  0003A4  582B               	subwfb	??_ProcessHeat+3,w,c
  1389  0003A6  B0D8               	btfsc	status,0,c
  1390  0003A8  D003               	goto	l2488
  1391                           
  1392                           ;system.c: 377: {
  1393                           ;system.c: 378: flagStop = 1 ;
  1394  0003AA  0E01               	movlw	1
  1395  0003AC  6E2C               	movwf	ProcessHeat@flagStop,c
  1396                           
  1397                           ;system.c: 379: break;
  1398  0003AE  D0C5               	goto	l249
  1399  0003B0                     l2488:
  1400                           
  1401                           ;system.c: 380: }
  1402                           ;system.c: 382: HeatProcessLedShow();
  1403  0003B0  EC96  F004         	call	_HeatProcessLedShow	;wreg free
  1404                           
  1405                           ;system.c: 384: adcValue = GetAdcAD597Value( 0 );
  1406  0003B4  0E00               	movlw	0
  1407  0003B6  EC43  F004         	call	_GetAdcAD597Value
  1408  0003BA  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1409  0003BE  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1410                           
  1411                           ;system.c: 386: switch ( levelTmpSetting )
  1412  0003C2  D0AE               	goto	l2548
  1413  0003C4                     l2492:
  1414                           
  1415                           ;system.c: 389: if ( adcValue > 180 )
  1416  0003C4  5032               	movf	ProcessHeat@adcValue+1,w,c
  1417  0003C6  E104               	bnz	u1900
  1418  0003C8  0EB5               	movlw	181
  1419  0003CA  5C31               	subwf	ProcessHeat@adcValue,w,c
  1420  0003CC  A0D8               	btfss	status,0,c
  1421  0003CE  D0B2               	goto	l2550
  1422  0003D0                     u1900:
  1423                           
  1424                           ;system.c: 390: {
  1425                           ;system.c: 391: flagStop = 1 ;
  1426  0003D0  0E01               	movlw	1
  1427  0003D2  6E2C               	movwf	ProcessHeat@flagStop,c
  1428                           
  1429                           ;system.c: 392: PORTCbits.RC2 = 1 ;
  1430  0003D4  8482               	bsf	3970,2,c	;volatile
  1431                           
  1432                           ;system.c: 394: countHeatTime = timeSystemRun ;
  1433  0003D6  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1434  0003DA  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1435  0003DE  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1436  0003E2  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1437                           
  1438                           ;system.c: 395: while ( (countHeatTime + 1000) > timeSystemRun )
  1439  0003E6  D010               	goto	l2506
  1440  0003E8                     l2500:
  1441                           
  1442                           ;system.c: 396: {
  1443                           ;system.c: 397: adcValue = GetAdcAD597Value( 0 );
  1444  0003E8  0E00               	movlw	0
  1445  0003EA  EC43  F004         	call	_GetAdcAD597Value
  1446  0003EE  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1447  0003F2  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1448                           
  1449                           ;system.c: 398: if ( adcValue > 180)
  1450  0003F6  5032               	movf	ProcessHeat@adcValue+1,w,c
  1451  0003F8  E104               	bnz	u1910
  1452  0003FA  0EB5               	movlw	181
  1453  0003FC  5C31               	subwf	ProcessHeat@adcValue,w,c
  1454  0003FE  A0D8               	btfss	status,0,c
  1455  000400  D002               	goto	l255
  1456  000402                     u1910:
  1457                           
  1458                           ;system.c: 399: {
  1459                           ;system.c: 400: PORTBbits.RB1 = 0 ;
  1460  000402  9281               	bcf	3969,1,c	;volatile
  1461                           
  1462                           ;system.c: 401: }else
  1463  000404  D001               	goto	l2506
  1464  000406                     l255:
  1465                           
  1466                           ;system.c: 402: {
  1467                           ;system.c: 403: PORTBbits.RB1 = 1 ;
  1468  000406  8281               	bsf	3969,1,c	;volatile
  1469  000408                     l2506:
  1470  000408  0EE8               	movlw	232
  1471  00040A  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1472  00040C  6E28               	movwf	??_ProcessHeat& (0+255),c
  1473  00040E  0E03               	movlw	3
  1474  000410  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1475  000412  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1476  000414  0E00               	movlw	0
  1477  000416  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1478  000418  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1479  00041A  0E00               	movlw	0
  1480  00041C  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1481  00041E  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1482  000420  5028               	movf	??_ProcessHeat,w,c
  1483  000422  5C59               	subwf	_timeSystemRun,w,c
  1484  000424  5029               	movf	??_ProcessHeat+1,w,c
  1485  000426  585A               	subwfb	_timeSystemRun+1,w,c
  1486  000428  502A               	movf	??_ProcessHeat+2,w,c
  1487  00042A  585B               	subwfb	_timeSystemRun+2,w,c
  1488  00042C  502B               	movf	??_ProcessHeat+3,w,c
  1489  00042E  585C               	subwfb	_timeSystemRun+3,w,c
  1490  000430  B0D8               	btfsc	status,0,c
  1491  000432  D080               	goto	l2550
  1492  000434  D7D9               	goto	l2500
  1493  000436                     l2508:
  1494                           
  1495                           ;system.c: 409: if ( adcValue > 200 )
  1496  000436  5032               	movf	ProcessHeat@adcValue+1,w,c
  1497  000438  E104               	bnz	u1930
  1498  00043A  0EC9               	movlw	201
  1499  00043C  5C31               	subwf	ProcessHeat@adcValue,w,c
  1500  00043E  A0D8               	btfss	status,0,c
  1501  000440  D079               	goto	l2550
  1502  000442                     u1930:
  1503                           
  1504                           ;system.c: 410: {
  1505                           ;system.c: 411: flagStop = 1 ;
  1506  000442  0E01               	movlw	1
  1507  000444  6E2C               	movwf	ProcessHeat@flagStop,c
  1508                           
  1509                           ;system.c: 412: PORTCbits.RC1 = 1 ;
  1510  000446  8282               	bsf	3970,1,c	;volatile
  1511                           
  1512                           ;system.c: 413: PORTCbits.RC4 = 1 ;
  1513  000448  8882               	bsf	3970,4,c	;volatile
  1514                           
  1515                           ;system.c: 415: countHeatTime = timeSystemRun ;
  1516  00044A  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1517  00044E  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1518  000452  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1519  000456  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1520                           
  1521                           ;system.c: 416: while ( (countHeatTime + 1000) > timeSystemRun )
  1522  00045A  D010               	goto	l2524
  1523  00045C                     l2518:
  1524                           
  1525                           ;system.c: 417: {
  1526                           ;system.c: 418: adcValue = GetAdcAD597Value( 0 );
  1527  00045C  0E00               	movlw	0
  1528  00045E  EC43  F004         	call	_GetAdcAD597Value
  1529  000462  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1530  000466  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1531                           
  1532                           ;system.c: 419: if ( adcValue > 200)
  1533  00046A  5032               	movf	ProcessHeat@adcValue+1,w,c
  1534  00046C  E104               	bnz	u1940
  1535  00046E  0EC9               	movlw	201
  1536  000470  5C31               	subwf	ProcessHeat@adcValue,w,c
  1537  000472  A0D8               	btfss	status,0,c
  1538  000474  D002               	goto	l263
  1539  000476                     u1940:
  1540                           
  1541                           ;system.c: 420: {
  1542                           ;system.c: 421: PORTBbits.RB1 = 0 ;
  1543  000476  9281               	bcf	3969,1,c	;volatile
  1544                           
  1545                           ;system.c: 422: }else
  1546  000478  D001               	goto	l2524
  1547  00047A                     l263:
  1548                           
  1549                           ;system.c: 423: {
  1550                           ;system.c: 424: PORTBbits.RB1 = 1 ;
  1551  00047A  8281               	bsf	3969,1,c	;volatile
  1552  00047C                     l2524:
  1553  00047C  0EE8               	movlw	232
  1554  00047E  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1555  000480  6E28               	movwf	??_ProcessHeat& (0+255),c
  1556  000482  0E03               	movlw	3
  1557  000484  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1558  000486  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1559  000488  0E00               	movlw	0
  1560  00048A  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1561  00048C  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1562  00048E  0E00               	movlw	0
  1563  000490  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1564  000492  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1565  000494  5028               	movf	??_ProcessHeat,w,c
  1566  000496  5C59               	subwf	_timeSystemRun,w,c
  1567  000498  5029               	movf	??_ProcessHeat+1,w,c
  1568  00049A  585A               	subwfb	_timeSystemRun+1,w,c
  1569  00049C  502A               	movf	??_ProcessHeat+2,w,c
  1570  00049E  585B               	subwfb	_timeSystemRun+2,w,c
  1571  0004A0  502B               	movf	??_ProcessHeat+3,w,c
  1572  0004A2  585C               	subwfb	_timeSystemRun+3,w,c
  1573  0004A4  B0D8               	btfsc	status,0,c
  1574  0004A6  D046               	goto	l2550
  1575  0004A8  D7D9               	goto	l2518
  1576  0004AA                     l2526:
  1577                           
  1578                           ;system.c: 430: if ( adcValue > 220 )
  1579  0004AA  5032               	movf	ProcessHeat@adcValue+1,w,c
  1580  0004AC  E104               	bnz	u1960
  1581  0004AE  0EDD               	movlw	221
  1582  0004B0  5C31               	subwf	ProcessHeat@adcValue,w,c
  1583  0004B2  A0D8               	btfss	status,0,c
  1584  0004B4  D03F               	goto	l2550
  1585  0004B6                     u1960:
  1586                           
  1587                           ;system.c: 431: {
  1588                           ;system.c: 432: flagStop = 1 ;
  1589  0004B6  0E01               	movlw	1
  1590  0004B8  6E2C               	movwf	ProcessHeat@flagStop,c
  1591                           
  1592                           ;system.c: 433: PORTCbits.RC0 = 1 ;
  1593  0004BA  8082               	bsf	3970,0,c	;volatile
  1594                           
  1595                           ;system.c: 434: PORTCbits.RC3 = 1 ;
  1596  0004BC  8682               	bsf	3970,3,c	;volatile
  1597                           
  1598                           ;system.c: 435: PORTCbits.RC6 = 1 ;
  1599  0004BE  8C82               	bsf	3970,6,c	;volatile
  1600                           
  1601                           ;system.c: 437: countHeatTime = timeSystemRun ;
  1602  0004C0  C059  F02D         	movff	_timeSystemRun,ProcessHeat@countHeatTime
  1603  0004C4  C05A  F02E         	movff	_timeSystemRun+1,ProcessHeat@countHeatTime+1
  1604  0004C8  C05B  F02F         	movff	_timeSystemRun+2,ProcessHeat@countHeatTime+2
  1605  0004CC  C05C  F030         	movff	_timeSystemRun+3,ProcessHeat@countHeatTime+3
  1606                           
  1607                           ;system.c: 438: while ( (countHeatTime + 1000) > timeSystemRun )
  1608  0004D0  D010               	goto	l2544
  1609  0004D2                     l2538:
  1610                           
  1611                           ;system.c: 439: {
  1612                           ;system.c: 440: adcValue = GetAdcAD597Value( 0 );
  1613  0004D2  0E00               	movlw	0
  1614  0004D4  EC43  F004         	call	_GetAdcAD597Value
  1615  0004D8  C020  F031         	movff	?_GetAdcAD597Value,ProcessHeat@adcValue
  1616  0004DC  C021  F032         	movff	?_GetAdcAD597Value+1,ProcessHeat@adcValue+1
  1617                           
  1618                           ;system.c: 441: if ( adcValue > 220)
  1619  0004E0  5032               	movf	ProcessHeat@adcValue+1,w,c
  1620  0004E2  E104               	bnz	u1970
  1621  0004E4  0EDD               	movlw	221
  1622  0004E6  5C31               	subwf	ProcessHeat@adcValue,w,c
  1623  0004E8  A0D8               	btfss	status,0,c
  1624  0004EA  D002               	goto	l270
  1625  0004EC                     u1970:
  1626                           
  1627                           ;system.c: 442: {
  1628                           ;system.c: 443: PORTBbits.RB1 = 0 ;
  1629  0004EC  9281               	bcf	3969,1,c	;volatile
  1630                           
  1631                           ;system.c: 444: }else
  1632  0004EE  D001               	goto	l2544
  1633  0004F0                     l270:
  1634                           
  1635                           ;system.c: 445: {
  1636                           ;system.c: 446: PORTBbits.RB1 = 1 ;
  1637  0004F0  8281               	bsf	3969,1,c	;volatile
  1638  0004F2                     l2544:
  1639  0004F2  0EE8               	movlw	232
  1640  0004F4  242D               	addwf	ProcessHeat@countHeatTime,w,c
  1641  0004F6  6E28               	movwf	??_ProcessHeat& (0+255),c
  1642  0004F8  0E03               	movlw	3
  1643  0004FA  202E               	addwfc	ProcessHeat@countHeatTime+1,w,c
  1644  0004FC  6E29               	movwf	(??_ProcessHeat+1)& (0+255),c
  1645  0004FE  0E00               	movlw	0
  1646  000500  202F               	addwfc	ProcessHeat@countHeatTime+2,w,c
  1647  000502  6E2A               	movwf	(??_ProcessHeat+2)& (0+255),c
  1648  000504  0E00               	movlw	0
  1649  000506  2030               	addwfc	ProcessHeat@countHeatTime+3,w,c
  1650  000508  6E2B               	movwf	(??_ProcessHeat+3)& (0+255),c
  1651  00050A  5028               	movf	??_ProcessHeat,w,c
  1652  00050C  5C59               	subwf	_timeSystemRun,w,c
  1653  00050E  5029               	movf	??_ProcessHeat+1,w,c
  1654  000510  585A               	subwfb	_timeSystemRun+1,w,c
  1655  000512  502A               	movf	??_ProcessHeat+2,w,c
  1656  000514  585B               	subwfb	_timeSystemRun+2,w,c
  1657  000516  502B               	movf	??_ProcessHeat+3,w,c
  1658  000518  585C               	subwfb	_timeSystemRun+3,w,c
  1659  00051A  B0D8               	btfsc	status,0,c
  1660  00051C  D00B               	goto	l2550
  1661  00051E  D7D9               	goto	l2538
  1662  000520                     l2548:
  1663  000520  5062               	movf	_levelTmpSetting,w,c
  1664                           
  1665                           ; Switch size 1, requested type "space"
  1666                           ; Number of cases is 3, Range of values is 1 to 3
  1667                           ; switch strategies available:
  1668                           ; Name         Instructions Cycles
  1669                           ; simple_byte           10     6 (average)
  1670                           ;	Chosen strategy is simple_byte
  1671  000522  0A01               	xorlw	1	; case 1
  1672  000524  B4D8               	btfsc	status,2,c
  1673  000526  D74E               	goto	l2492
  1674  000528  0A03               	xorlw	3	; case 2
  1675  00052A  B4D8               	btfsc	status,2,c
  1676  00052C  D784               	goto	l2508
  1677  00052E  0A01               	xorlw	1	; case 3
  1678  000530  B4D8               	btfsc	status,2,c
  1679  000532  D7BB               	goto	l2526
  1680  000534                     l2550:
  1681                           
  1682                           ;system.c: 455: if ( flagStop )
  1683  000534  502C               	movf	ProcessHeat@flagStop,w,c
  1684  000536  B4D8               	btfsc	status,2,c
  1685  000538  D722               	goto	l2484
  1686  00053A                     l249:
  1687                           
  1688                           ;system.c: 458: }
  1689                           ;system.c: 459: }
  1690                           ;system.c: 461: PORTBbits.RB1 = 0 ;
  1691  00053A  9281               	bcf	3969,1,c	;volatile
  1692  00053C  0012               	return		;funcret
  1693  00053E                     __end_of_ProcessHeat:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           postinc0	equ	0xFEE
  1697                           wreg	equ	0xFE8
  1698                           postinc2	equ	0xFDE
  1699                           postdec2	equ	0xFDD
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _WriteEEprom *****************
  1705 ;; Defined at:
  1706 ;;		line 47 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  addr            1    wreg     unsigned char 
  1709 ;;  data            1   22[COMRAM] unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  addr            1   23[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;		None               void
  1714 ;; Registers used:
  1715 ;;		wreg, status,2
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1721 ;;      Params:         1       0       0       0
  1722 ;;      Locals:         1       0       0       0
  1723 ;;      Temps:          0       0       0       0
  1724 ;;      Totals:         2       0       0       0
  1725 ;;Total ram usage:        2 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    1
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_ProcessHeat
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text4
  1736  000B1C                     __ptext4:
  1737                           	opt stack 0
  1738  000B1C                     _WriteEEprom:
  1739                           	opt stack 28
  1740                           
  1741                           ;incstack = 0
  1742                           ;WriteEEprom@addr stored from wreg
  1743  000B1C  6E18               	movwf	WriteEEprom@addr,c
  1744  000B1E                     l362:
  1745                           
  1746                           ;EEprom.c: 50: while( EECON1bits.WR ) ;
  1747  000B1E  B2A6               	btfsc	4006,1,c	;volatile
  1748  000B20  D7FE               	goto	l362
  1749                           
  1750                           ;EEprom.c: 52: EEADR = addr ;
  1751  000B22  C018  FFA9         	movff	WriteEEprom@addr,4009	;volatile
  1752                           
  1753                           ;EEprom.c: 53: EEDATA = data ;
  1754  000B26  C017  FFA8         	movff	WriteEEprom@data,4008	;volatile
  1755                           
  1756                           ;EEprom.c: 54: EECON1bits.EEPGD = 0 ;
  1757  000B2A  9EA6               	bcf	4006,7,c	;volatile
  1758                           
  1759                           ;EEprom.c: 56: EECON1bits.WREN = 1 ;
  1760  000B2C  84A6               	bsf	4006,2,c	;volatile
  1761                           
  1762                           ;EEprom.c: 59: INTCONbits.GIE = 0 ;
  1763  000B2E  9EF2               	bcf	intcon,7,c	;volatile
  1764                           
  1765                           ;EEprom.c: 60: EECON2 = 0X55;
  1766  000B30  0E55               	movlw	85
  1767  000B32  6EA7               	movwf	4007,c	;volatile
  1768                           
  1769                           ;EEprom.c: 61: EECON2 = 0XAA;
  1770  000B34  0EAA               	movlw	170
  1771  000B36  6EA7               	movwf	4007,c	;volatile
  1772                           
  1773                           ;EEprom.c: 62: EECON1bits.WR = 1 ;
  1774  000B38  82A6               	bsf	4006,1,c	;volatile
  1775                           
  1776                           ;EEprom.c: 63: INTCONbits.GIE = 1 ;
  1777  000B3A  8EF2               	bsf	intcon,7,c	;volatile
  1778  000B3C                     l2308:
  1779                           
  1780                           ;EEprom.c: 66: while( EECON1bits.WR) ;
  1781  000B3C  B2A6               	btfsc	4006,1,c	;volatile
  1782  000B3E  D7FE               	goto	l2308
  1783                           
  1784                           ;EEprom.c: 67: EECON1bits.WREN = 0 ;
  1785  000B40  94A6               	bcf	4006,2,c	;volatile
  1786  000B42  0012               	return		;funcret
  1787  000B44                     __end_of_WriteEEprom:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           intcon	equ	0xFF2
  1791                           postinc0	equ	0xFEE
  1792                           wreg	equ	0xFE8
  1793                           postinc2	equ	0xFDE
  1794                           postdec2	equ	0xFDD
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _ReadEEprom *****************
  1800 ;; Defined at:
  1801 ;;		line 79 in file "WAFR-01-C001 HD-debug.X/EEprom/EEprom.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  addr            1    wreg     unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  addr            1   22[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      unsigned char 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1815 ;;      Params:         0       0       0       0
  1816 ;;      Locals:         1       0       0       0
  1817 ;;      Temps:          0       0       0       0
  1818 ;;      Totals:         1       0       0       0
  1819 ;;Total ram usage:        1 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;;		_ProcessHeat
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text5
  1831  000BE4                     __ptext5:
  1832                           	opt stack 0
  1833  000BE4                     _ReadEEprom:
  1834                           	opt stack 29
  1835                           
  1836                           ;incstack = 0
  1837                           ;ReadEEprom@addr stored from wreg
  1838  000BE4  6E17               	movwf	ReadEEprom@addr,c
  1839  000BE6                     l369:
  1840                           
  1841                           ;EEprom.c: 82: while( EECON1bits.RD ) ;
  1842  000BE6  B0A6               	btfsc	4006,0,c	;volatile
  1843  000BE8  D7FE               	goto	l369
  1844                           
  1845                           ;EEprom.c: 84: EEADR = addr ;
  1846  000BEA  C017  FFA9         	movff	ReadEEprom@addr,4009	;volatile
  1847                           
  1848                           ;EEprom.c: 85: EECON1bits.EEPGD = 0 ;
  1849  000BEE  9EA6               	bcf	4006,7,c	;volatile
  1850                           
  1851                           ;EEprom.c: 87: EECON1bits.RD = 1 ;
  1852  000BF0  80A6               	bsf	4006,0,c	;volatile
  1853  000BF2                     l2282:
  1854                           
  1855                           ;EEprom.c: 89: while ( EECON1bits.RD ) ;
  1856  000BF2  B0A6               	btfsc	4006,0,c	;volatile
  1857  000BF4  D7FE               	goto	l2282
  1858                           
  1859                           ;EEprom.c: 91: return( EEDATA );
  1860  000BF6  50A8               	movf	4008,w,c	;volatile
  1861  000BF8  0012               	return		;funcret
  1862  000BFA                     __end_of_ReadEEprom:
  1863                           	opt stack 0
  1864                           tblptru	equ	0xFF8
  1865                           intcon	equ	0xFF2
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           postinc2	equ	0xFDE
  1869                           postdec2	equ	0xFDD
  1870                           fsr2h	equ	0xFDA
  1871                           fsr2l	equ	0xFD9
  1872                           status	equ	0xFD8
  1873                           
  1874 ;; *************** function _HeatProcessLedShow *****************
  1875 ;; Defined at:
  1876 ;;		line 92 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;		None               void
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1890 ;;      Params:         0       0       0       0
  1891 ;;      Locals:         0       0       0       0
  1892 ;;      Temps:          0       0       0       0
  1893 ;;      Totals:         0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_ProcessHeat
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text6
  1905  00092C                     __ptext6:
  1906                           	opt stack 0
  1907  00092C                     _HeatProcessLedShow:
  1908                           	opt stack 28
  1909                           
  1910                           ;RGBLedDisplay.c: 96: {
  1911                           ;RGBLedDisplay.c: 97: switch ( levelTmpSetting )
  1912                           
  1913                           ;incstack = 0
  1914                           ;RGBLedDisplay.c: 95: while(1)
  1915  00092C  D03F               	goto	l2342
  1916  00092E                     l2310:
  1917                           
  1918                           ;RGBLedDisplay.c: 100: if ( timerHalfSecond < 1)
  1919  00092E  505D               	movf	_timerHalfSecond,w,c
  1920  000930  105E               	iorwf	_timerHalfSecond+1,w,c
  1921  000932  A4D8               	btfss	status,2,c
  1922  000934  D002               	goto	l2314
  1923                           
  1924                           ;RGBLedDisplay.c: 101: {
  1925                           ;RGBLedDisplay.c: 102: PORTCbits.RC2 = 1 ;
  1926  000936  8482               	bsf	3970,2,c	;volatile
  1927                           
  1928                           ;RGBLedDisplay.c: 103: }
  1929  000938  0012               	return	
  1930  00093A                     l2314:
  1931                           
  1932                           ;RGBLedDisplay.c: 104: else if ( timerHalfSecond <2 )
  1933  00093A  505E               	movf	_timerHalfSecond+1,w,c
  1934  00093C  E106               	bnz	l2318
  1935  00093E  0E02               	movlw	2
  1936  000940  5C5D               	subwf	_timerHalfSecond,w,c
  1937  000942  B0D8               	btfsc	status,0,c
  1938  000944  D002               	goto	l2318
  1939                           
  1940                           ;RGBLedDisplay.c: 105: {
  1941                           ;RGBLedDisplay.c: 106: PORTCbits.RC2 = 0 ;
  1942  000946  9482               	bcf	3970,2,c	;volatile
  1943                           
  1944                           ;RGBLedDisplay.c: 107: }else
  1945  000948  0012               	return	
  1946  00094A                     l2318:
  1947                           
  1948                           ;RGBLedDisplay.c: 108: {
  1949                           ;RGBLedDisplay.c: 109: timerHalfSecond = 0 ;
  1950  00094A  0E00               	movlw	0
  1951  00094C  6E5E               	movwf	_timerHalfSecond+1,c
  1952  00094E  0E00               	movlw	0
  1953  000950  6E5D               	movwf	_timerHalfSecond,c
  1954                           
  1955                           ;RGBLedDisplay.c: 110: }
  1956                           ;RGBLedDisplay.c: 111: break;
  1957  000952  0012               	return	
  1958  000954                     l2320:
  1959                           
  1960                           ;RGBLedDisplay.c: 113: if ( timerHalfSecond < 1)
  1961  000954  505D               	movf	_timerHalfSecond,w,c
  1962  000956  105E               	iorwf	_timerHalfSecond+1,w,c
  1963  000958  A4D8               	btfss	status,2,c
  1964  00095A  D003               	goto	l2324
  1965                           
  1966                           ;RGBLedDisplay.c: 114: {
  1967                           ;RGBLedDisplay.c: 115: PORTCbits.RC1 = 1 ;
  1968  00095C  8282               	bsf	3970,1,c	;volatile
  1969                           
  1970                           ;RGBLedDisplay.c: 116: PORTCbits.RC4 = 1;
  1971  00095E  8882               	bsf	3970,4,c	;volatile
  1972                           
  1973                           ;RGBLedDisplay.c: 117: }
  1974  000960  0012               	return	
  1975  000962                     l2324:
  1976                           
  1977                           ;RGBLedDisplay.c: 118: else if ( timerHalfSecond < 2 )
  1978  000962  505E               	movf	_timerHalfSecond+1,w,c
  1979  000964  E107               	bnz	l2328
  1980  000966  0E02               	movlw	2
  1981  000968  5C5D               	subwf	_timerHalfSecond,w,c
  1982  00096A  B0D8               	btfsc	status,0,c
  1983  00096C  D003               	goto	l2328
  1984                           
  1985                           ;RGBLedDisplay.c: 119: {
  1986                           ;RGBLedDisplay.c: 120: PORTCbits.RC1 = 0;
  1987  00096E  9282               	bcf	3970,1,c	;volatile
  1988                           
  1989                           ;RGBLedDisplay.c: 121: PORTCbits.RC4 = 0;
  1990  000970  9882               	bcf	3970,4,c	;volatile
  1991                           
  1992                           ;RGBLedDisplay.c: 122: }else
  1993  000972  0012               	return	
  1994  000974                     l2328:
  1995                           
  1996                           ;RGBLedDisplay.c: 123: {
  1997                           ;RGBLedDisplay.c: 124: timerHalfSecond = 0 ;
  1998  000974  0E00               	movlw	0
  1999  000976  6E5E               	movwf	_timerHalfSecond+1,c
  2000  000978  0E00               	movlw	0
  2001  00097A  6E5D               	movwf	_timerHalfSecond,c
  2002                           
  2003                           ;RGBLedDisplay.c: 125: }
  2004                           ;RGBLedDisplay.c: 126: break;
  2005  00097C  0012               	return	
  2006  00097E                     l2330:
  2007                           
  2008                           ;RGBLedDisplay.c: 128: if ( timerHalfSecond < 1)
  2009  00097E  505D               	movf	_timerHalfSecond,w,c
  2010  000980  105E               	iorwf	_timerHalfSecond+1,w,c
  2011  000982  A4D8               	btfss	status,2,c
  2012  000984  D004               	goto	l2334
  2013                           
  2014                           ;RGBLedDisplay.c: 129: {
  2015                           ;RGBLedDisplay.c: 130: PORTCbits.RC0 = 1 ;
  2016  000986  8082               	bsf	3970,0,c	;volatile
  2017                           
  2018                           ;RGBLedDisplay.c: 131: PORTCbits.RC3 = 1;
  2019  000988  8682               	bsf	3970,3,c	;volatile
  2020                           
  2021                           ;RGBLedDisplay.c: 132: PORTCbits.RC6 = 1;
  2022  00098A  8C82               	bsf	3970,6,c	;volatile
  2023                           
  2024                           ;RGBLedDisplay.c: 133: }
  2025  00098C  0012               	return	
  2026  00098E                     l2334:
  2027                           
  2028                           ;RGBLedDisplay.c: 134: else if ( timerHalfSecond < 2 )
  2029  00098E  505E               	movf	_timerHalfSecond+1,w,c
  2030  000990  E108               	bnz	l2338
  2031  000992  0E02               	movlw	2
  2032  000994  5C5D               	subwf	_timerHalfSecond,w,c
  2033  000996  B0D8               	btfsc	status,0,c
  2034  000998  D004               	goto	l2338
  2035                           
  2036                           ;RGBLedDisplay.c: 135: {
  2037                           ;RGBLedDisplay.c: 136: PORTCbits.RC0 = 0 ;
  2038  00099A  9082               	bcf	3970,0,c	;volatile
  2039                           
  2040                           ;RGBLedDisplay.c: 137: PORTCbits.RC3 = 0;
  2041  00099C  9682               	bcf	3970,3,c	;volatile
  2042                           
  2043                           ;RGBLedDisplay.c: 138: PORTCbits.RC6 = 0;
  2044  00099E  9C82               	bcf	3970,6,c	;volatile
  2045                           
  2046                           ;RGBLedDisplay.c: 139: }else
  2047  0009A0  0012               	return	
  2048  0009A2                     l2338:
  2049                           
  2050                           ;RGBLedDisplay.c: 140: {
  2051                           ;RGBLedDisplay.c: 141: timerHalfSecond = 0 ;
  2052  0009A2  0E00               	movlw	0
  2053  0009A4  6E5E               	movwf	_timerHalfSecond+1,c
  2054  0009A6  0E00               	movlw	0
  2055  0009A8  6E5D               	movwf	_timerHalfSecond,c
  2056                           
  2057                           ;RGBLedDisplay.c: 146: }
  2058                           
  2059                           ;RGBLedDisplay.c: 145: break;
  2060                           
  2061                           ;RGBLedDisplay.c: 144: default:
  2062                           
  2063                           ;RGBLedDisplay.c: 142: }
  2064                           ;RGBLedDisplay.c: 143: break;
  2065  0009AA  0012               	return	
  2066  0009AC                     l2342:
  2067  0009AC  5062               	movf	_levelTmpSetting,w,c
  2068                           
  2069                           ; Switch size 1, requested type "space"
  2070                           ; Number of cases is 3, Range of values is 1 to 3
  2071                           ; switch strategies available:
  2072                           ; Name         Instructions Cycles
  2073                           ; simple_byte           10     6 (average)
  2074                           ;	Chosen strategy is simple_byte
  2075  0009AE  0A01               	xorlw	1	; case 1
  2076  0009B0  B4D8               	btfsc	status,2,c
  2077  0009B2  D7BD               	goto	l2310
  2078  0009B4  0A03               	xorlw	3	; case 2
  2079  0009B6  B4D8               	btfsc	status,2,c
  2080  0009B8  D7CD               	goto	l2320
  2081  0009BA  0A01               	xorlw	1	; case 3
  2082  0009BC  A4D8               	btfss	status,2,c
  2083                           
  2084                           ;RGBLedDisplay.c: 148: break;
  2085  0009BE  0012               	return	
  2086  0009C0  D7DE               	goto	l2330
  2087  0009C2                     __end_of_HeatProcessLedShow:
  2088                           	opt stack 0
  2089                           tblptru	equ	0xFF8
  2090                           intcon	equ	0xFF2
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           postinc2	equ	0xFDE
  2094                           postdec2	equ	0xFDD
  2095                           fsr2h	equ	0xFDA
  2096                           fsr2l	equ	0xFD9
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _GetAdcAD597Value *****************
  2100 ;; Defined at:
  2101 ;;		line 509 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  channelNumbe    1    wreg     unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  2106 ;;  temp            2   36[COMRAM] unsigned short 
  2107 ;;  i               1   38[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  2   31[COMRAM] unsigned short 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2117 ;;      Params:         2       0       0       0
  2118 ;;      Locals:         4       0       0       0
  2119 ;;      Temps:          2       0       0       0
  2120 ;;      Totals:         8       0       0       0
  2121 ;;Total ram usage:        8 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    3
  2124 ;; This function calls:
  2125 ;;		_AD_Converter
  2126 ;;		___lwdiv
  2127 ;; This function is called by:
  2128 ;;		_ProcessHeat
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text7
  2133  000886                     __ptext7:
  2134                           	opt stack 0
  2135  000886                     _GetAdcAD597Value:
  2136                           	opt stack 26
  2137                           
  2138                           ;incstack = 0
  2139                           ;GetAdcAD597Value@channelNumber stored from wreg
  2140  000886  6E24               	movwf	GetAdcAD597Value@channelNumber,c
  2141                           
  2142                           ;system.c: 511: uint8 i;
  2143                           ;system.c: 512: uint16 temp = 0 ;
  2144  000888  0E00               	movlw	0
  2145  00088A  6E26               	movwf	GetAdcAD597Value@temp+1,c
  2146  00088C  0E00               	movlw	0
  2147  00088E  6E25               	movwf	GetAdcAD597Value@temp,c
  2148                           
  2149                           ;system.c: 515: for ( i=0; i< ( 10-1) ;i++)
  2150  000890  0E00               	movlw	0
  2151  000892  6E27               	movwf	GetAdcAD597Value@i,c
  2152  000894                     l2346:
  2153  000894  0E08               	movlw	8
  2154  000896  6427               	cpfsgt	GetAdcAD597Value@i,c
  2155  000898  D001               	goto	l2350
  2156  00089A  D01E               	goto	l2356
  2157  00089C                     l2350:
  2158                           
  2159                           ;system.c: 516: {
  2160                           ;system.c: 517: adcAD597Value[i] = adcAD597Value[i+1] ;
  2161  00089C  5027               	movf	GetAdcAD597Value@i,w,c
  2162  00089E  6E22               	movwf	??_GetAdcAD597Value& (0+255),c
  2163  0008A0  6A23               	clrf	(??_GetAdcAD597Value+1)& (0+255),c
  2164  0008A2  90D8               	bcf	status,0,c
  2165  0008A4  3622               	rlcf	??_GetAdcAD597Value,f,c
  2166  0008A6  3623               	rlcf	??_GetAdcAD597Value+1,f,c
  2167  0008A8  0E02               	movlw	2
  2168  0008AA  2622               	addwf	??_GetAdcAD597Value,f,c
  2169  0008AC  0E00               	movlw	0
  2170  0008AE  2223               	addwfc	??_GetAdcAD597Value+1,f,c
  2171  0008B0  0E80               	movlw	low _adcAD597Value
  2172  0008B2  2422               	addwf	??_GetAdcAD597Value,w,c
  2173  0008B4  6ED9               	movwf	fsr2l,c
  2174  0008B6  0E00               	movlw	high _adcAD597Value
  2175  0008B8  2023               	addwfc	??_GetAdcAD597Value+1,w,c
  2176  0008BA  6EDA               	movwf	fsr2h,c
  2177  0008BC  5027               	movf	GetAdcAD597Value@i,w,c
  2178  0008BE  0D02               	mullw	2
  2179  0008C0  0E80               	movlw	low _adcAD597Value
  2180  0008C2  24F3               	addwf	prodl,w,c
  2181  0008C4  6EE1               	movwf	fsr1l,c
  2182  0008C6  0E00               	movlw	high _adcAD597Value
  2183  0008C8  20F4               	addwfc	prodh,w,c
  2184  0008CA  6EE2               	movwf	fsr1h,c
  2185  0008CC  CFDE FFE6          	movff	postinc2,postinc1
  2186  0008D0  CFDD FFE5          	movff	postdec2,postdec1
  2187  0008D4  2A27               	incf	GetAdcAD597Value@i,f,c
  2188  0008D6  D7DE               	goto	l2346
  2189  0008D8                     l2356:
  2190                           
  2191                           ;system.c: 518: }
  2192                           ;system.c: 520: adcAD597Value[10-1] = AD_Converter( channelNumber ) ;
  2193  0008D8  5024               	movf	GetAdcAD597Value@channelNumber,w,c
  2194  0008DA  EC50  F005         	call	_AD_Converter
  2195  0008DE  C019  F092         	movff	?_AD_Converter,_adcAD597Value+18
  2196  0008E2  C01A  F093         	movff	?_AD_Converter+1,_adcAD597Value+19
  2197                           
  2198                           ;system.c: 522: for ( i=0 ;i<10 ;i++)
  2199  0008E6  0E00               	movlw	0
  2200  0008E8  6E27               	movwf	GetAdcAD597Value@i,c
  2201  0008EA                     l2360:
  2202  0008EA  0E09               	movlw	9
  2203  0008EC  6427               	cpfsgt	GetAdcAD597Value@i,c
  2204  0008EE  D001               	goto	l2364
  2205  0008F0  D00E               	goto	l2370
  2206  0008F2                     l2364:
  2207                           
  2208                           ;system.c: 523: {
  2209                           ;system.c: 524: temp += adcAD597Value[i] ;
  2210  0008F2  5027               	movf	GetAdcAD597Value@i,w,c
  2211  0008F4  0D02               	mullw	2
  2212  0008F6  0E80               	movlw	low _adcAD597Value
  2213  0008F8  24F3               	addwf	prodl,w,c
  2214  0008FA  6ED9               	movwf	fsr2l,c
  2215  0008FC  0E00               	movlw	high _adcAD597Value
  2216  0008FE  20F4               	addwfc	prodh,w,c
  2217  000900  6EDA               	movwf	fsr2h,c
  2218  000902  50DE               	movf	postinc2,w,c
  2219  000904  2625               	addwf	GetAdcAD597Value@temp,f,c
  2220  000906  50DD               	movf	postdec2,w,c
  2221  000908  2226               	addwfc	GetAdcAD597Value@temp+1,f,c
  2222  00090A  2A27               	incf	GetAdcAD597Value@i,f,c
  2223  00090C  D7EE               	goto	l2360
  2224  00090E                     l2370:
  2225                           
  2226                           ;system.c: 525: }
  2227                           ;system.c: 527: return ( temp/10 );
  2228  00090E  C025  F017         	movff	GetAdcAD597Value@temp,___lwdiv@dividend
  2229  000912  C026  F018         	movff	GetAdcAD597Value@temp+1,___lwdiv@dividend+1
  2230  000916  0E00               	movlw	0
  2231  000918  6E1A               	movwf	___lwdiv@divisor+1,c
  2232  00091A  0E0A               	movlw	10
  2233  00091C  6E19               	movwf	___lwdiv@divisor,c
  2234  00091E  ECE1  F004         	call	___lwdiv	;wreg free
  2235  000922  C017  F020         	movff	?___lwdiv,?_GetAdcAD597Value
  2236  000926  C018  F021         	movff	?___lwdiv+1,?_GetAdcAD597Value+1
  2237  00092A  0012               	return	
  2238  00092C                     __end_of_GetAdcAD597Value:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           prodh	equ	0xFF4
  2242                           prodl	equ	0xFF3
  2243                           intcon	equ	0xFF2
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           postinc1	equ	0xFE6
  2247                           postdec1	equ	0xFE5
  2248                           fsr1h	equ	0xFE2
  2249                           fsr1l	equ	0xFE1
  2250                           postinc2	equ	0xFDE
  2251                           postdec2	equ	0xFDD
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _ProcessButton *****************
  2257 ;; Defined at:
  2258 ;;		line 42 in file "WAFR-01-C001 HD-debug.X/keyboard/keyboard.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  buttonPushPe    4   26[COMRAM] unsigned long 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2272 ;;      Params:         0       0       0       0
  2273 ;;      Locals:         4       0       0       0
  2274 ;;      Temps:          4       0       0       0
  2275 ;;      Totals:         8       0       0       0
  2276 ;;Total ram usage:        8 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    3
  2279 ;; This function calls:
  2280 ;;		_LevelTmpSetShow
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text8
  2287  000666                     __ptext8:
  2288                           	opt stack 0
  2289  000666                     _ProcessButton:
  2290                           	opt stack 27
  2291                           
  2292                           ;keyboard.c: 44: uint32 buttonPushPeriod = 0 ;
  2293                           
  2294                           ;incstack = 0
  2295  000666  0E00               	movlw	0
  2296  000668  6E1B               	movwf	ProcessButton@buttonPushPeriod,c
  2297  00066A  0E00               	movlw	0
  2298  00066C  6E1C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2299  00066E  0E00               	movlw	0
  2300  000670  6E1D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2301  000672  0E00               	movlw	0
  2302  000674  6E1E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2303                           
  2304                           ;keyboard.c: 46: if ( flagS2KeyPushed )
  2305  000676  5061               	movf	_flagS2KeyPushed,w,c
  2306  000678  B4D8               	btfsc	status,2,c
  2307  00067A  D051               	goto	l2468
  2308                           
  2309                           ;keyboard.c: 47: {
  2310                           ;keyboard.c: 48: flagS2KeyPushed = 0 ;
  2311  00067C  0E00               	movlw	0
  2312  00067E  6E61               	movwf	_flagS2KeyPushed,c
  2313                           
  2314                           ;keyboard.c: 52: buttonPushPeriod = buttonPushTimeStop-buttonPushTimeStart ;
  2315  000680  C04D  F017         	movff	_buttonPushTimeStart,??_ProcessButton
  2316  000684  C04E  F018         	movff	_buttonPushTimeStart+1,??_ProcessButton+1
  2317  000688  C04F  F019         	movff	_buttonPushTimeStart+2,??_ProcessButton+2
  2318  00068C  C050  F01A         	movff	_buttonPushTimeStart+3,??_ProcessButton+3
  2319  000690  1E17               	comf	??_ProcessButton,f,c
  2320  000692  1E18               	comf	??_ProcessButton+1,f,c
  2321  000694  1E19               	comf	??_ProcessButton+2,f,c
  2322  000696  1E1A               	comf	??_ProcessButton+3,f,c
  2323  000698  2A17               	incf	??_ProcessButton,f,c
  2324  00069A  0E00               	movlw	0
  2325  00069C  2218               	addwfc	??_ProcessButton+1,f,c
  2326  00069E  2219               	addwfc	??_ProcessButton+2,f,c
  2327  0006A0  221A               	addwfc	??_ProcessButton+3,f,c
  2328  0006A2  5051               	movf	_buttonPushTimeStop,w,c
  2329  0006A4  2417               	addwf	??_ProcessButton,w,c
  2330  0006A6  6E1B               	movwf	ProcessButton@buttonPushPeriod,c
  2331  0006A8  5052               	movf	_buttonPushTimeStop+1,w,c
  2332  0006AA  2018               	addwfc	??_ProcessButton+1,w,c
  2333  0006AC  6E1C               	movwf	ProcessButton@buttonPushPeriod+1,c
  2334  0006AE  5053               	movf	_buttonPushTimeStop+2,w,c
  2335  0006B0  2019               	addwfc	??_ProcessButton+2,w,c
  2336  0006B2  6E1D               	movwf	ProcessButton@buttonPushPeriod+2,c
  2337  0006B4  5054               	movf	_buttonPushTimeStop+3,w,c
  2338  0006B6  201A               	addwfc	??_ProcessButton+3,w,c
  2339  0006B8  6E1E               	movwf	ProcessButton@buttonPushPeriod+3,c
  2340                           
  2341                           ;keyboard.c: 57: if ( S2KeyPushTime < 12 )
  2342  0006BA  0E0C               	movlw	12
  2343  0006BC  605F               	cpfslt	_S2KeyPushTime,c
  2344  0006BE  D00B               	goto	l2438
  2345                           
  2346                           ;keyboard.c: 58: {
  2347                           ;keyboard.c: 60: levelTmpSetting ++ ;
  2348  0006C0  2A62               	incf	_levelTmpSetting,f,c
  2349                           
  2350                           ;keyboard.c: 61: if ( levelTmpSetting > 3 )
  2351  0006C2  0E03               	movlw	3
  2352  0006C4  6462               	cpfsgt	_levelTmpSetting,c
  2353  0006C6  D002               	goto	l474
  2354                           
  2355                           ;keyboard.c: 62: {
  2356                           ;keyboard.c: 63: levelTmpSetting = 1 ;
  2357  0006C8  0E01               	movlw	1
  2358  0006CA  6E62               	movwf	_levelTmpSetting,c
  2359  0006CC                     l474:
  2360                           
  2361                           ;keyboard.c: 64: }
  2362                           ;keyboard.c: 66: timerHalfSecond = 0 ;
  2363  0006CC  0E00               	movlw	0
  2364  0006CE  6E5E               	movwf	_timerHalfSecond+1,c
  2365  0006D0  0E00               	movlw	0
  2366  0006D2  6E5D               	movwf	_timerHalfSecond,c
  2367                           
  2368                           ;keyboard.c: 70: }
  2369  0006D4  D002               	goto	l2442
  2370  0006D6                     l2438:
  2371                           
  2372                           ;keyboard.c: 71: else
  2373                           ;keyboard.c: 72: {
  2374                           ;keyboard.c: 74: return ( 3 ) ;
  2375  0006D6  0E03               	movlw	3
  2376  0006D8  0012               	return	
  2377  0006DA                     l2442:
  2378                           
  2379                           ;keyboard.c: 75: }
  2380                           ;keyboard.c: 81: if( buttonPushPeriod < 50 )
  2381  0006DA  501E               	movf	ProcessButton@buttonPushPeriod+3,w,c
  2382  0006DC  101D               	iorwf	ProcessButton@buttonPushPeriod+2,w,c
  2383  0006DE  101C               	iorwf	ProcessButton@buttonPushPeriod+1,w,c
  2384  0006E0  E114               	bnz	l477
  2385  0006E2  0E32               	movlw	50
  2386  0006E4  5C1B               	subwf	ProcessButton@buttonPushPeriod,w,c
  2387  0006E6  B0D8               	btfsc	status,0,c
  2388  0006E8  D010               	goto	l477
  2389                           
  2390                           ;keyboard.c: 82: {
  2391                           ;keyboard.c: 86: levelTmpSetting -- ;
  2392  0006EA  0662               	decf	_levelTmpSetting,f,c
  2393                           
  2394                           ;keyboard.c: 87: if (levelTmpSetting < 1 )
  2395  0006EC  5062               	movf	_levelTmpSetting,w,c
  2396  0006EE  A4D8               	btfss	status,2,c
  2397  0006F0  D002               	goto	l2450
  2398                           
  2399                           ;keyboard.c: 88: {
  2400                           ;keyboard.c: 89: levelTmpSetting = 3 ;
  2401  0006F2  0E03               	movlw	3
  2402  0006F4  6E62               	movwf	_levelTmpSetting,c
  2403  0006F6                     l2450:
  2404                           
  2405                           ;keyboard.c: 90: }
  2406                           ;keyboard.c: 97: levelTmpSetting -- ;
  2407  0006F6  0662               	decf	_levelTmpSetting,f,c
  2408                           
  2409                           ;keyboard.c: 98: if (levelTmpSetting < 1 )
  2410  0006F8  5062               	movf	_levelTmpSetting,w,c
  2411  0006FA  A4D8               	btfss	status,2,c
  2412  0006FC  D002               	goto	l2456
  2413                           
  2414                           ;keyboard.c: 99: {
  2415                           ;keyboard.c: 100: levelTmpSetting = 3 ;
  2416  0006FE  0E03               	movlw	3
  2417  000700  6E62               	movwf	_levelTmpSetting,c
  2418  000702                     l2456:
  2419                           
  2420                           ;keyboard.c: 101: }
  2421                           ;keyboard.c: 103: LevelTmpSetShow ();
  2422  000702  EC2D  F005         	call	_LevelTmpSetShow	;wreg free
  2423                           
  2424                           ;keyboard.c: 104: return ( 2 );
  2425  000706  0E02               	movlw	2
  2426  000708  0012               	return	
  2427  00070A                     l477:
  2428                           
  2429                           ;keyboard.c: 106: {
  2430                           ;keyboard.c: 107: buttonPushTimeStart = buttonPushTimeStop ;
  2431  00070A  C051  F04D         	movff	_buttonPushTimeStop,_buttonPushTimeStart
  2432  00070E  C052  F04E         	movff	_buttonPushTimeStop+1,_buttonPushTimeStart+1
  2433  000712  C053  F04F         	movff	_buttonPushTimeStop+2,_buttonPushTimeStart+2
  2434  000716  C054  F050         	movff	_buttonPushTimeStop+3,_buttonPushTimeStart+3
  2435                           
  2436                           ;keyboard.c: 113: return ( 1) ;
  2437  00071A  0E01               	movlw	1
  2438  00071C  0012               	return	
  2439  00071E                     l2468:
  2440                           
  2441                           ;keyboard.c: 114: }
  2442                           ;keyboard.c: 116: }
  2443                           ;keyboard.c: 118: return ( 0 );
  2444  00071E  0E00               	movlw	0
  2445  000720  0012               	return	
  2446  000722                     __end_of_ProcessButton:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           prodh	equ	0xFF4
  2450                           prodl	equ	0xFF3
  2451                           intcon	equ	0xFF2
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           postinc1	equ	0xFE6
  2455                           postdec1	equ	0xFE5
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           postinc2	equ	0xFDE
  2459                           postdec2	equ	0xFDD
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _LevelTmpSetShow *****************
  2465 ;; Defined at:
  2466 ;;		line 32 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;		None               void
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2480 ;;      Params:         0       0       0       0
  2481 ;;      Locals:         0       0       0       0
  2482 ;;      Temps:          0       0       0       0
  2483 ;;      Totals:         0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    2
  2487 ;; This function calls:
  2488 ;;		_turnOffAllLed
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;;		_ProcessButton
  2492 ;;		_InitializeHardware
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text9
  2497  000A5A                     __ptext9:
  2498                           	opt stack 0
  2499  000A5A                     _LevelTmpSetShow:
  2500                           	opt stack 27
  2501                           
  2502                           ;RGBLedDisplay.c: 35: turnOffAllLed();
  2503                           
  2504                           ;incstack = 0
  2505  000A5A  ECFD  F005         	call	_turnOffAllLed	;wreg free
  2506                           
  2507                           ;RGBLedDisplay.c: 36: switch ( levelTmpSetting )
  2508  000A5E  D015               	goto	l2288
  2509  000A60                     l415:
  2510                           
  2511                           ;RGBLedDisplay.c: 39: PORTCbits.RC0 = 1 ;
  2512  000A60  8082               	bsf	3970,0,c	;volatile
  2513                           
  2514                           ;RGBLedDisplay.c: 40: PORTCbits.RC1 = 1 ;
  2515  000A62  8282               	bsf	3970,1,c	;volatile
  2516                           
  2517                           ;RGBLedDisplay.c: 41: PORTCbits.RC2 = 1 ;
  2518  000A64  8482               	bsf	3970,2,c	;volatile
  2519                           
  2520                           ;RGBLedDisplay.c: 42: break;
  2521  000A66  0012               	return	
  2522  000A68                     l417:
  2523                           
  2524                           ;RGBLedDisplay.c: 44: PORTCbits.RC0 = 1 ;
  2525  000A68  8082               	bsf	3970,0,c	;volatile
  2526                           
  2527                           ;RGBLedDisplay.c: 45: PORTCbits.RC1 = 1 ;
  2528  000A6A  8282               	bsf	3970,1,c	;volatile
  2529                           
  2530                           ;RGBLedDisplay.c: 46: PORTCbits.RC2 = 1 ;
  2531  000A6C  8482               	bsf	3970,2,c	;volatile
  2532                           
  2533                           ;RGBLedDisplay.c: 47: PORTCbits.RC3 = 1 ;
  2534  000A6E  8682               	bsf	3970,3,c	;volatile
  2535                           
  2536                           ;RGBLedDisplay.c: 48: PORTCbits.RC4 = 1 ;
  2537  000A70  8882               	bsf	3970,4,c	;volatile
  2538                           
  2539                           ;RGBLedDisplay.c: 49: PORTCbits.RC5 = 1 ;
  2540  000A72  8A82               	bsf	3970,5,c	;volatile
  2541                           
  2542                           ;RGBLedDisplay.c: 50: break;
  2543  000A74  0012               	return	
  2544  000A76                     l418:
  2545                           
  2546                           ;RGBLedDisplay.c: 52: PORTCbits.RC0 = 1 ;
  2547  000A76  8082               	bsf	3970,0,c	;volatile
  2548                           
  2549                           ;RGBLedDisplay.c: 53: PORTCbits.RC1 = 1 ;
  2550  000A78  8282               	bsf	3970,1,c	;volatile
  2551                           
  2552                           ;RGBLedDisplay.c: 54: PORTCbits.RC2 = 1 ;
  2553  000A7A  8482               	bsf	3970,2,c	;volatile
  2554                           
  2555                           ;RGBLedDisplay.c: 55: PORTCbits.RC3 = 1 ;
  2556  000A7C  8682               	bsf	3970,3,c	;volatile
  2557                           
  2558                           ;RGBLedDisplay.c: 56: PORTCbits.RC4 = 1 ;
  2559  000A7E  8882               	bsf	3970,4,c	;volatile
  2560                           
  2561                           ;RGBLedDisplay.c: 57: PORTCbits.RC5 = 1 ;
  2562  000A80  8A82               	bsf	3970,5,c	;volatile
  2563                           
  2564                           ;RGBLedDisplay.c: 58: PORTCbits.RC6 = 1 ;
  2565  000A82  8C82               	bsf	3970,6,c	;volatile
  2566                           
  2567                           ;RGBLedDisplay.c: 59: PORTCbits.RC7 = 1 ;
  2568  000A84  8E82               	bsf	3970,7,c	;volatile
  2569                           
  2570                           ;RGBLedDisplay.c: 60: PORTBbits.RB3 = 1 ;
  2571  000A86  8681               	bsf	3969,3,c	;volatile
  2572                           
  2573                           ;RGBLedDisplay.c: 64: }
  2574                           
  2575                           ;RGBLedDisplay.c: 63: break;
  2576                           
  2577                           ;RGBLedDisplay.c: 62: default:
  2578                           
  2579                           ;RGBLedDisplay.c: 61: break;
  2580  000A88  0012               	return	
  2581  000A8A                     l2288:
  2582  000A8A  5062               	movf	_levelTmpSetting,w,c
  2583                           
  2584                           ; Switch size 1, requested type "space"
  2585                           ; Number of cases is 3, Range of values is 1 to 3
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte           10     6 (average)
  2589                           ;	Chosen strategy is simple_byte
  2590  000A8C  0A01               	xorlw	1	; case 1
  2591  000A8E  B4D8               	btfsc	status,2,c
  2592  000A90  D7E7               	goto	l415
  2593  000A92  0A03               	xorlw	3	; case 2
  2594  000A94  B4D8               	btfsc	status,2,c
  2595  000A96  D7E8               	goto	l417
  2596  000A98  0A01               	xorlw	1	; case 3
  2597  000A9A  A4D8               	btfss	status,2,c
  2598  000A9C  0012               	return	
  2599  000A9E  D7EB               	goto	l418
  2600  000AA0                     __end_of_LevelTmpSetShow:
  2601                           	opt stack 0
  2602                           tblptru	equ	0xFF8
  2603                           prodh	equ	0xFF4
  2604                           prodl	equ	0xFF3
  2605                           intcon	equ	0xFF2
  2606                           postinc0	equ	0xFEE
  2607                           wreg	equ	0xFE8
  2608                           postinc1	equ	0xFE6
  2609                           postdec1	equ	0xFE5
  2610                           fsr1h	equ	0xFE2
  2611                           fsr1l	equ	0xFE1
  2612                           postinc2	equ	0xFDE
  2613                           postdec2	equ	0xFDD
  2614                           fsr2h	equ	0xFDA
  2615                           fsr2l	equ	0xFD9
  2616                           status	equ	0xFD8
  2617                           
  2618 ;; *************** function _turnOffAllLed *****************
  2619 ;; Defined at:
  2620 ;;		line 74 in file "WAFR-01-C001 HD-debug.X/RGBLedDisplay/RGBLedDisplay.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;		None               void
  2627 ;; Registers used:
  2628 ;;		wreg, status,2
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2634 ;;      Params:         0       0       0       0
  2635 ;;      Locals:         0       0       0       0
  2636 ;;      Temps:          0       0       0       0
  2637 ;;      Totals:         0       0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    1
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_main
  2645 ;;		_ShutDownSystem
  2646 ;;		_ProcessHeat
  2647 ;;		_LevelTmpSetShow
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text10
  2652  000BFA                     __ptext10:
  2653                           	opt stack 0
  2654  000BFA                     _turnOffAllLed:
  2655                           	opt stack 29
  2656                           
  2657                           ;RGBLedDisplay.c: 77: PORTC = 0;
  2658                           
  2659                           ;incstack = 0
  2660  000BFA  0E00               	movlw	0
  2661  000BFC  6E82               	movwf	3970,c	;volatile
  2662                           
  2663                           ;RGBLedDisplay.c: 78: PORTBbits.RB3 = 0;
  2664  000BFE  9681               	bcf	3969,3,c	;volatile
  2665  000C00  0012               	return		;funcret
  2666  000C02                     __end_of_turnOffAllLed:
  2667                           	opt stack 0
  2668                           tblptru	equ	0xFF8
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           postinc1	equ	0xFE6
  2675                           postdec1	equ	0xFE5
  2676                           fsr1h	equ	0xFE2
  2677                           fsr1l	equ	0xFE1
  2678                           postinc2	equ	0xFDE
  2679                           postdec2	equ	0xFDD
  2680                           fsr2h	equ	0xFDA
  2681                           fsr2l	equ	0xFD9
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function _InitializeTimer0 *****************
  2685 ;; Defined at:
  2686 ;;		line 113 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg, status,2
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2700 ;;      Params:         0       0       0       0
  2701 ;;      Locals:         0       0       0       0
  2702 ;;      Temps:          0       0       0       0
  2703 ;;      Totals:         0       0       0       0
  2704 ;;Total ram usage:        0 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text11
  2715  000BCC                     __ptext11:
  2716                           	opt stack 0
  2717  000BCC                     _InitializeTimer0:
  2718                           	opt stack 29
  2719                           
  2720                           ;system.c: 115: T0CONbits.T08BIT = 0 ;
  2721                           
  2722                           ;incstack = 0
  2723  000BCC  9CD5               	bcf	4053,6,c	;volatile
  2724                           
  2725                           ;system.c: 116: T0CONbits.T0CS = 0 ;
  2726  000BCE  9AD5               	bcf	4053,5,c	;volatile
  2727                           
  2728                           ;system.c: 117: T0CONbits.PSA = 1 ;
  2729  000BD0  86D5               	bsf	4053,3,c	;volatile
  2730                           
  2731                           ;system.c: 119: TMR0H = (65536-40000)/256;
  2732  000BD2  0E63               	movlw	99
  2733  000BD4  6ED7               	movwf	4055,c	;volatile
  2734                           
  2735                           ;system.c: 120: TMR0L = (65536-40000)%256 ;
  2736  000BD6  0EC0               	movlw	192
  2737  000BD8  6ED6               	movwf	4054,c	;volatile
  2738                           
  2739                           ;system.c: 122: T0CONbits.TMR0ON = 1 ;
  2740  000BDA  8ED5               	bsf	4053,7,c	;volatile
  2741                           
  2742                           ;system.c: 125: INTCONbits.TMR0IF = 0 ;
  2743  000BDC  94F2               	bcf	intcon,2,c	;volatile
  2744                           
  2745                           ;system.c: 126: INTCONbits.TMR0IE = 1;
  2746  000BDE  8AF2               	bsf	intcon,5,c	;volatile
  2747                           
  2748                           ;system.c: 129: INTCONbits.PEIE = 1 ;
  2749  000BE0  8CF2               	bsf	intcon,6,c	;volatile
  2750  000BE2  0012               	return		;funcret
  2751  000BE4                     __end_of_InitializeTimer0:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           postinc1	equ	0xFE6
  2760                           postdec1	equ	0xFE5
  2761                           fsr1h	equ	0xFE2
  2762                           fsr1l	equ	0xFE1
  2763                           postinc2	equ	0xFDE
  2764                           postdec2	equ	0xFDD
  2765                           fsr2h	equ	0xFDA
  2766                           fsr2l	equ	0xFD9
  2767                           status	equ	0xFD8
  2768                           
  2769 ;; *************** function _InitializePinmux *****************
  2770 ;; Defined at:
  2771 ;;		line 67 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;		None               void
  2778 ;; Registers used:
  2779 ;;		None
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2785 ;;      Params:         0       0       0       0
  2786 ;;      Locals:         0       0       0       0
  2787 ;;      Temps:          0       0       0       0
  2788 ;;      Totals:         0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    1
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text12
  2800  000B44                     __ptext12:
  2801                           	opt stack 0
  2802  000B44                     _InitializePinmux:
  2803                           	opt stack 29
  2804                           
  2805                           ;system.c: 70: TRISCbits.TRISC0 = 0;
  2806                           
  2807                           ;incstack = 0
  2808  000B44  9094               	bcf	3988,0,c	;volatile
  2809                           
  2810                           ;system.c: 71: TRISCbits.TRISC1 = 0;
  2811  000B46  9294               	bcf	3988,1,c	;volatile
  2812                           
  2813                           ;system.c: 72: TRISCbits.TRISC2 = 0;
  2814  000B48  9494               	bcf	3988,2,c	;volatile
  2815                           
  2816                           ;system.c: 73: TRISCbits.TRISC3 = 0;
  2817  000B4A  9694               	bcf	3988,3,c	;volatile
  2818                           
  2819                           ;system.c: 74: TRISCbits.TRISC4 = 0;
  2820  000B4C  9894               	bcf	3988,4,c	;volatile
  2821                           
  2822                           ;system.c: 75: TRISCbits.TRISC5 = 0;
  2823  000B4E  9A94               	bcf	3988,5,c	;volatile
  2824                           
  2825                           ;system.c: 76: TRISCbits.TRISC6 = 0;
  2826  000B50  9C94               	bcf	3988,6,c	;volatile
  2827                           
  2828                           ;system.c: 77: TRISCbits.TRISC7 = 0;
  2829  000B52  9E94               	bcf	3988,7,c	;volatile
  2830                           
  2831                           ;system.c: 79: TRISBbits.TRISB3 = 0;
  2832  000B54  9693               	bcf	3987,3,c	;volatile
  2833                           
  2834                           ;system.c: 82: TRISAbits.TRISA0 = 1 ;
  2835  000B56  8092               	bsf	3986,0,c	;volatile
  2836                           
  2837                           ;system.c: 85: TRISAbits.TRISA1 = 1;
  2838  000B58  8292               	bsf	3986,1,c	;volatile
  2839                           
  2840                           ;system.c: 87: TRISAbits.TRISA2 = 1 ;
  2841  000B5A  8492               	bsf	3986,2,c	;volatile
  2842                           
  2843                           ;system.c: 88: TRISAbits.TRISA3 = 1 ;
  2844  000B5C  8692               	bsf	3986,3,c	;volatile
  2845                           
  2846                           ;system.c: 91: TRISAbits.TRISA4 = 1;
  2847  000B5E  8892               	bsf	3986,4,c	;volatile
  2848                           
  2849                           ;system.c: 94: TRISAbits.TRISA5 = 1;
  2850  000B60  8A92               	bsf	3986,5,c	;volatile
  2851                           
  2852                           ;system.c: 97: TRISBbits.TRISB0 = 1;
  2853  000B62  8093               	bsf	3987,0,c	;volatile
  2854                           
  2855                           ;system.c: 100: TRISBbits.TRISB1 = 0;
  2856  000B64  9293               	bcf	3987,1,c	;volatile
  2857                           
  2858                           ;system.c: 103: TRISBbits.TRISB2 = 0;
  2859  000B66  9493               	bcf	3987,2,c	;volatile
  2860                           
  2861                           ;system.c: 106: TRISBbits.TRISB4 = 1;
  2862  000B68  8893               	bsf	3987,4,c	;volatile
  2863  000B6A  0012               	return		;funcret
  2864  000B6C                     __end_of_InitializePinmux:
  2865                           	opt stack 0
  2866                           tblptru	equ	0xFF8
  2867                           prodh	equ	0xFF4
  2868                           prodl	equ	0xFF3
  2869                           intcon	equ	0xFF2
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           postinc1	equ	0xFE6
  2873                           postdec1	equ	0xFE5
  2874                           fsr1h	equ	0xFE2
  2875                           fsr1l	equ	0xFE1
  2876                           postinc2	equ	0xFDE
  2877                           postdec2	equ	0xFDD
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8
  2881                           
  2882 ;; *************** function _InitializeOscillator *****************
  2883 ;; Defined at:
  2884 ;;		line 28 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;		None               void
  2891 ;; Registers used:
  2892 ;;		None
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2898 ;;      Params:         0       0       0       0
  2899 ;;      Locals:         0       0       0       0
  2900 ;;      Temps:          0       0       0       0
  2901 ;;      Totals:         0       0       0       0
  2902 ;;Total ram usage:        0 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    1
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text13
  2913  000C12                     __ptext13:
  2914                           	opt stack 0
  2915  000C12                     _InitializeOscillator:
  2916                           	opt stack 29
  2917                           
  2918                           ;incstack = 0
  2919  000C12  0012               	return		;funcret
  2920  000C14                     __end_of_InitializeOscillator:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           prodh	equ	0xFF4
  2924                           prodl	equ	0xFF3
  2925                           intcon	equ	0xFF2
  2926                           postinc0	equ	0xFEE
  2927                           wreg	equ	0xFE8
  2928                           postinc1	equ	0xFE6
  2929                           postdec1	equ	0xFE5
  2930                           fsr1h	equ	0xFE2
  2931                           fsr1l	equ	0xFE1
  2932                           postinc2	equ	0xFDE
  2933                           postdec2	equ	0xFDD
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _InitializeInterrupts *****************
  2939 ;; Defined at:
  2940 ;;		line 52 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		None
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2954 ;;      Params:         0       0       0       0
  2955 ;;      Locals:         0       0       0       0
  2956 ;;      Temps:          0       0       0       0
  2957 ;;      Totals:         0       0       0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text14
  2969  000C02                     __ptext14:
  2970                           	opt stack 0
  2971  000C02                     _InitializeInterrupts:
  2972                           	opt stack 29
  2973                           
  2974                           ;system.c: 55: INTCONbits.INT0IE = 1;
  2975                           
  2976                           ;incstack = 0
  2977  000C02  88F2               	bsf	intcon,4,c	;volatile
  2978                           
  2979                           ;system.c: 58: INTCONbits.TMR0IE = 1;
  2980  000C04  8AF2               	bsf	intcon,5,c	;volatile
  2981                           
  2982                           ;system.c: 61: INTCONbits.GIE = 1;
  2983  000C06  8EF2               	bsf	intcon,7,c	;volatile
  2984  000C08  0012               	return		;funcret
  2985  000C0A                     __end_of_InitializeInterrupts:
  2986                           	opt stack 0
  2987                           tblptru	equ	0xFF8
  2988                           prodh	equ	0xFF4
  2989                           prodl	equ	0xFF3
  2990                           intcon	equ	0xFF2
  2991                           postinc0	equ	0xFEE
  2992                           wreg	equ	0xFE8
  2993                           postinc1	equ	0xFE6
  2994                           postdec1	equ	0xFE5
  2995                           fsr1h	equ	0xFE2
  2996                           fsr1l	equ	0xFE1
  2997                           postinc2	equ	0xFDE
  2998                           postdec2	equ	0xFDD
  2999                           fsr2h	equ	0xFDA
  3000                           fsr2l	equ	0xFD9
  3001                           status	equ	0xFD8
  3002                           
  3003 ;; *************** function _InitializeINT0 *****************
  3004 ;; Defined at:
  3005 ;;		line 169 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;		None               void
  3012 ;; Registers used:
  3013 ;;		None
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3019 ;;      Params:         0       0       0       0
  3020 ;;      Locals:         0       0       0       0
  3021 ;;      Temps:          0       0       0       0
  3022 ;;      Totals:         0       0       0       0
  3023 ;;Total ram usage:        0 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text15
  3034  000C0A                     __ptext15:
  3035                           	opt stack 0
  3036  000C0A                     _InitializeINT0:
  3037                           	opt stack 29
  3038                           
  3039                           ;system.c: 171: INTCON2bits.INTEDG0 = 0 ;
  3040                           
  3041                           ;incstack = 0
  3042  000C0A  9CF1               	bcf	intcon2,6,c	;volatile
  3043                           
  3044                           ;system.c: 172: INTCONbits.INT0IF = 0 ;
  3045  000C0C  92F2               	bcf	intcon,1,c	;volatile
  3046                           
  3047                           ;system.c: 174: INTCONbits.INT0IE = 1 ;
  3048  000C0E  88F2               	bsf	intcon,4,c	;volatile
  3049  000C10  0012               	return		;funcret
  3050  000C12                     __end_of_InitializeINT0:
  3051                           	opt stack 0
  3052                           tblptru	equ	0xFF8
  3053                           prodh	equ	0xFF4
  3054                           prodl	equ	0xFF3
  3055                           intcon	equ	0xFF2
  3056                           intcon2	equ	0xFF1
  3057                           postinc0	equ	0xFEE
  3058                           wreg	equ	0xFE8
  3059                           postinc1	equ	0xFE6
  3060                           postdec1	equ	0xFE5
  3061                           fsr1h	equ	0xFE2
  3062                           fsr1l	equ	0xFE1
  3063                           postinc2	equ	0xFDE
  3064                           postdec2	equ	0xFDD
  3065                           fsr2h	equ	0xFDA
  3066                           fsr2l	equ	0xFD9
  3067                           status	equ	0xFD8
  3068                           
  3069 ;; *************** function _InitializeAD *****************
  3070 ;; Defined at:
  3071 ;;		line 210 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;		None               void
  3078 ;; Registers used:
  3079 ;;		None
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3085 ;;      Params:         0       0       0       0
  3086 ;;      Locals:         0       0       0       0
  3087 ;;      Temps:          0       0       0       0
  3088 ;;      Totals:         0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    1
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text16
  3100  000B92                     __ptext16:
  3101                           	opt stack 0
  3102  000B92                     _InitializeAD:
  3103                           	opt stack 29
  3104                           
  3105                           ;system.c: 221: ADCON1bits.PCFG3 = 1;
  3106                           
  3107                           ;incstack = 0
  3108  000B92  86C1               	bsf	4033,3,c	;volatile
  3109                           
  3110                           ;system.c: 222: ADCON1bits.PCFG2 = 0;
  3111  000B94  94C1               	bcf	4033,2,c	;volatile
  3112                           
  3113                           ;system.c: 223: ADCON1bits.PCFG1 = 0;
  3114  000B96  92C1               	bcf	4033,1,c	;volatile
  3115                           
  3116                           ;system.c: 224: ADCON1bits.PCFG0 = 1;
  3117  000B98  80C1               	bsf	4033,0,c	;volatile
  3118                           
  3119                           ;system.c: 226: ADCON1bits.VCFG1 = 1 ;
  3120  000B9A  8AC1               	bsf	4033,5,c	;volatile
  3121                           
  3122                           ;system.c: 227: ADCON1bits.VCFG0 = 1 ;
  3123  000B9C  88C1               	bsf	4033,4,c	;volatile
  3124                           
  3125                           ;system.c: 238: ADCON2bits.ADCS2 = 0 ;
  3126  000B9E  94C0               	bcf	4032,2,c	;volatile
  3127                           
  3128                           ;system.c: 239: ADCON2bits.ADCS1 = 1 ;
  3129  000BA0  82C0               	bsf	4032,1,c	;volatile
  3130                           
  3131                           ;system.c: 240: ADCON2bits.ADCS0 = 0 ;
  3132  000BA2  90C0               	bcf	4032,0,c	;volatile
  3133                           
  3134                           ;system.c: 242: ADCON2bits.ADFM = 1 ;
  3135  000BA4  8EC0               	bsf	4032,7,c	;volatile
  3136                           
  3137                           ;system.c: 244: ADCON2bits.ACQT2 = 1;
  3138  000BA6  8AC0               	bsf	4032,5,c	;volatile
  3139                           
  3140                           ;system.c: 245: ADCON2bits.ACQT1 = 1;
  3141  000BA8  88C0               	bsf	4032,4,c	;volatile
  3142                           
  3143                           ;system.c: 246: ADCON2bits.ACQT0 = 0;
  3144  000BAA  96C0               	bcf	4032,3,c	;volatile
  3145                           
  3146                           ;system.c: 257: ADCON0bits.ADON = 1 ;
  3147  000BAC  80C2               	bsf	4034,0,c	;volatile
  3148  000BAE  0012               	return		;funcret
  3149  000BB0                     __end_of_InitializeAD:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           prodh	equ	0xFF4
  3153                           prodl	equ	0xFF3
  3154                           intcon	equ	0xFF2
  3155                           intcon2	equ	0xFF1
  3156                           postinc0	equ	0xFEE
  3157                           wreg	equ	0xFE8
  3158                           postinc1	equ	0xFE6
  3159                           postdec1	equ	0xFE5
  3160                           fsr1h	equ	0xFE2
  3161                           fsr1l	equ	0xFE1
  3162                           postinc2	equ	0xFDE
  3163                           postdec2	equ	0xFDD
  3164                           fsr2h	equ	0xFDA
  3165                           fsr2l	equ	0xFD9
  3166                           status	equ	0xFD8
  3167                           
  3168 ;; *************** function _GetAdcChargBatValue *****************
  3169 ;; Defined at:
  3170 ;;		line 542 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  channelNumbe    1    wreg     unsigned char 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  3175 ;;  temp            2   36[COMRAM] unsigned short 
  3176 ;;  i               1   38[COMRAM] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  2   31[COMRAM] unsigned short 
  3179 ;; Registers used:
  3180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3186 ;;      Params:         2       0       0       0
  3187 ;;      Locals:         4       0       0       0
  3188 ;;      Temps:          2       0       0       0
  3189 ;;      Totals:         8       0       0       0
  3190 ;;Total ram usage:        8 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    3
  3193 ;; This function calls:
  3194 ;;		_AD_Converter
  3195 ;;		___lwdiv
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text17
  3202  000722                     __ptext17:
  3203                           	opt stack 0
  3204  000722                     _GetAdcChargBatValue:
  3205                           	opt stack 27
  3206                           
  3207                           ;incstack = 0
  3208                           ;GetAdcChargBatValue@channelNumber stored from wreg
  3209  000722  6E24               	movwf	GetAdcChargBatValue@channelNumber,c
  3210                           
  3211                           ;system.c: 544: uint8 i;
  3212                           ;system.c: 545: uint16 temp = 0 ;
  3213  000724  0E00               	movlw	0
  3214  000726  6E26               	movwf	GetAdcChargBatValue@temp+1,c
  3215  000728  0E00               	movlw	0
  3216  00072A  6E25               	movwf	GetAdcChargBatValue@temp,c
  3217                           
  3218                           ;system.c: 546: for ( i=0; i< ( 10-1) ;i++)
  3219  00072C  0E00               	movlw	0
  3220  00072E  6E27               	movwf	GetAdcChargBatValue@i,c
  3221  000730                     l2566:
  3222  000730  0E08               	movlw	8
  3223  000732  6427               	cpfsgt	GetAdcChargBatValue@i,c
  3224  000734  D001               	goto	l2570
  3225  000736  D01E               	goto	l2576
  3226  000738                     l2570:
  3227                           
  3228                           ;system.c: 547: {
  3229                           ;system.c: 548: adcChargeStatValue[i] = adcChargeStatValue[i+1] ;
  3230  000738  5027               	movf	GetAdcChargBatValue@i,w,c
  3231  00073A  6E22               	movwf	??_GetAdcChargBatValue& (0+255),c
  3232  00073C  6A23               	clrf	(??_GetAdcChargBatValue+1)& (0+255),c
  3233  00073E  90D8               	bcf	status,0,c
  3234  000740  3622               	rlcf	??_GetAdcChargBatValue,f,c
  3235  000742  3623               	rlcf	??_GetAdcChargBatValue+1,f,c
  3236  000744  0E02               	movlw	2
  3237  000746  2622               	addwf	??_GetAdcChargBatValue,f,c
  3238  000748  0E00               	movlw	0
  3239  00074A  2223               	addwfc	??_GetAdcChargBatValue+1,f,c
  3240  00074C  0E94               	movlw	low _adcChargeStatValue
  3241  00074E  2422               	addwf	??_GetAdcChargBatValue,w,c
  3242  000750  6ED9               	movwf	fsr2l,c
  3243  000752  0E00               	movlw	high _adcChargeStatValue
  3244  000754  2023               	addwfc	??_GetAdcChargBatValue+1,w,c
  3245  000756  6EDA               	movwf	fsr2h,c
  3246  000758  5027               	movf	GetAdcChargBatValue@i,w,c
  3247  00075A  0D02               	mullw	2
  3248  00075C  0E94               	movlw	low _adcChargeStatValue
  3249  00075E  24F3               	addwf	prodl,w,c
  3250  000760  6EE1               	movwf	fsr1l,c
  3251  000762  0E00               	movlw	high _adcChargeStatValue
  3252  000764  20F4               	addwfc	prodh,w,c
  3253  000766  6EE2               	movwf	fsr1h,c
  3254  000768  CFDE FFE6          	movff	postinc2,postinc1
  3255  00076C  CFDD FFE5          	movff	postdec2,postdec1
  3256  000770  2A27               	incf	GetAdcChargBatValue@i,f,c
  3257  000772  D7DE               	goto	l2566
  3258  000774                     l2576:
  3259                           
  3260                           ;system.c: 549: }
  3261                           ;system.c: 551: adcChargeStatValue[10-1] = AD_Converter( channelNumber ) ;
  3262  000774  5024               	movf	GetAdcChargBatValue@channelNumber,w,c
  3263  000776  EC50  F005         	call	_AD_Converter
  3264  00077A  C019  F0A6         	movff	?_AD_Converter,_adcChargeStatValue+18
  3265  00077E  C01A  F0A7         	movff	?_AD_Converter+1,_adcChargeStatValue+19
  3266                           
  3267                           ;system.c: 553: for ( i=0 ;i<10 ;i++)
  3268  000782  0E00               	movlw	0
  3269  000784  6E27               	movwf	GetAdcChargBatValue@i,c
  3270  000786                     l2580:
  3271  000786  0E09               	movlw	9
  3272  000788  6427               	cpfsgt	GetAdcChargBatValue@i,c
  3273  00078A  D001               	goto	l2584
  3274  00078C  D014               	goto	l2590
  3275  00078E                     l2584:
  3276                           
  3277                           ;system.c: 554: {
  3278                           ;system.c: 555: temp = temp + adcChargeStatValue[i] ;
  3279  00078E  5027               	movf	GetAdcChargBatValue@i,w,c
  3280  000790  0D02               	mullw	2
  3281  000792  0E94               	movlw	low _adcChargeStatValue
  3282  000794  24F3               	addwf	prodl,w,c
  3283  000796  6ED9               	movwf	fsr2l,c
  3284  000798  0E00               	movlw	high _adcChargeStatValue
  3285  00079A  20F4               	addwfc	prodh,w,c
  3286  00079C  6EDA               	movwf	fsr2h,c
  3287  00079E  CFDE F022          	movff	postinc2,??_GetAdcChargBatValue
  3288  0007A2  CFDD F023          	movff	postdec2,??_GetAdcChargBatValue+1
  3289  0007A6  5025               	movf	GetAdcChargBatValue@temp,w,c
  3290  0007A8  2422               	addwf	??_GetAdcChargBatValue,w,c
  3291  0007AA  6E25               	movwf	GetAdcChargBatValue@temp,c
  3292  0007AC  5026               	movf	GetAdcChargBatValue@temp+1,w,c
  3293  0007AE  2023               	addwfc	??_GetAdcChargBatValue+1,w,c
  3294  0007B0  6E26               	movwf	GetAdcChargBatValue@temp+1,c
  3295  0007B2  2A27               	incf	GetAdcChargBatValue@i,f,c
  3296  0007B4  D7E8               	goto	l2580
  3297  0007B6                     l2590:
  3298                           
  3299                           ;system.c: 556: }
  3300                           ;system.c: 558: return ( temp/10 );
  3301  0007B6  C025  F017         	movff	GetAdcChargBatValue@temp,___lwdiv@dividend
  3302  0007BA  C026  F018         	movff	GetAdcChargBatValue@temp+1,___lwdiv@dividend+1
  3303  0007BE  0E00               	movlw	0
  3304  0007C0  6E1A               	movwf	___lwdiv@divisor+1,c
  3305  0007C2  0E0A               	movlw	10
  3306  0007C4  6E19               	movwf	___lwdiv@divisor,c
  3307  0007C6  ECE1  F004         	call	___lwdiv	;wreg free
  3308  0007CA  C017  F020         	movff	?___lwdiv,?_GetAdcChargBatValue
  3309  0007CE  C018  F021         	movff	?___lwdiv+1,?_GetAdcChargBatValue+1
  3310  0007D2  0012               	return	
  3311  0007D4                     __end_of_GetAdcChargBatValue:
  3312                           	opt stack 0
  3313                           tblptru	equ	0xFF8
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           intcon	equ	0xFF2
  3317                           intcon2	equ	0xFF1
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           postinc1	equ	0xFE6
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           postinc2	equ	0xFDE
  3325                           postdec2	equ	0xFDD
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function _GetAdcBatValue *****************
  3331 ;; Defined at:
  3332 ;;		line 477 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  channelNumbe    1    wreg     unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  channelNumbe    1   35[COMRAM] unsigned char 
  3337 ;;  temp            2   36[COMRAM] unsigned short 
  3338 ;;  i               1   38[COMRAM] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  2   31[COMRAM] unsigned short 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3348 ;;      Params:         2       0       0       0
  3349 ;;      Locals:         4       0       0       0
  3350 ;;      Temps:          2       0       0       0
  3351 ;;      Totals:         8       0       0       0
  3352 ;;Total ram usage:        8 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    3
  3355 ;; This function calls:
  3356 ;;		_AD_Converter
  3357 ;;		___lwdiv
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text18
  3364  0007D4                     __ptext18:
  3365                           	opt stack 0
  3366  0007D4                     _GetAdcBatValue:
  3367                           	opt stack 27
  3368                           
  3369                           ;incstack = 0
  3370                           ;GetAdcBatValue@channelNumber stored from wreg
  3371  0007D4  6E24               	movwf	GetAdcBatValue@channelNumber,c
  3372                           
  3373                           ;system.c: 479: uint8 i;
  3374                           ;system.c: 480: uint16 temp = 0 ;
  3375  0007D6  0E00               	movlw	0
  3376  0007D8  6E26               	movwf	GetAdcBatValue@temp+1,c
  3377  0007DA  0E00               	movlw	0
  3378  0007DC  6E25               	movwf	GetAdcBatValue@temp,c
  3379                           
  3380                           ;system.c: 481: for ( i=0; i< ( 10-1) ;i++)
  3381  0007DE  0E00               	movlw	0
  3382  0007E0  6E27               	movwf	GetAdcBatValue@i,c
  3383  0007E2                     l2396:
  3384  0007E2  0E08               	movlw	8
  3385  0007E4  6427               	cpfsgt	GetAdcBatValue@i,c
  3386  0007E6  D001               	goto	l2400
  3387  0007E8  D01E               	goto	l2406
  3388  0007EA                     l2400:
  3389                           
  3390                           ;system.c: 482: {
  3391                           ;system.c: 483: adcBatValue[i] = adcBatValue[i+1] ;
  3392  0007EA  5027               	movf	GetAdcBatValue@i,w,c
  3393  0007EC  6E22               	movwf	??_GetAdcBatValue& (0+255),c
  3394  0007EE  6A23               	clrf	(??_GetAdcBatValue+1)& (0+255),c
  3395  0007F0  90D8               	bcf	status,0,c
  3396  0007F2  3622               	rlcf	??_GetAdcBatValue,f,c
  3397  0007F4  3623               	rlcf	??_GetAdcBatValue+1,f,c
  3398  0007F6  0E02               	movlw	2
  3399  0007F8  2622               	addwf	??_GetAdcBatValue,f,c
  3400  0007FA  0E00               	movlw	0
  3401  0007FC  2223               	addwfc	??_GetAdcBatValue+1,f,c
  3402  0007FE  0E39               	movlw	low _adcBatValue
  3403  000800  2422               	addwf	??_GetAdcBatValue,w,c
  3404  000802  6ED9               	movwf	fsr2l,c
  3405  000804  0E00               	movlw	high _adcBatValue
  3406  000806  2023               	addwfc	??_GetAdcBatValue+1,w,c
  3407  000808  6EDA               	movwf	fsr2h,c
  3408  00080A  5027               	movf	GetAdcBatValue@i,w,c
  3409  00080C  0D02               	mullw	2
  3410  00080E  0E39               	movlw	low _adcBatValue
  3411  000810  24F3               	addwf	prodl,w,c
  3412  000812  6EE1               	movwf	fsr1l,c
  3413  000814  0E00               	movlw	high _adcBatValue
  3414  000816  20F4               	addwfc	prodh,w,c
  3415  000818  6EE2               	movwf	fsr1h,c
  3416  00081A  CFDE FFE6          	movff	postinc2,postinc1
  3417  00081E  CFDD FFE5          	movff	postdec2,postdec1
  3418  000822  2A27               	incf	GetAdcBatValue@i,f,c
  3419  000824  D7DE               	goto	l2396
  3420  000826                     l2406:
  3421                           
  3422                           ;system.c: 484: }
  3423                           ;system.c: 486: adcBatValue[10-1] = AD_Converter( channelNumber ) ;
  3424  000826  5024               	movf	GetAdcBatValue@channelNumber,w,c
  3425  000828  EC50  F005         	call	_AD_Converter
  3426  00082C  C019  F04B         	movff	?_AD_Converter,_adcBatValue+18
  3427  000830  C01A  F04C         	movff	?_AD_Converter+1,_adcBatValue+19
  3428                           
  3429                           ;system.c: 488: for ( i=0 ;i<10 ;i++)
  3430  000834  0E00               	movlw	0
  3431  000836  6E27               	movwf	GetAdcBatValue@i,c
  3432  000838                     l2410:
  3433  000838  0E09               	movlw	9
  3434  00083A  6427               	cpfsgt	GetAdcBatValue@i,c
  3435  00083C  D001               	goto	l2414
  3436  00083E  D014               	goto	l2420
  3437  000840                     l2414:
  3438                           
  3439                           ;system.c: 489: {
  3440                           ;system.c: 490: temp = temp + adcBatValue[i] ;
  3441  000840  5027               	movf	GetAdcBatValue@i,w,c
  3442  000842  0D02               	mullw	2
  3443  000844  0E39               	movlw	low _adcBatValue
  3444  000846  24F3               	addwf	prodl,w,c
  3445  000848  6ED9               	movwf	fsr2l,c
  3446  00084A  0E00               	movlw	high _adcBatValue
  3447  00084C  20F4               	addwfc	prodh,w,c
  3448  00084E  6EDA               	movwf	fsr2h,c
  3449  000850  CFDE F022          	movff	postinc2,??_GetAdcBatValue
  3450  000854  CFDD F023          	movff	postdec2,??_GetAdcBatValue+1
  3451  000858  5025               	movf	GetAdcBatValue@temp,w,c
  3452  00085A  2422               	addwf	??_GetAdcBatValue,w,c
  3453  00085C  6E25               	movwf	GetAdcBatValue@temp,c
  3454  00085E  5026               	movf	GetAdcBatValue@temp+1,w,c
  3455  000860  2023               	addwfc	??_GetAdcBatValue+1,w,c
  3456  000862  6E26               	movwf	GetAdcBatValue@temp+1,c
  3457  000864  2A27               	incf	GetAdcBatValue@i,f,c
  3458  000866  D7E8               	goto	l2410
  3459  000868                     l2420:
  3460                           
  3461                           ;system.c: 491: }
  3462                           ;system.c: 493: return ( temp/10 );
  3463  000868  C025  F017         	movff	GetAdcBatValue@temp,___lwdiv@dividend
  3464  00086C  C026  F018         	movff	GetAdcBatValue@temp+1,___lwdiv@dividend+1
  3465  000870  0E00               	movlw	0
  3466  000872  6E1A               	movwf	___lwdiv@divisor+1,c
  3467  000874  0E0A               	movlw	10
  3468  000876  6E19               	movwf	___lwdiv@divisor,c
  3469  000878  ECE1  F004         	call	___lwdiv	;wreg free
  3470  00087C  C017  F020         	movff	?___lwdiv,?_GetAdcBatValue
  3471  000880  C018  F021         	movff	?___lwdiv+1,?_GetAdcBatValue+1
  3472  000884  0012               	return	
  3473  000886                     __end_of_GetAdcBatValue:
  3474                           	opt stack 0
  3475                           tblptru	equ	0xFF8
  3476                           prodh	equ	0xFF4
  3477                           prodl	equ	0xFF3
  3478                           intcon	equ	0xFF2
  3479                           intcon2	equ	0xFF1
  3480                           postinc0	equ	0xFEE
  3481                           wreg	equ	0xFE8
  3482                           postinc1	equ	0xFE6
  3483                           postdec1	equ	0xFE5
  3484                           fsr1h	equ	0xFE2
  3485                           fsr1l	equ	0xFE1
  3486                           postinc2	equ	0xFDE
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function ___lwdiv *****************
  3493 ;; Defined at:
  3494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  dividend        2   22[COMRAM] unsigned int 
  3497 ;;  divisor         2   24[COMRAM] unsigned int 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  quotient        2   27[COMRAM] unsigned int 
  3500 ;;  counter         1   26[COMRAM] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  2   22[COMRAM] unsigned int 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3510 ;;      Params:         4       0       0       0
  3511 ;;      Locals:         3       0       0       0
  3512 ;;      Temps:          0       0       0       0
  3513 ;;      Totals:         7       0       0       0
  3514 ;;Total ram usage:        7 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    1
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_GetAdcBatValue
  3521 ;;		_GetAdcAD597Value
  3522 ;;		_GetAdcChargBatValue
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text19
  3527  0009C2                     __ptext19:
  3528                           	opt stack 0
  3529  0009C2                     ___lwdiv:
  3530                           	opt stack 27
  3531                           
  3532                           ;incstack = 0
  3533  0009C2  0E00               	movlw	0
  3534  0009C4  6E1D               	movwf	___lwdiv@quotient+1,c
  3535  0009C6  0E00               	movlw	0
  3536  0009C8  6E1C               	movwf	___lwdiv@quotient,c
  3537  0009CA  5019               	movf	___lwdiv@divisor,w,c
  3538  0009CC  101A               	iorwf	___lwdiv@divisor+1,w,c
  3539  0009CE  B4D8               	btfsc	status,2,c
  3540  0009D0  D01C               	goto	l883
  3541  0009D2  0E01               	movlw	1
  3542  0009D4  6E1B               	movwf	___lwdiv@counter,c
  3543  0009D6  D004               	goto	l2246
  3544  0009D8                     l2244:
  3545  0009D8  90D8               	bcf	status,0,c
  3546  0009DA  3619               	rlcf	___lwdiv@divisor,f,c
  3547  0009DC  361A               	rlcf	___lwdiv@divisor+1,f,c
  3548  0009DE  2A1B               	incf	___lwdiv@counter,f,c
  3549  0009E0                     l2246:
  3550  0009E0  AE1A               	btfss	___lwdiv@divisor+1,7,c
  3551  0009E2  D7FA               	goto	l2244
  3552  0009E4                     l2248:
  3553  0009E4  90D8               	bcf	status,0,c
  3554  0009E6  361C               	rlcf	___lwdiv@quotient,f,c
  3555  0009E8  361D               	rlcf	___lwdiv@quotient+1,f,c
  3556  0009EA  5019               	movf	___lwdiv@divisor,w,c
  3557  0009EC  5C17               	subwf	___lwdiv@dividend,w,c
  3558  0009EE  501A               	movf	___lwdiv@divisor+1,w,c
  3559  0009F0  5818               	subwfb	___lwdiv@dividend+1,w,c
  3560  0009F2  A0D8               	btfss	status,0,c
  3561  0009F4  D005               	goto	l2256
  3562  0009F6  5019               	movf	___lwdiv@divisor,w,c
  3563  0009F8  5E17               	subwf	___lwdiv@dividend,f,c
  3564  0009FA  501A               	movf	___lwdiv@divisor+1,w,c
  3565  0009FC  5A18               	subwfb	___lwdiv@dividend+1,f,c
  3566  0009FE  801C               	bsf	___lwdiv@quotient,0,c
  3567  000A00                     l2256:
  3568  000A00  90D8               	bcf	status,0,c
  3569  000A02  321A               	rrcf	___lwdiv@divisor+1,f,c
  3570  000A04  3219               	rrcf	___lwdiv@divisor,f,c
  3571  000A06  2E1B               	decfsz	___lwdiv@counter,f,c
  3572  000A08  D7ED               	goto	l2248
  3573  000A0A                     l883:
  3574  000A0A  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
  3575  000A0E  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3576  000A12  0012               	return		;funcret
  3577  000A14                     __end_of___lwdiv:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           prodh	equ	0xFF4
  3581                           prodl	equ	0xFF3
  3582                           intcon	equ	0xFF2
  3583                           intcon2	equ	0xFF1
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           postinc1	equ	0xFE6
  3587                           postdec1	equ	0xFE5
  3588                           fsr1h	equ	0xFE2
  3589                           fsr1l	equ	0xFE1
  3590                           postinc2	equ	0xFDE
  3591                           postdec2	equ	0xFDD
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function _AD_Converter *****************
  3597 ;; Defined at:
  3598 ;;		line 268 in file "WAFR-01-C001 HD-debug.X/sys/system.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  channelNumbe    1    wreg     char 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  channelNumbe    1   28[COMRAM] char 
  3603 ;;  AD_Result       2   29[COMRAM] unsigned short 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  2   24[COMRAM] unsigned short 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3613 ;;      Params:         2       0       0       0
  3614 ;;      Locals:         3       0       0       0
  3615 ;;      Temps:          2       0       0       0
  3616 ;;      Totals:         7       0       0       0
  3617 ;;Total ram usage:        7 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    2
  3620 ;; This function calls:
  3621 ;;		_delay_10us
  3622 ;; This function is called by:
  3623 ;;		_GetAdcBatValue
  3624 ;;		_GetAdcAD597Value
  3625 ;;		_GetAdcChargBatValue
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text20
  3630  000AA0                     __ptext20:
  3631                           	opt stack 0
  3632  000AA0                     _AD_Converter:
  3633                           	opt stack 26
  3634                           
  3635                           ;incstack = 0
  3636                           ;AD_Converter@channelNumber stored from wreg
  3637  000AA0  6E1D               	movwf	AD_Converter@channelNumber,c
  3638                           
  3639                           ;system.c: 270: uint16 AD_Result ;
  3640                           ;system.c: 280: ADCON0 = ((channelNumber & 0x07) << 2) | 0x01;
  3641  000AA2  C01D  F01B         	movff	AD_Converter@channelNumber,??_AD_Converter
  3642  000AA6  0E07               	movlw	7
  3643  000AA8  161B               	andwf	??_AD_Converter,f,c
  3644  000AAA  90D8               	bcf	status,0,c
  3645  000AAC  361B               	rlcf	??_AD_Converter,f,c
  3646  000AAE  90D8               	bcf	status,0,c
  3647  000AB0  341B               	rlcf	??_AD_Converter,w,c
  3648  000AB2  0901               	iorlw	1
  3649  000AB4  6EC2               	movwf	4034,c	;volatile
  3650                           
  3651                           ;system.c: 285: delay_10us() ;
  3652  000AB6  ECD8  F005         	call	_delay_10us	;wreg free
  3653                           
  3654                           ;system.c: 286: delay_10us() ;
  3655  000ABA  ECD8  F005         	call	_delay_10us	;wreg free
  3656                           
  3657                           ;system.c: 288: ADCON0bits.GO = 1;
  3658  000ABE  82C2               	bsf	4034,1,c	;volatile
  3659  000AC0                     l232:
  3660  000AC0  B2C2               	btfsc	4034,1,c	;volatile
  3661  000AC2  D7FE               	goto	l232
  3662                           
  3663                           ;system.c: 292: PIR1bits.ADIF = 0 ;
  3664  000AC4  9C9E               	bcf	3998,6,c	;volatile
  3665                           
  3666                           ;system.c: 294: AD_Result =( ADRESH << 8 ) | ADRESL ;
  3667  000AC6  50C3               	movf	4035,w,c	;volatile
  3668  000AC8  CFC4 F01B          	movff	4036,??_AD_Converter	;volatile
  3669  000ACC  6A1C               	clrf	(??_AD_Converter+1)& (0+255),c
  3670  000ACE  C01B  F01C         	movff	??_AD_Converter,??_AD_Converter+1
  3671  000AD2  6A1B               	clrf	??_AD_Converter,c
  3672  000AD4  101B               	iorwf	??_AD_Converter,w,c
  3673  000AD6  6E1E               	movwf	AD_Converter@AD_Result,c
  3674  000AD8  501C               	movf	??_AD_Converter+1,w,c
  3675  000ADA  6E1F               	movwf	AD_Converter@AD_Result+1,c
  3676                           
  3677                           ;system.c: 296: return (AD_Result);
  3678  000ADC  C01E  F019         	movff	AD_Converter@AD_Result,?_AD_Converter
  3679  000AE0  C01F  F01A         	movff	AD_Converter@AD_Result+1,?_AD_Converter+1
  3680  000AE4  0012               	return	
  3681  000AE6                     __end_of_AD_Converter:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           prodh	equ	0xFF4
  3685                           prodl	equ	0xFF3
  3686                           intcon	equ	0xFF2
  3687                           intcon2	equ	0xFF1
  3688                           postinc0	equ	0xFEE
  3689                           wreg	equ	0xFE8
  3690                           postinc1	equ	0xFE6
  3691                           postdec1	equ	0xFE5
  3692                           fsr1h	equ	0xFE2
  3693                           fsr1l	equ	0xFE1
  3694                           postinc2	equ	0xFDE
  3695                           postdec2	equ	0xFDD
  3696                           fsr2h	equ	0xFDA
  3697                           fsr2l	equ	0xFD9
  3698                           status	equ	0xFD8
  3699                           
  3700 ;; *************** function _delay_10us *****************
  3701 ;; Defined at:
  3702 ;;		line 54 in file "WAFR-01-C001 HD-debug.X/user/user.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  i               2   22[COMRAM] unsigned int 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;		None               void
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3716 ;;      Params:         0       0       0       0
  3717 ;;      Locals:         2       0       0       0
  3718 ;;      Temps:          0       0       0       0
  3719 ;;      Totals:         2       0       0       0
  3720 ;;Total ram usage:        2 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    1
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_AD_Converter
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text21
  3731  000BB0                     __ptext21:
  3732                           	opt stack 0
  3733  000BB0                     _delay_10us:
  3734                           	opt stack 26
  3735                           
  3736                           ;user.c: 56: unsigned int i;
  3737                           ;user.c: 57: for (i=0; i<4; i++);
  3738                           
  3739                           ;incstack = 0
  3740  000BB0  0E00               	movlw	0
  3741  000BB2  6E18               	movwf	delay_10us@i+1,c
  3742  000BB4  0E00               	movlw	0
  3743  000BB6  6E17               	movwf	delay_10us@i,c
  3744  000BB8                     l2212:
  3745  000BB8  5018               	movf	delay_10us@i+1,w,c
  3746  000BBA  E107               	bnz	l135
  3747  000BBC  0E04               	movlw	4
  3748  000BBE  5C17               	subwf	delay_10us@i,w,c
  3749  000BC0  B0D8               	btfsc	status,0,c
  3750  000BC2  0012               	return	
  3751  000BC4  4A17               	infsnz	delay_10us@i,f,c
  3752  000BC6  2A18               	incf	delay_10us@i+1,f,c
  3753  000BC8  D7F7               	goto	l2212
  3754  000BCA                     l135:
  3755  000BCA  0012               	return		;funcret
  3756  000BCC                     __end_of_delay_10us:
  3757                           	opt stack 0
  3758                           tblptru	equ	0xFF8
  3759                           prodh	equ	0xFF4
  3760                           prodl	equ	0xFF3
  3761                           intcon	equ	0xFF2
  3762                           intcon2	equ	0xFF1
  3763                           postinc0	equ	0xFEE
  3764                           wreg	equ	0xFE8
  3765                           postinc1	equ	0xFE6
  3766                           postdec1	equ	0xFE5
  3767                           fsr1h	equ	0xFE2
  3768                           fsr1l	equ	0xFE1
  3769                           postinc2	equ	0xFDE
  3770                           postdec2	equ	0xFDD
  3771                           fsr2h	equ	0xFDA
  3772                           fsr2l	equ	0xFD9
  3773                           status	equ	0xFD8
  3774                           
  3775 ;; *************** function _ISR *****************
  3776 ;; Defined at:
  3777 ;;		line 22 in file "WAFR-01-C001 HD-debug.X/interrupts/interrupts.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3791 ;;      Params:         0       0       0       0
  3792 ;;      Locals:         0       0       0       0
  3793 ;;      Temps:         22       0       0       0
  3794 ;;      Totals:        22       0       0       0
  3795 ;;Total ram usage:       22 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		Interrupt level 2
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	intcode
  3805  000008                     __pintcode:
  3806                           	opt stack 0
  3807  000008                     _ISR:
  3808                           	opt stack 26
  3809                           
  3810                           ;incstack = 0
  3811  000008  8265               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3812  00000A  CFFA F009          	movff	pclath,??_ISR+8
  3813  00000E  CFFB F00A          	movff	pclatu,??_ISR+9
  3814  000012  ED9F  F002         	call	int_func,f	;refresh shadow registers
  3815                           pclatu	equ	0xFFB
  3816                           pclath	equ	0xFFA
  3817                           tblptru	equ	0xFF8
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           intcon	equ	0xFF2
  3821                           intcon2	equ	0xFF1
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           postinc1	equ	0xFE6
  3825                           postdec1	equ	0xFE5
  3826                           fsr1h	equ	0xFE2
  3827                           fsr1l	equ	0xFE1
  3828                           postinc2	equ	0xFDE
  3829                           postdec2	equ	0xFDD
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8
  3833                           
  3834                           	psect	intcode_body
  3835  00053E                     __pintcode_body:
  3836                           	opt stack 26
  3837  00053E                     int_func:
  3838                           	opt stack 26
  3839  00053E  0006               	pop		; remove dummy address from shadow register refresh
  3840  000540  CFE9 F00B          	movff	fsr0l,??_ISR+10
  3841  000544  CFEA F00C          	movff	fsr0h,??_ISR+11
  3842  000548  CFE1 F00D          	movff	fsr1l,??_ISR+12
  3843  00054C  CFE2 F00E          	movff	fsr1h,??_ISR+13
  3844  000550  CFD9 F00F          	movff	fsr2l,??_ISR+14
  3845  000554  CFDA F010          	movff	fsr2h,??_ISR+15
  3846  000558  CFF3 F011          	movff	prodl,??_ISR+16
  3847  00055C  CFF4 F012          	movff	prodh,??_ISR+17
  3848  000560  CFF6 F013          	movff	tblptrl,??_ISR+18
  3849  000564  CFF7 F014          	movff	tblptrh,??_ISR+19
  3850  000568  CFF8 F015          	movff	tblptru,??_ISR+20
  3851  00056C  CFF5 F016          	movff	tablat,??_ISR+21
  3852                           
  3853                           ;interrupts.c: 26: if ( INTCONbits.TMR0IE && INTCONbits.TMR0IF)
  3854  000570  BAF2               	btfsc	intcon,5,c	;volatile
  3855  000572  A4F2               	btfss	intcon,2,c	;volatile
  3856  000574  D014               	goto	i2l1644
  3857                           
  3858                           ;interrupts.c: 27: {
  3859                           ;interrupts.c: 28: INTCONbits.TMR0IF = 0;
  3860  000576  94F2               	bcf	intcon,2,c	;volatile
  3861                           
  3862                           ;interrupts.c: 29: timer0Count++ ;
  3863  000578  2A63               	incf	_timer0Count,f,c
  3864                           
  3865                           ;interrupts.c: 30: timeSystemRun++ ;
  3866  00057A  0E01               	movlw	1
  3867  00057C  2659               	addwf	_timeSystemRun,f,c
  3868  00057E  0E00               	movlw	0
  3869  000580  225A               	addwfc	_timeSystemRun+1,f,c
  3870  000582  225B               	addwfc	_timeSystemRun+2,f,c
  3871  000584  225C               	addwfc	_timeSystemRun+3,f,c
  3872                           
  3873                           ;interrupts.c: 32: if (timer0Count == 50)
  3874  000586  0E32               	movlw	50
  3875  000588  1863               	xorwf	_timer0Count,w,c
  3876  00058A  A4D8               	btfss	status,2,c
  3877  00058C  D004               	goto	i2l1640
  3878                           
  3879                           ;interrupts.c: 33: {
  3880                           ;interrupts.c: 34: timer0Count = 0 ;
  3881  00058E  0E00               	movlw	0
  3882  000590  6E63               	movwf	_timer0Count,c
  3883                           
  3884                           ;interrupts.c: 35: timerHalfSecond ++ ;
  3885  000592  4A5D               	infsnz	_timerHalfSecond,f,c
  3886  000594  2A5E               	incf	_timerHalfSecond+1,f,c
  3887  000596                     i2l1640:
  3888                           
  3889                           ;interrupts.c: 36: }
  3890                           ;interrupts.c: 38: TMR0H = (65536-40000)/256;
  3891  000596  0E63               	movlw	99
  3892  000598  6ED7               	movwf	4055,c	;volatile
  3893                           
  3894                           ;interrupts.c: 39: TMR0L = (65536-40000)%256 ;
  3895  00059A  0EC0               	movlw	192
  3896  00059C  6ED6               	movwf	4054,c	;volatile
  3897  00059E                     i2l1644:
  3898                           
  3899                           ;interrupts.c: 40: }
  3900                           ;interrupts.c: 44: if ( INTCONbits.INT0IF && INTCONbits.INT0IE )
  3901  00059E  B2F2               	btfsc	intcon,1,c	;volatile
  3902  0005A0  A8F2               	btfss	intcon,4,c	;volatile
  3903  0005A2  D043               	goto	i2l333
  3904                           
  3905                           ;interrupts.c: 45: {
  3906                           ;interrupts.c: 46: INTCONbits.INT0IF = 0 ;
  3907  0005A4  92F2               	bcf	intcon,1,c	;volatile
  3908                           
  3909                           ;interrupts.c: 49: if ( (timeSystemRun - pushButtonJitterTime) < 2 ){
  3910  0005A6  C055  F001         	movff	_pushButtonJitterTime,??_ISR
  3911  0005AA  C056  F002         	movff	_pushButtonJitterTime+1,??_ISR+1
  3912  0005AE  C057  F003         	movff	_pushButtonJitterTime+2,??_ISR+2
  3913  0005B2  C058  F004         	movff	_pushButtonJitterTime+3,??_ISR+3
  3914  0005B6  1E01               	comf	??_ISR,f,c
  3915  0005B8  1E02               	comf	??_ISR+1,f,c
  3916  0005BA  1E03               	comf	??_ISR+2,f,c
  3917  0005BC  1E04               	comf	??_ISR+3,f,c
  3918  0005BE  2A01               	incf	??_ISR,f,c
  3919  0005C0  0E00               	movlw	0
  3920  0005C2  2202               	addwfc	??_ISR+1,f,c
  3921  0005C4  2203               	addwfc	??_ISR+2,f,c
  3922  0005C6  2204               	addwfc	??_ISR+3,f,c
  3923  0005C8  5059               	movf	_timeSystemRun,w,c
  3924  0005CA  2401               	addwf	??_ISR,w,c
  3925  0005CC  6E05               	movwf	(??_ISR+4)& (0+255),c
  3926  0005CE  505A               	movf	_timeSystemRun+1,w,c
  3927  0005D0  2002               	addwfc	??_ISR+1,w,c
  3928  0005D2  6E06               	movwf	(??_ISR+5)& (0+255),c
  3929  0005D4  505B               	movf	_timeSystemRun+2,w,c
  3930  0005D6  2003               	addwfc	??_ISR+2,w,c
  3931  0005D8  6E07               	movwf	(??_ISR+6)& (0+255),c
  3932  0005DA  505C               	movf	_timeSystemRun+3,w,c
  3933  0005DC  2004               	addwfc	??_ISR+3,w,c
  3934  0005DE  6E08               	movwf	(??_ISR+7)& (0+255),c
  3935  0005E0  5008               	movf	??_ISR+7,w,c
  3936  0005E2  1007               	iorwf	??_ISR+6,w,c
  3937  0005E4  1006               	iorwf	??_ISR+5,w,c
  3938  0005E6  E104               	bnz	i2l329
  3939  0005E8  0E02               	movlw	2
  3940  0005EA  5C05               	subwf	??_ISR+4,w,c
  3941  0005EC  A0D8               	btfss	status,0,c
  3942  0005EE  D01D               	goto	i2l333
  3943  0005F0                     i2l329:
  3944                           
  3945                           ;interrupts.c: 52: if ( !PORTBbits.RB0 )
  3946  0005F0  B081               	btfsc	3969,0,c	;volatile
  3947  0005F2  D006               	goto	i2l331
  3948                           
  3949                           ;interrupts.c: 53: {
  3950                           ;interrupts.c: 54: INTCON2bits.INTEDG0 = 1 ;
  3951  0005F4  8CF1               	bsf	intcon2,6,c	;volatile
  3952                           
  3953                           ;interrupts.c: 56: timerHalfSecond = 0 ;
  3954  0005F6  0E00               	movlw	0
  3955  0005F8  6E5E               	movwf	_timerHalfSecond+1,c
  3956  0005FA  0E00               	movlw	0
  3957  0005FC  6E5D               	movwf	_timerHalfSecond,c
  3958                           
  3959                           ;interrupts.c: 57: }else
  3960  0005FE  D00D               	goto	i2l1662
  3961  000600                     i2l331:
  3962                           
  3963                           ;interrupts.c: 58: {
  3964                           ;interrupts.c: 59: INTCON2bits.INTEDG0 = 0 ;
  3965  000600  9CF1               	bcf	intcon2,6,c	;volatile
  3966                           
  3967                           ;interrupts.c: 61: S2KeyPushTime = timerHalfSecond;
  3968  000602  C05D  F05F         	movff	_timerHalfSecond,_S2KeyPushTime
  3969                           
  3970                           ;interrupts.c: 62: flagS2KeyPushed = 1 ;
  3971  000606  0E01               	movlw	1
  3972  000608  6E61               	movwf	_flagS2KeyPushed,c
  3973                           
  3974                           ;interrupts.c: 64: buttonPushTimeStop = timeSystemRun ;
  3975  00060A  C059  F051         	movff	_timeSystemRun,_buttonPushTimeStop
  3976  00060E  C05A  F052         	movff	_timeSystemRun+1,_buttonPushTimeStop+1
  3977  000612  C05B  F053         	movff	_timeSystemRun+2,_buttonPushTimeStop+2
  3978  000616  C05C  F054         	movff	_timeSystemRun+3,_buttonPushTimeStop+3
  3979  00061A                     i2l1662:
  3980                           
  3981                           ;interrupts.c: 66: }
  3982                           ;interrupts.c: 67: pushButtonJitterTime = timeSystemRun ;
  3983  00061A  C059  F055         	movff	_timeSystemRun,_pushButtonJitterTime
  3984  00061E  C05A  F056         	movff	_timeSystemRun+1,_pushButtonJitterTime+1
  3985  000622  C05B  F057         	movff	_timeSystemRun+2,_pushButtonJitterTime+2
  3986  000626  C05C  F058         	movff	_timeSystemRun+3,_pushButtonJitterTime+3
  3987  00062A                     i2l333:
  3988  00062A  C016  FFF5         	movff	??_ISR+21,tablat
  3989  00062E  C015  FFF8         	movff	??_ISR+20,tblptru
  3990  000632  C014  FFF7         	movff	??_ISR+19,tblptrh
  3991  000636  C013  FFF6         	movff	??_ISR+18,tblptrl
  3992  00063A  C012  FFF4         	movff	??_ISR+17,prodh
  3993  00063E  C011  FFF3         	movff	??_ISR+16,prodl
  3994  000642  C010  FFDA         	movff	??_ISR+15,fsr2h
  3995  000646  C00F  FFD9         	movff	??_ISR+14,fsr2l
  3996  00064A  C00E  FFE2         	movff	??_ISR+13,fsr1h
  3997  00064E  C00D  FFE1         	movff	??_ISR+12,fsr1l
  3998  000652  C00C  FFEA         	movff	??_ISR+11,fsr0h
  3999  000656  C00B  FFE9         	movff	??_ISR+10,fsr0l
  4000  00065A  C00A  FFFB         	movff	??_ISR+9,pclatu
  4001  00065E  C009  FFFA         	movff	??_ISR+8,pclath
  4002  000662  9265               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4003  000664  0011               	retfie		f
  4004  000666                     __end_of_ISR:
  4005                           	opt stack 0
  4006  0000                     pclatu	equ	0xFFB
  4007                           pclath	equ	0xFFA
  4008                           tblptru	equ	0xFF8
  4009                           tblptrh	equ	0xFF7
  4010                           tblptrl	equ	0xFF6
  4011                           tablat	equ	0xFF5
  4012                           prodh	equ	0xFF4
  4013                           prodl	equ	0xFF3
  4014                           intcon	equ	0xFF2
  4015                           intcon2	equ	0xFF1
  4016                           postinc0	equ	0xFEE
  4017                           fsr0h	equ	0xFEA
  4018                           fsr0l	equ	0xFE9
  4019                           wreg	equ	0xFE8
  4020                           postinc1	equ	0xFE6
  4021                           postdec1	equ	0xFE5
  4022                           fsr1h	equ	0xFE2
  4023                           fsr1l	equ	0xFE1
  4024                           postinc2	equ	0xFDE
  4025                           postdec2	equ	0xFDD
  4026                           fsr2h	equ	0xFDA
  4027                           fsr2l	equ	0xFD9
  4028                           status	equ	0xFD8
  4029                           pclatu	equ	0xFFB
  4030                           pclath	equ	0xFFA
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           intcon	equ	0xFF2
  4038                           intcon2	equ	0xFF1
  4039                           postinc0	equ	0xFEE
  4040                           fsr0h	equ	0xFEA
  4041                           fsr0l	equ	0xFE9
  4042                           wreg	equ	0xFE8
  4043                           postinc1	equ	0xFE6
  4044                           postdec1	equ	0xFE5
  4045                           fsr1h	equ	0xFE2
  4046                           fsr1l	equ	0xFE1
  4047                           postinc2	equ	0xFDE
  4048                           postdec2	equ	0xFDD
  4049                           fsr2h	equ	0xFDA
  4050                           fsr2l	equ	0xFD9
  4051                           status	equ	0xFD8
  4052                           
  4053                           	psect	rparam
  4054  0000                     pclatu	equ	0xFFB
  4055                           pclath	equ	0xFFA
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           prodh	equ	0xFF4
  4061                           prodl	equ	0xFF3
  4062                           intcon	equ	0xFF2
  4063                           intcon2	equ	0xFF1
  4064                           postinc0	equ	0xFEE
  4065                           fsr0h	equ	0xFEA
  4066                           fsr0l	equ	0xFE9
  4067                           wreg	equ	0xFE8
  4068                           postinc1	equ	0xFE6
  4069                           postdec1	equ	0xFE5
  4070                           fsr1h	equ	0xFE2
  4071                           fsr1l	equ	0xFE1
  4072                           postinc2	equ	0xFDE
  4073                           postdec2	equ	0xFDD
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078                           	psect	temp
  4079  000065                     btemp:
  4080                           	opt stack 0
  4081  000065                     	ds	1
  4082  0000                     int$flags	set	btemp
  4083                           pclatu	equ	0xFFB
  4084                           pclath	equ	0xFFA
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           intcon2	equ	0xFF1
  4093                           postinc0	equ	0xFEE
  4094                           fsr0h	equ	0xFEA
  4095                           fsr0l	equ	0xFE9
  4096                           wreg	equ	0xFE8
  4097                           postinc1	equ	0xFE6
  4098                           postdec1	equ	0xFE5
  4099                           fsr1h	equ	0xFE2
  4100                           fsr1l	equ	0xFE1
  4101                           postinc2	equ	0xFDE
  4102                           postdec2	equ	0xFDD
  4103                           fsr2h	equ	0xFDA
  4104                           fsr2l	equ	0xFD9
  4105                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56     100
    BANK0           128     10      50
    BANK1           256      0       0
    BANK2           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ProcessHeat
    _ShutDownSystem->_delay_ms
    _ProcessHeat->_GetAdcAD597Value
    _GetAdcAD597Value->_AD_Converter
    _GetAdcChargBatValue->_AD_Converter
    _GetAdcBatValue->_AD_Converter
    _AD_Converter->_delay_10us

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    11      5    5464
                                             50 COMRAM     6     1      5
                                              0 BANK0     10    10      0
                     _GetAdcBatValue
                _GetAdcChargBatValue
                       _InitializeAD
                     _InitializeINT0
               _InitializeInterrupts
               _InitializeOscillator
                   _InitializePinmux
                   _InitializeTimer0
                    _LevelTmpSetShow
                      _ProcessButton
                        _ProcessHeat
                         _ReadEEprom
                     _ShutDownSystem
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _ShutDownSystem                                       1     1      0     676
                                             28 COMRAM     1     1      0
                           _delay_ms
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2     676
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ProcessHeat                                         11    11      0    1525
                                             39 COMRAM    11    11      0
                   _GetAdcAD597Value
                 _HeatProcessLedShow
                         _ReadEEprom
                        _WriteEEprom
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (2) _WriteEEprom                                          2     1      1     116
                                             22 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ReadEEprom                                           1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HeatProcessLedShow                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetAdcAD597Value                                     8     6      2     995
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _ProcessButton                                        8     8      0      37
                                             22 COMRAM     8     8      0
                    _LevelTmpSetShow
 ---------------------------------------------------------------------------------
 (2) _LevelTmpSetShow                                      0     0      0       0
                      _turnOffAllLed
 ---------------------------------------------------------------------------------
 (1) _turnOffAllLed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeTimer0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializePinmux                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeOscillator                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeINT0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeAD                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetAdcChargBatValue                                  8     6      2    1026
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _GetAdcBatValue                                       8     6      2    1026
                                             31 COMRAM     8     6      2
                       _AD_Converter
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     565
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _AD_Converter                                         7     5      2     133
                                             24 COMRAM     7     5      2
                         _delay_10us
 ---------------------------------------------------------------------------------
 (4) _delay_10us                                           2     2      0      68
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 22    22      0       0
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetAdcBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _GetAdcChargBatValue
     _AD_Converter
       _delay_10us
     ___lwdiv
   _InitializeAD
   _InitializeINT0
   _InitializeInterrupts
   _InitializeOscillator
   _InitializePinmux
   _InitializeTimer0
   _LevelTmpSetShow
     _turnOffAllLed
   _ProcessButton
     _LevelTmpSetShow
       _turnOffAllLed
   _ProcessHeat
     _GetAdcAD597Value
       _AD_Converter
         _delay_10us
       ___lwdiv
     _HeatProcessLedShow
     _ReadEEprom
     _WriteEEprom
     _turnOffAllLed
   _ReadEEprom
   _ShutDownSystem
     _delay_ms
     _turnOffAllLed
   _delay_ms
   _turnOffAllLed

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2EE      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            EF      0       0       8        0.0%
BANK2               EF      0       0       9        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      A      32       4       39.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      64       1       79.4%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96       5        0.0%
DATA                 0      0      96      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Oct 14 15:40:53 2015

              _buttonPushTimeStop 0051                       __CFG_CP0$ON 000000  
                     __CFG_CP1$ON 000000              __size_of_WriteEEprom 0028  
             _buttonPushTimeStart 004D                                l71 01B8  
                              l81 01F4                                l74 0198  
                              l97 0318                       __CFG_CPB$ON 000000  
                     __CFG_CPD$ON 000000                       __CFG_BORV$3 000000  
                     __CFG_OSC$HS 000000                               l135 0BCA  
                             l232 0AC0                               l270 04F0  
                             l415 0A60                               l263 047A  
                             l255 0406                               l417 0A68  
                             l249 053A                               l418 0A76  
                             l362 0B1E                               l369 0BE6  
                             l474 06CC                               l477 070A  
                             l883 0A0A                               _ISR 0008  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                              ?_ISR 0001  
                    __CFG_WDT$OFF 000000                              l2212 0BB8  
                            l2310 092E                              l2400 07EA  
                            l2320 0954                              l2410 0838  
                            l2330 097E                              l2314 093A  
                            l2244 09D8                              l2420 0868  
                            l2324 0962                              l2308 0B3C  
                            l2500 03E8                              l2246 09E0  
                            l2414 0840                              l2406 0826  
                            l2350 089C                              l2334 098E  
                            l2318 094A                              l2342 09AC  
                            l2262 0AF0                              l2256 0A00  
                            l2248 09E4                              l2360 08EA  
                            l2328 0974                              l2272 0B0A  
                            l2264 0AF8                              l2450 06F6  
                            l2442 06DA                              l2370 090E  
                            l2346 0894                              l2338 09A2  
                            l2282 0BF2                              l2506 0408  
                            l2274 0B0E                              l2610 0054  
                            l2364 08F2                              l2356 08D8  
                            l2524 047C                              l2508 0436  
                            l2438 06D6                              l2526 04AA  
                            l2518 045C                              l2550 0534  
                            l2630 0126                              l2614 0090  
                            l2288 0A8A                              l2456 0702  
                            l2544 04F2                              l2712 02B8  
                            l2570 0738                              l2538 04D2  
                            l2642 017C                              l2618 00B0  
                            l2396 07E2                              l2580 0786  
                            l2468 071E                              l2492 03C4  
                            l2548 0520                              l2484 037E  
                            l2556 0A18                              l2628 0104  
                            l2590 07B6                              l2566 0730  
                            l2726 02EC                              l2742 033A  
                            l2670 020E                              l2638 015C  
                            l2584 078E                              l2576 0774  
                            l2488 03B0                              l2680 0234  
                            l2664 01F0                              l2656 01CA  
                            l2690 026A                              l2674 0214  
                            l2658 01DC                              l2668 0208  
                            l2676 022A                              u2000 0A24  
                            u2020 0A3E                              u2100 0074  
                            u2018 0A26                              u2038 0A40  
                            u2118 0076                              u2080 005E  
                            u2098 0060                              u1900 03D0  
                            u1910 0402                              u1930 0442  
                            u1940 0476                              u1960 04B6  
                            u1970 04EC                      __CFG_PWRT$ON 000000  
                    __CFG_WRT0$ON 000000                      __CFG_WRT1$ON 000000  
                   __CFG_EBTR0$ON 000000                     __CFG_EBTR1$ON 000000  
                    __CFG_WRTB$ON 000000                      __CFG_WRTC$ON 000000  
                    __CFG_WRTD$ON 000000                     __CFG_EBTRB$ON 000000  
                            _main 001A                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0065  
                            pclat 000FFA                      main@adcValue 00B0  
                            prodh 000FF4                              prodl 000FF3  
                            start 0016                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
   __size_of_InitializeInterrupts 0008                             ??_ISR 0001  
                           ?_main 0033                             _EEADR 000FA9  
                 __end_of___lwdiv 0A14                             i2l331 0600  
                           i2l333 062A                             i2l329 05F0  
                    main@keyValue 00AD                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _PORTC 000F82  
                  __CFG_FCMEN$OFF 000000     GetAdcAD597Value@channelNumber 0024  
   __size_of_InitializeOscillator 0002              __end_of_AD_Converter 0AE6  
                           main@i 00AE       __end_of_GetAdcChargBatValue 07D4  
                  __CFG_BOREN$OFF 000000                             tablat 000FF5  
                   ?_InitializeAD 0001                             status 000FD8  
                      _ReadEEprom 0BE4                   __initialization 0B6C  
         __size_of_InitializeINT0 0008                      __end_of_main 0342  
        ProcessHeat@countHeatTime 002D         __size_of_InitializePinmux 0028  
       __size_of_InitializeTimer0 0018                            ??_main 0038  
                   __activetblptr 000002               ProcessHeat@adcValue 0031  
        __size_of_LevelTmpSetShow 0046                            _ADCON0 000FC2  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _EECON2 000FA7  
                  ??_InitializeAD 0017                            i2l1640 0596  
                          i2l1644 059E                            i2l1662 061A  
                 WriteEEprom@addr 0018                   WriteEEprom@data 0017  
             ProcessHeat@flagStop 002C            __size_of_turnOffAllLed 0008  
              GetAdcBatValue@temp 0025                  __end_of_delay_ms 0B1C  
                  __CFG_XINST$OFF 000000       __size_of_HeatProcessLedShow 0096  
                  __CFG_STVREN$ON 000000                            _cyData 0060  
                ??_GetAdcBatValue 0022                         ??___lwdiv 001B  
                          clear_0 0B72                            clear_1 0B7E  
       AD_Converter@channelNumber 001D                     _S2KeyPushTime 005F  
        __end_of_GetAdcAD597Value 092C                            tblptrh 000FF7  
                          tblptrl 000FF6                     ??_ProcessHeat 0028  
                          tblptru 000FF8                   _levelTmpSetting 0062  
                      __accesstop 0080           __end_of__initialization 0B84  
                 __CFG_PBADEN$OFF 000000                       ?_ReadEEprom 0001  
         __size_of_ShutDownSystem 0046                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001       GetAdcBatValue@channelNumber 0024  
           __end_of_ProcessButton 0722                   _timerHalfSecond 005D  
                   _turnOffAllLed 0BFA             __size_of_AD_Converter 0046  
               GetAdcAD597Value@i 0027                        __pbssBANK0 0080  
             __end_of_ProcessHeat 053E                        _delay_10us 0BB0  
               ??_LevelTmpSetShow 0017                     ??_WriteEEprom 0018  
                  _InitializeINT0 0C0A                      _AD_Converter 0AA0  
            __end_of_InitializeAD 0BB0                  _InitializePinmux 0B44  
                _InitializeTimer0 0BCC                    ?_turnOffAllLed 0001  
                 _flagS2KeyPushed 0061              GetAdcChargBatValue@i 0027  
             __size_of_ReadEEprom 0016                         ?_delay_ms 0017  
    __end_of_InitializeInterrupts 0C0A            __end_of_InitializeINT0 0C12  
               main@flagChargeBat 00AC                           __Hparam 0000  
            GetAdcAD597Value@temp 0025                           __Lparam 0000  
                 GetAdcBatValue@i 0027      __end_of_InitializeOscillator 0C14  
                         ___lwdiv 09C2                           __pcinit 0B6C  
                         __ramtop 0300               __end_of_WriteEEprom 0B44  
                         __ptext0 001A                           __ptext1 0A14  
                         __ptext2 0AE6                           __ptext3 0342  
                         __ptext4 0B1C                           __ptext5 0BE4  
                         __ptext6 092C                           __ptext7 0886  
                         __ptext8 0666                           __ptext9 0A5A  
                       _T0CONbits 000FD5                      __size_of_ISR 065E  
                      ??_delay_ms 0019                       _ProcessHeat 0342  
            _pushButtonJitterTime 0055                    __pintcode_body 053E  
            end_of_initialization 0B84                       ?_delay_10us 0001  
                   __Lmediumconst 0000                           int_func 053E  
                  _ShutDownSystem 0A14                   ?_InitializeINT0 0001  
    __size_of_GetAdcChargBatValue 00B2                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                     _adcBatValue 0039                   ??_turnOffAllLed 0017  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82                         _TRISAbits 000F92  
               ?_GetAdcAD597Value 0020                         _TRISBbits 000F93  
                       _TRISCbits 000F94                ??_GetAdcAD597Value 0022  
          __end_of_ShutDownSystem 0A5A                      ??_ReadEEprom 0017  
                  ReadEEprom@addr 0017        __end_of_HeatProcessLedShow 09C2  
           __size_of_InitializeAD 001E                       _WriteEEprom 0B1C  
            _InitializeInterrupts 0C02             AD_Converter@AD_Result 001E  
             __size_of_delay_10us 001C               start_initialization 0B6C  
                 _LevelTmpSetShow 0A5A                       __end_of_ISR 0666  
              __end_of_ReadEEprom 0BFA              _InitializeOscillator 0C12  
                 ?_ShutDownSystem 0001          __end_of_InitializePinmux 0B6C  
        __end_of_InitializeTimer0 0BE4                      _InitializeAD 0B92  
                   _adcAD597Value 0080             ?_InitializeInterrupts 0001  
                __CFG_LPT1OSC$OFF 000000                       __pbssCOMRAM 0039  
                   __pcstackBANK0 00A8           __size_of_GetAdcBatValue 00B2  
           ?_InitializeOscillator 0001                 __size_of_delay_ms 0036  
          __size_of_ProcessButton 00BC                  ___lwdiv@dividend 0017  
               __CFG_CCP2MX$PORTC 000000                         __pintcode 0008  
                        ?___lwdiv 0017           __end_of_LevelTmpSetShow 0AA0  
             _GetAdcChargBatValue 0722                      ?_ProcessHeat 0001  
                ___lwdiv@quotient 001C                  ??_InitializeINT0 0017  
                    ??_delay_10us 0017                         delay_ms@i 001B  
                       delay_ms@j 0019                         delay_ms@x 0017  
          ??_InitializeInterrupts 0017              ?_GetAdcChargBatValue 0020  
                        _PIR1bits 000F9E                  __CFG_WDTPS$32768 000000  
                   _ProcessButton 0666                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
              __end_of_delay_10us 0BCC            ??_InitializeOscillator 0017  
                     _INTCON2bits 000FF1                        _EECON1bits 000FA6  
           ??_GetAdcChargBatValue 0022         __size_of_GetAdcAD597Value 00A6  
                        __Hrparam 0000                          __Lrparam 0000  
                    ?_WriteEEprom 0017                    ?_ProcessButton 0001  
                __size_of___lwdiv 0052                  ?_LevelTmpSetShow 0001  
           __end_of_turnOffAllLed 0C02                     _timeSystemRun 0059  
              _HeatProcessLedShow 092C                 main@countHeatTime 00A8  
                  _GetAdcBatValue 07D4                          _delay_ms 0AE6  
                ??_ShutDownSystem 001D                   ___lwdiv@divisor 0019  
                 ___lwdiv@counter 001B               ?_HeatProcessLedShow 0001  
                        __ptext10 0BFA                          __ptext11 0BCC  
                        __ptext20 0AA0                          __ptext12 0B44  
                        __ptext21 0BB0                          __ptext13 0C12  
                        __ptext14 0C02                          __ptext15 0C0A  
                        __ptext16 0B92                          __ptext17 0722  
                        __ptext18 07D4                          __ptext19 09C2  
                     delay_10us@i 0017                 ?_InitializePinmux 0001  
               ?_InitializeTimer0 0001                     __size_of_main 0328  
GetAdcChargBatValue@channelNumber 0024                ??_InitializePinmux 0017  
              ??_InitializeTimer0 0017           GetAdcChargBatValue@temp 0025  
   ProcessButton@buttonPushPeriod 001B              ??_HeatProcessLedShow 0017  
                   ?_AD_Converter 0019                          int$flags 0065  
                        main@argc 0033                          main@argv 0035  
              _adcChargeStatValue 0094            __end_of_GetAdcBatValue 0886  
                      _INTCONbits 000FF2              __size_of_ProcessHeat 01FC  
                        intlevel2 0000                   ??_ProcessButton 0017  
                  ??_AD_Converter 001B                       _timer0Count 0063  
                     _timer1Count 0064                   ?_GetAdcBatValue 0020  
                _GetAdcAD597Value 0886  
